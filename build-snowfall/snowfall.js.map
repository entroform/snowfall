{"version":3,"sources":["../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","rocket.ts","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","core/num.ts","core/string-util.ts","core/util.ts","dom/dom-align-offset.ts","dom/dom-box-model.ts","dom/dom-image.ts","dom/dom-offset.ts","dom/dom-point.ts","dom/dom-rectangle.ts","dom/dom-scroll.ts","dom/dom-style.ts","dom/dom-text.ts","dom/dom-traverse.ts","dom/dom-util.ts","dom/dom-view.ts","viewport.ts","two/angle.ts","two/geometry.ts","two/point.ts","two/vector-2.ts","two/vector-2-group.ts","animation/animation-config.ts","../node_modules/regenerator-runtime/runtime.js","../node_modules/@babel/runtime/regenerator/index.js","animation/animation-core.ts","animation/animation.ts","easings.ts","color/color.ts","color/convert-color.ts","mono-tap/config.ts","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","mono-tap/mono-tap-event.ts","mono-tap/sensors/sensor.ts","mono-tap/sensors/mouse-sensor.ts","mono-tap/sensors/touch-sensor.ts","mono-tap/mono-tap-story.ts","mono-tap/sensor-hub.ts","mono-tap/mono-tap.ts","mono-drag/config.ts","mono-drag/mono-drag-story.ts","mono-drag/mono-drag-event.ts","mono-drag/sensors/mouse-sensor.ts","mono-drag/sensors/touch-sensor.ts","mono-drag/sensor-hub.ts","mono-drag/mono-drag.ts","poly-drag/config.ts","poly-drag/poly-drag-story.ts","poly-drag/poly-drag-event.ts","poly-drag/sensors/mouse-sensor.ts","poly-drag/sensors/touch-sensor.ts","poly-drag/sensor-hub.ts","poly-drag/poly-drag.ts","pointer-move/config.ts","pointer-move/pointer-move.ts","text-auto-scaler/config.ts","text-auto-scaler/text-auto-scaler.ts","repeater/config.ts","repeater/repeater.ts","ticker/config.ts","ticker/ticker.ts","scroll-trigger-manager/scroll-trigger-manager.ts","listen.ts","../node_modules/simplex-noise/simplex-noise.js","snow.js","snowfall.js"],"names":["SNOW_DEFAULT_CONFIG","initialAngle","initialAngleVelocity","initialVelocityX","initialVelocityY","mass","maximumSpeed","radius","seedX","seedY","startingX","startingY","imageType","opacity","Snow","config","snowfall","setConfig","position","Vector2","velocity","acceleration","angleAcceleration","angleVelocity","angle","simplex","SimplexNoise","Object","assign","force","divide","add","frictionCoefficient","friction","clone","normalize","multiply","applyForce","gravity","t","x","noise2D","y","directionForce","subtract","distance","magnitude","G","strength","Math","cos","sin","life","die","limit","Num","clamp","canvasElement","height","random","width","SNOWFALL_DEFAULT_CONFIG","targetElement","resolutionMultiplier","maximumNumberOfSnowParticles","snowParticleImages","prepareCanvasElement","style","maxWidth","maxHeight","margin","Snowfall","ticker","Ticker","loopForever","onTick","args","tick","apply","snows","pointerPosition","mouseIsDown","images","orientationVector","createCanvasElement","insertCanvasElement","length","Promise","all","map","image","DOMImage","loadImageFromSource","then","data","push","resolve","start","listen","document","createElement","context","getContext","DOMTraverse","hasDescendant","prependChild","resizeCanvas","Viewport","snow","n","c","spawn","i","applyGravity","applyLateralEntropy","applyFriction","update","draw","m","clearRect","save","translate","rotate","transform","beginPath","size","globalAlpha","drawImage","fill","restore","window","addEventListener","resizeHandler","bind"],"mappings":"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","file":"snowfall.js","sourceRoot":"../source","sourcesContent":["function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","// @interfaces\nexport * from './interfaces';\n\n// @core\nexport * from './core/num';\nexport * from './core/string-util';\nexport * from './core/util';\n\n// @dom\nexport * from './dom/dom-align-offset';\nexport * from './dom/dom-box-model';\nexport * from './dom/dom-image';\nexport * from './dom/dom-offset';\nexport * from './dom/dom-point';\nexport * from './dom/dom-rectangle';\nexport * from './dom/dom-scroll';\nexport * from './dom/dom-style';\nexport * from './dom/dom-text';\nexport * from './dom/dom-traverse';\nexport * from './dom/dom-util';\nexport * from './dom/dom-view';\n\n// @viewport\nexport * from './viewport';\n\n// @two\nexport * from './two/angle';\nexport * from './two/geometry';\nexport * from './two/point';\nexport * from './two/vector-2';\nexport * from './two/vector-2-group';\n\n// @animation\nexport * from './animation/animation';\nexport * from './easings';\n\n// @color\nexport * from './color/color';\nexport * from './color/convert-color';\n\n// @events\nexport * from './mono-tap/mono-tap';\nexport * from './mono-drag/mono-drag';\nexport * from './poly-drag/poly-drag';\nexport * from './pointer-move/pointer-move';\n\n// @text-auto-scaler\nexport * from './text-auto-scaler/text-auto-scaler';\n\n// @repeater\nexport * from './repeater/repeater';\n\n// @ticker\nexport * from './ticker/ticker';\n\n// @scroll\nexport * from './scroll-trigger-manager/scroll-trigger-manager';\n\n// @listener\nexport * from './listen';","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","import {\n  NumberOrRange,\n  RangeArray,\n  Util,\n} from '../rocket';\n\nexport function average(...values: number[]): number {\n  if (values.length < 2) {\n    throw new Error ('Num.average: Expects at least two numbers.');\n  }\n  \n  return sum(...values) / values.length;\n}\n\nexport function clamp(value: number, min: number, max: number): number;\nexport function clamp(value: number, range: NumberOrRange): number;\nexport function clamp(value: number, a: NumberOrRange, b?: number): number {\n  let range: RangeArray;\n\n  if (typeof a === 'number' && typeof b === 'number') {\n    range = orderRangeArray([a, b]);\n  } else if (\n    isNumberOrRange(a) === true\n    && typeof b === 'undefined'\n  ) {\n    range = getRangeFromNumberOrRange(a);\n  } else {\n    return value;\n  }\n\n  let [min, max] = orderRangeArray(range);\n\n  return Math.max(min, Math.min(value, max));\n}\n\nexport function countDigits(value: number): number {\n  const matches = value.toString().match(/([\\d])/g);\n\n  if (matches === null) {\n    return 0;\n  }\n\n  return matches.length;\n}\n\nexport function cubicBezier(t: number, p1: number, cp1: number, cp2: number, p2: number): number {\n  return (\n    Math.pow(1 - t, 3) * p1 +\n    3 * t * Math.pow(1 - t, 2) * cp1 +\n    3 * t * t * (1 - t) * cp2 +\n    t * t * t * p2\n  );\n}\n\nexport function cycle(\n  value: number,\n  range: NumberOrRange,\n): number {\n  range = getRangeFromNumberOrRange(range);\n\n  const [min, max] = orderRangeArray(range);\n\n  if (min === 0 && max === 0) {\n    return 0;\n  }\n\n  const da = getEuclideanDistance(min, max);\n\n  if (value > max) {\n    let db = getEuclideanDistance(value, max);\n\n    let c = (db % da) + min;\n\n    if (c === min) {\n      return max;\n    }\n\n    return c;\n  } else if (value < min) {\n    let db = getEuclideanDistance(value, min);\n\n    let c = max - (db % da);\n\n    if (c === max) {\n      return min;\n    }\n\n    return c;\n  }\n\n  return value;\n}\n\n// https://en.wikipedia.org/wiki/Euclidean_distance\nexport function getEuclideanDistance(a: number, b: number): number {\n  if (a === b) {\n    return 0;\n  }\n\n  return Math.sqrt(Math.abs((a - b) * (b - a)));\n}\n\nexport function getSign(value: number): number {\n  const sign = Math.sign(value);\n\n  if (sign === 0) {\n    return 1;\n  }\n\n  return sign;\n}\n\nexport function hypotenuse(x: number, y: number): number {\n  let max = Math.max(Math.abs(x), Math.abs(y));\n\n  if (max === 0) {\n    max = 1;\n  }\n\n  const min = Math.min(Math.abs(x), Math.abs(y));\n\n  const n = min / max;\n\n  return max * Math.sqrt(1 + n * n);\n}\n\nexport function lerp(t: number, from: number, to: number): number {\n  return (1 - t) * from + t * to;\n}\n\nexport function random(\n  range: NumberOrRange,\n  whole: boolean = false,\n  fixed: number = 2,\n): number {\n  range = getRangeFromNumberOrRange(range);\n\n  if (range[0] === 0 && range[1] === 1) {\n    if (whole === true) {\n      return Math.floor(Math.random() * 2);\n    } else {\n      return parseFloat(Math.random().toFixed(fixed));\n    }\n  } else {\n    const number = transform(Math.random(), 1, range, false);\n\n    return parseInt(number.toFixed(0), 10);\n  }\n}\n\nexport function reciprocal(value: number): number {\n  if (value != 0) {\n    return 1 / value;\n  } else {\n    throw new Error('Num.reciprocal: Division by zero.');\n  }\n}\n\nexport function roundTo(value: number, to: number = 0): number {\n  return parseFloat(value.toFixed(to));\n}\n\nexport function sum(...values: number[]): number {\n  return values.reduce((previous, current) => previous + current);\n}\n\nexport function sumNumberArrays(...arrays: number[][]): number[] {\n  const maxLength = Util.getMaxArraysLength(...arrays);\n\n  const sum: number[] = [];\n\n  for (let i = 0; i < maxLength; i++) {\n    sum[i] = 0;\n\n    arrays.forEach(array => {\n      if (typeof array[i] === 'number') {\n        sum[i] += array[i];\n      }\n    });\n  }\n\n  return sum;\n}\n\n// https://math.stackexchange.com/questions/377169/calculating-a-value-inside-one-range-to-a-value-of-another-range/377174\nexport function transform(\n  value: number,\n  from: NumberOrRange,\n  to: NumberOrRange,\n  clampResult: boolean = true,\n): number {\n  from = getRangeFromNumberOrRange(from);\n  to = getRangeFromNumberOrRange(to);\n\n  // Division by zero returns Infinite in JavaScript?\n  let result = (value - from[0]) * ((to[1] - to[0]) / (from[1] - from[0])) + to[0];\n\n  if (clampResult === true) {\n    return clamp(result, to);\n  }\n\n  return result;\n}\n\nexport function within(\n  value: number,\n  min: number,\n  max: number,\n  isExclusive?: boolean,\n): boolean;\n\nexport function within(\n  value: number,\n  range: NumberOrRange,\n  isExclusive?: boolean,\n): boolean;\n\nexport function within(\n  value: number,\n  a: NumberOrRange,\n  b?: number | boolean,\n  c?: boolean,\n): boolean {\n  let range: RangeArray;\n\n  let isExclusive = false;\n\n  if (\n    typeof a === 'number' && typeof b === 'number'\n    && (typeof c === 'boolean' || typeof c === 'undefined')\n  ) {\n    if (typeof c === 'boolean') {\n      isExclusive = c;\n    }\n\n    range = orderRangeArray([a, b]);\n  } else if (\n    isNumberOrRange(a) == true\n    && (typeof b === 'boolean' || typeof b === 'undefined')\n  ) {\n    if (typeof b === 'boolean') {\n      isExclusive = b;\n    }\n\n    range = getRangeFromNumberOrRange(a);\n  } else {\n    throw new Error('Num.within: Invalid input.');\n  }\n\n  let [min, max] = range;\n\n  if (isExclusive === true) {\n    return value > min && value < max;\n  } else {\n    return value >= min && value <= max;\n  }\n}\n\nexport function getRangeFromNumberOrRange(range: NumberOrRange): RangeArray {\n  if (typeof range === 'number') {\n    return [0, range];\n  }\n\n  return range;\n}\n\nfunction isNumberOrRange(thing: any): boolean {\n  return typeof thing === 'number' || isRangeArray(thing);\n}\n\nfunction isRangeArray(thing: any): boolean {\n  return (\n    Array.isArray(thing) === true\n    && thing.length === 2\n    && thing.every(member => typeof member === 'number')\n  );\n}\n\nfunction orderRangeArray(range: RangeArray): RangeArray {\n  const min = Math.min(...range);\n  const max = Math.max(...range);\n\n  return [min, max];\n}\n\n/*\n  * Below: Still in progress.\n  */\n\n// Snap value to an interval.\nfunction snapToInterval(value: number, interval: number): number {\n  return Math.round(value / interval) * interval;\n}\n\nexport const Num = {\n  average,\n  clamp,\n  cubicBezier,\n  cycle,\n  getEuclideanDistance,\n  getSign,\n  hypotenuse,\n  lerp,\n  random,\n  reciprocal,\n  roundTo,\n  sum,\n  sumNumberArrays,\n  transform,\n  within,\n  getRangeFromNumberOrRange,\n  isNumberOrRange,\n  isRangeArray,\n  orderRangeArray,\n  snapToInterval,\n}\n\nexport default Num;","export type StringOrRegExp = string | RegExp;\n\nexport function hasUppercaseLetter(...values: string[]): boolean {\n  return values.every(value => value !== value.toLowerCase());\n}\n\nexport function isKebabCase(...values: string[]): boolean {\n  return values.every(value => {\n    return (\n      hasUppercaseLetter(value) === false\n      && value.match(/^([a-z]+|[a-z][a-z\\-]+[a-z])$/g) !== null\n    )\n  });\n}\n\nexport function isSnakeCase(...values: string[]): boolean {\n  return values.every(value => {\n    return (\n      hasUppercaseLetter(value) === false\n      && value.match(/^([a-z]+|[a-z][a-z\\_]+[a-z])$/g) !== null\n    )\n  });\n}\n\nexport function kebabCaseToCamelCase(from: string): string {\n  if (isKebabCase(from) === true) {\n    return from.replace(/(\\-[a-z]{1})/g, match => {\n      return match.replace(/[\\-]/g, '').toUpperCase();\n    });\n  }\n\n  return from;\n}\n\nexport function lowercaseFirstLetter(string: string): string {\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\nexport function match(string: string, regex: RegExp): string | string[] | null {\n  const value = string.match(regex);\n\n  if (!value) {\n    return null;\n  } else if (value.length === 1) {\n    return value[0];\n  }\n\n  return value;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Whitespace_in_the_DOM\nexport function removeExtraWhitespaces(string: string): string {\n  return string.replace(/[\\s]+/g, ' ');\n}\n\nexport function removeNewLines(string: string): string {\n  return string.replace(/[\\r\\n]+/g, '');\n}\n\nexport function removeTabs(string: string): string {\n  return string.replace(/[\\t]+/g, '');\n}\n\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_function_as_a_parameter\nexport function replace(\n  string: string,\n  patterns: StringOrRegExp,\n  replacement: string | Function,\n): string\n\nexport function replace(\n  string: string,\n  patterns: StringOrRegExp[],\n  replacement: string | Function,\n): string\n  \nexport function replace(\n  string: string,\n  patterns: StringOrRegExp | StringOrRegExp[],\n  replacement: string | Function = '',\n): string {\n  if (isStringOrRegExpArray(patterns) === true) {\n    patterns = patterns as StringOrRegExp[];\n\n    patterns.forEach(pattern => {\n      string = string.replace(pattern, replacement as string);\n    });\n  } else if (isStringOrRegExp(patterns) === true) {\n    let pattern = patterns as StringOrRegExp;\n\n    string = string.replace(pattern, replacement as string);\n  }\n\n  return string;\n}\n\nexport function uppercaseFirstLetter(string: string): string {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction isStringOrRegExp(thing: any): boolean {\n  return (typeof thing === 'string' || thing instanceof RegExp);\n}\n\nfunction isStringOrRegExpArray(thing: any): boolean {\n  return (\n    Array.isArray(thing) === true\n    && thing.every(member => isStringOrRegExp(member))\n  );\n}\n\nexport const StringUtil = {\n  hasUppercaseLetter,\n  isKebabCase,\n  isSnakeCase,\n  kebabCaseToCamelCase,\n  lowercaseFirstLetter,\n  match,\n  removeExtraWhitespaces,\n  removeNewLines,\n  removeTabs,\n  replace,\n  uppercaseFirstLetter,  \n}\n\nexport default StringUtil;","import {\n  Num,\n} from '../rocket';\n\nexport function cycleArray<A>(array: A[], offset: number): A {\n  let index = offset % array.length;\n\n  if (offset < 0) {\n    let remainder = Math.abs(offset) % array.length;\n\n    if (remainder === 0) {\n      index = 0;\n    } else {\n      index = array.length + remainder * -1;\n    }\n  }\n\n  return array[index];\n}\n\nexport function cycleArrayNext<A>(array: A[]): Function {\n  let index = -1;\n\n  return function () {\n    index++;\n\n    if (index > array.length - 1) {\n      index = 0;\n    }\n\n    return array[index];\n  };\n}\n\n// Returns a debouncer function that no matter the frequency of calls\n// will only be invoked after the given delay times out (in seconds).\nexport function debounce(func: Function, delayInSeconds: number): Function {\n  let timeout;\n\n  const delay = delayInSeconds * 1000;\n\n  return function() {\n    clearTimeout(timeout);\n\n    timeout = setTimeout(\n      () => func.apply(this, arguments),\n      delay\n    );\n  };\n}\n\nexport function delay(callback: Function, delayInSeconds: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(\n      () => {\n        callback();\n        resolve();\n      },\n      delayInSeconds * 1000\n    );\n  });\n}\n\nexport function fillArraysToLargestLength(filler: unknown, ...arrays: unknown[][]): number {\n  const maxLength = this.getMaxArraysLength(...arrays);\n\n  arrays.forEach(array => {\n    while (array.length < maxLength) {\n      array.push(filler);\n    }\n  });\n\n  return maxLength;\n}\n\nexport function getMaxArraysLength(...arrays: unknown[][]): number {\n  const lengths = arrays.map(array => array.length);\n\n  return Math.max(...lengths);\n}\n\nexport function getMinArraysLength(...arrays: unknown[][]): number {\n  const lengths = arrays.map(array => array.length);\n\n  return Math.min(...lengths);\n}\n\nexport function isEmptyObject(object: any): boolean {\n  return (\n    this.isObject(object)\n    && Object.keys(object).length < 1\n  );\n}\n\nexport function isObject(object: any): boolean {\n  return (\n    object !== null\n    && typeof object === 'object'\n  );\n}\n\nexport function isPromise(...things: any[]): boolean {\n  if (things.length === 0) {\n    return false;\n  }\n\n  const isPromise = thing => {\n    return (\n      typeof thing === 'object'\n      && typeof thing.then === 'function'\n      && thing instanceof Promise\n      && Promise.resolve(thing) === thing\n    );\n  }\n\n  for (let i = 0; i < things.length; i++) {\n    const thing = things[i];\n\n    if (isPromise(thing) === false) {\n      return false;\n    }\n  };\n\n  return true;\n}\n\nexport function promiseChain(...funcs: (() => Promise<void>)[]): Promise<void> {\n  return new Promise((resolve, reject) => {\n    let currentIndex = -1;\n\n    const loop = () => {\n      currentIndex++;\n\n      if (typeof funcs[currentIndex] === 'function') {\n        funcs[currentIndex]()\n          .then(() => loop())\n          .catch(error => reject(error));\n      } else {\n        resolve();\n      }\n    }\n\n    loop();\n  });\n}\n\nexport function promiseEach<A>(array: A[], func: (value: A) => Promise<void>): Promise<void> {\n  if (array.length === 0) {\n    return Promise.resolve();\n  }\n\n  return array.reduce(\n    (previous: Promise<void>, current: A) => {\n      return previous.then(() => func(current));\n    },\n    Promise.resolve(),\n  );\n}\n\nexport function randomChoice<A>(...choices: A[]): A {\n  const index = Num.random(choices.length - 1, true);\n\n  return choices[index];\n}\n\nexport function sleep(timeInSeconds: number): Promise<void> {\n  return new Promise(resolve => setTimeout(() => resolve(), timeInSeconds * 1000));\n}\n\nexport function throttle(func: Function, thresholdInSeconds: number): Function {\n  let timeout;\n  let last;\n\n  const threshold = thresholdInSeconds * 1000;\n\n  return function() {\n    const now = Date.now();\n\n    if (typeof last === 'number' && now < last + threshold) {\n      clearTimeout(timeout);\n\n      timeout = setTimeout(\n        () => {\n          last = now;\n          func.apply(this, arguments);\n        },\n        threshold\n      );\n    } else {\n      last = now;\n\n      func.apply(this, arguments);\n    }\n  };\n}\n\nexport function truthChain(...funcs: (() => boolean)[]): boolean {\n  let result = true;\n\n  for (let i = 0; i < funcs.length; i++) {\n    if (funcs[i]() === false) {\n      result = false;\n\n      break;\n    }\n  }\n\n  return result;\n}\n\nexport const Util = {\n  cycleArray,\n  cycleArrayNext,\n  debounce,\n  delay,\n  fillArraysToLargestLength,\n  getMaxArraysLength,\n  getMinArraysLength,\n  isEmptyObject,\n  isObject,\n  isPromise,\n  promiseChain,\n  promiseEach,\n  randomChoice,\n  sleep,\n  throttle,\n  truthChain,\n}\n\nexport default Util;","import {\n  DOMScroll,\n  DOMUtil,\n  Num,\n  Offset,\n  Point,\n  Util,\n  Viewport,\n} from '../rocket';\n\nexport type DOMAlignOffsetReferenceCornerNames = 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n\nexport type DOMAlignOffsetReferenceEdgeNames = 'top' | 'left' | 'right' | 'bottom';\n\nexport type DOMAlignOffsetReferencePointNames = 'center' | DOMAlignOffsetReferenceCornerNames | DOMAlignOffsetReferenceEdgeNames;\n\nexport const DOMAlignOffsetReferenceCornerNames: DOMAlignOffsetReferenceCornerNames[] = [\n  'top-left',\n  'top-right',\n  'bottom-left',\n  'bottom-right',\n];\n\nexport const DOMAlignOffsetReferenceEdgeNames: DOMAlignOffsetReferenceEdgeNames[] = [\n  'top',\n  'bottom',\n  'left',\n  'right',\n];\n\nexport const DOMAlignOffsetReferencePointNames: DOMAlignOffsetReferencePointNames[] = [\n  'center',\n  ...DOMAlignOffsetReferenceCornerNames,\n  ...DOMAlignOffsetReferenceEdgeNames,\n];\n\nexport const DOMAlignOffsetReferencePointRotation: DOMAlignOffsetReferencePointNames[] = [\n  'top-left',\n  'top',\n  'top-right',\n  'right',\n  'bottom-right',\n  'bottom',\n  'bottom-left',\n];\n\nexport type OffsetRelation = 'viewport' | 'document' | HTMLElement;\n\nexport class DOMAlignOffset {\n  public static getTargetAlignment(\n    target: HTMLElement,\n    targetReferencePoint: DOMAlignOffsetReferencePointNames,\n    anchor: HTMLElement,\n    anchorReferencePoint: DOMAlignOffsetReferencePointNames,\n    relativeTo: OffsetRelation = 'viewport',\n  ): Offset {\n    const targetRect = target.getBoundingClientRect();\n\n    const targetOffset = this.getElementOffset(target, targetReferencePoint);\n    const anchorOffset = this.getElementOffset(anchor, anchorReferencePoint);\n\n    const left = targetRect.left + anchorOffset.left - targetOffset.left;\n    const top = targetRect.top + anchorOffset.top - targetOffset.top;\n\n    return this.transformOffsetRelativeTo({ left, top }, relativeTo);\n  }\n\n  public static getTargetAlignmentToPoint(\n    target: HTMLElement,\n    targetReferencePoint: DOMAlignOffsetReferencePointNames,\n    point: Point,\n    relativeTo: OffsetRelation = 'viewport',\n  ): Offset {\n    const targetRect = target.getBoundingClientRect();\n\n    const targetOffset = this.getElementOffset(target, targetReferencePoint);\n\n    const left = targetRect.left + point.x - targetOffset.left;\n    const top = targetRect.top + point.y - targetOffset.top;\n\n    return this.transformOffsetRelativeTo({ left, top }, relativeTo);\n  }\n\n  public static getTargetAlignmentToView(\n    target: HTMLElement,\n    targetReferencePoint: DOMAlignOffsetReferencePointNames,\n    viewReferencePoint: DOMAlignOffsetReferencePointNames,\n    relativeTo: OffsetRelation = 'viewport',\n  ) {\n    const targetRect = target.getBoundingClientRect();\n\n    const targetOffset = this.getElementOffset(target, targetReferencePoint);\n\n    const viewOffset = this.getViewOffset(viewReferencePoint);\n\n    const left = targetRect.left + viewOffset.left - targetOffset.left;\n    const top = targetRect.top + viewOffset.top - targetOffset.top;\n\n    return this.transformOffsetRelativeTo({ left, top }, relativeTo);\n  }\n\n  public static getComplementaryReferencePoint(\n    referencePoint: DOMAlignOffsetReferencePointNames,\n  ): DOMAlignOffsetReferencePointNames {\n    if (referencePoint === 'center') {\n      return 'center';\n    }\n\n    switch (referencePoint) {\n      case 'top-left': {\n        return 'bottom-right';\n      }\n\n      case 'top': {\n        return 'bottom';\n      }\n\n      case 'top-right': {\n        return 'bottom-left';\n      }\n\n      case 'left': {\n        return 'right';\n      }\n\n      case 'right': {\n        return 'left';\n      }\n\n      case 'bottom-left': {\n        return 'top-right';\n      }\n\n      case 'bottom': {\n        return 'top';\n      }\n\n      case 'bottom-right': {\n        return 'top-left';\n      }\n    }\n  }\n\n  public static getReferencePointFromRotation(\n    from: DOMAlignOffsetReferencePointNames,\n    offset: number,\n  ): DOMAlignOffsetReferencePointNames {\n    if (from === 'center') {\n      return 'center';\n    }\n\n    const fromIndex = DOMAlignOffsetReferencePointRotation.indexOf(from);\n\n    return Util.cycleArray<DOMAlignOffsetReferencePointNames>(\n      DOMAlignOffsetReferencePointRotation,\n      fromIndex + offset,\n    );\n  }\n\n  // This returns an offset based on element reference point and relative to viewport.\n  public static getElementOffset(\n    element: HTMLElement,\n    referencePoint: DOMAlignOffsetReferencePointNames,\n  ): Offset {\n    const rect = element.getBoundingClientRect();\n\n    let left;\n    let top;\n\n    left = top = 0;\n\n    const leftCenter = rect.left + Num.getEuclideanDistance(rect.left, rect.right) / 2;\n    const topCenter = rect.top + Num.getEuclideanDistance(rect.top, rect.bottom) / 2;\n\n    switch (referencePoint) {\n      case 'center': {\n        left = leftCenter;\n        top = topCenter;\n\n        break;\n      }\n\n      case 'top-left': {\n        left = rect.left;\n        top = rect.top;\n\n        break;\n      }\n\n      case 'top': {\n        left = leftCenter;\n        top = rect.top;\n\n        break;\n      }\n\n      case 'top-right': {\n        left = rect.right;\n        top = rect.top;\n\n        break;\n      }\n\n      case 'left': {\n        left = rect.left;\n        top = topCenter;\n\n        break;\n      }\n\n      case 'right': {\n        left = rect.right;\n        top = topCenter;\n\n        break;\n      }\n\n      case 'bottom-left': {\n        left = rect.left;\n        top = rect.bottom;\n\n        break;\n      }\n\n      case 'bottom': {\n        left = leftCenter;\n        top = rect.bottom;\n\n        break;\n      }\n\n      case 'bottom-right': {\n        left = rect.right;\n        top = rect.bottom;\n\n        break;\n      }\n    }\n\n    return { left, top };\n  }\n\n  public static getViewOffset(referencePoint: DOMAlignOffsetReferencePointNames): Offset {\n    let left = 0, top = 0;\n\n    const leftCenter = Viewport.width / 2;\n    const topCenter = Viewport.height / 2;\n\n    switch (referencePoint) {\n      case 'center': {\n        left = leftCenter;\n        top = topCenter;\n\n        break;\n      }\n\n      case 'top-left': {\n        break;\n      }\n\n      case 'top': {\n        left = leftCenter;\n\n        break;\n      }\n\n      case 'top-right': {\n        left = Viewport.width;\n\n        break;\n      }\n\n      case 'left': {\n        top = topCenter;\n\n        break;\n      }\n\n      case 'right': {\n        left = Viewport.width;\n        top = topCenter;\n\n        break;\n      }\n\n      case 'bottom-left': {\n        top = Viewport.height;\n\n        break;\n      }\n\n      case 'bottom': {\n        left = leftCenter;\n        top = Viewport.height;\n\n        break;\n      }\n\n      case 'bottom-right': {\n        left = Viewport.width;\n        top = Viewport.height;\n\n        break;\n      }\n    }\n\n    return { left, top };\n  }\n\n  // This returns an offset from element reference point to origin (top-left).\n  public static getOffsetFromTargeReferencePointToOrigin(\n    target: HTMLElement,\n    referencePoint: DOMAlignOffsetReferencePointNames,\n  ): Offset {\n    const { left, top } = target.getBoundingClientRect();\n\n    const offset = this.getElementOffset(target, referencePoint);\n\n    return {\n      left: left - offset.left,\n      top: top - offset.top,\n    };\n  }\n\n  // Transform offset relation to either document, viewport, or an element.\n  public static transformOffsetRelativeTo(offset: Offset, to: OffsetRelation): Offset {\n    let { left, top } = offset;\n\n    if (to === 'document') {\n      left = left + DOMScroll.scrollLeft;\n      top = top + DOMScroll.scrollTop;\n    } else if (to === 'viewport') {\n      left = left;\n      top = top;\n    } else if (DOMUtil.isHTMLElement(to) === true) {\n      const target = to as HTMLElement;\n\n      const rect = target.getBoundingClientRect();\n\n      left = left - rect.left;\n      top = top - rect.top;\n    }\n\n    return { left, top };\n  }\n\n  // Apply spacing to offset..\n  public static applySpacingToOffset(\n    offset: Offset,\n    referencePoint: DOMAlignOffsetReferencePointNames,\n    spacing: number,\n  ): Offset {\n    let { left, top } = offset;\n\n    if (referencePoint === 'center') {\n      return { left, top };\n    } else if (\n      DOMAlignOffsetReferenceCornerNames.indexOf(\n        referencePoint as DOMAlignOffsetReferenceCornerNames,\n      ) !== -1\n    ) {\n      let cornerSpacing = this.calculateCornerSpacing(spacing);\n\n      switch (referencePoint) {\n        case 'top-left': {\n          left = left - cornerSpacing;\n          top = top - cornerSpacing;\n\n          break;\n        }\n\n        case 'top-right': {\n          left = left + cornerSpacing;\n          top = top - cornerSpacing;\n\n          break;\n        }\n\n        case 'bottom-left': {\n          left = left - cornerSpacing;\n          top = top + cornerSpacing;\n\n          break;\n        }\n\n        case 'bottom-right': {\n          left = left + cornerSpacing;\n          top = top + cornerSpacing;\n\n          break;\n        }\n      }\n\n      return { left, top };\n    } else {\n      switch (referencePoint) {\n        case 'top': {\n          top = top - spacing;\n\n          break;\n        }\n\n        case 'bottom': {\n          top = top + spacing;\n\n          break;\n        }\n\n        case 'left': {\n          left = left - spacing;\n\n          break;\n        }\n\n        case 'right': {\n          left = left + spacing;\n\n          break;\n        }\n      }\n\n      return { left, top };\n    }\n  }\n\n  public static calculateCornerSpacing(spacing: number): number {\n    return Math.cos(Math.PI / 4) * spacing;\n  }\n}\n","// DOMBoxModel is helper function to get data on element box-model.\n// Similar to: https://github.com/InlineManual/dom-box\n\nimport {\n  DOMStyle,\n} from '../rocket';\n\nexport class DOMBoxModel {\n  public static getTotalHorizontalMargins(element: HTMLElement): number {\n    const style = window.getComputedStyle(element);\n\n    const { marginLeft, marginRight } = style;\n\n    const left = marginLeft ? parseFloat(marginLeft) : 0;\n    const right = marginRight ? parseFloat(marginRight) : 0;\n\n    return left + right;\n  }\n\n  public static getTotalVerticalMargins(element: HTMLElement): number {\n    const style = window.getComputedStyle(element);\n\n    const { marginTop, marginBottom } = style;\n\n    const top = marginTop ? parseFloat(marginTop) : 0;\n    const bottom = marginBottom ? parseFloat(marginBottom) : 0;\n\n    return top + bottom;\n  }\n\n  public static getTotalHorizontalBorderWidths(element: HTMLElement): number {\n    const style = window.getComputedStyle(element);\n\n    const { borderLeftWidth, borderRightWidth } = style;\n\n    const left = borderLeftWidth ? parseFloat(borderLeftWidth) : 0;\n    const right = borderRightWidth ? parseFloat(borderRightWidth) : 0;\n\n    return left + right;\n  }\n\n  public static getTotalVerticalBorderWidths(element: HTMLElement): number {\n    const style = window.getComputedStyle(element);\n\n    const { borderTopWidth, borderBottomWidth } = style;\n\n    const top = borderTopWidth ? parseFloat(borderTopWidth) : 0;\n    const bottom = borderBottomWidth ? parseFloat(borderBottomWidth) : 0;\n\n    return top + bottom;\n  }\n\n  public static getTotalHorizontalPaddings(element: HTMLElement): number {\n    const style = window.getComputedStyle(element);\n\n    const { paddingLeft, paddingRight } = style;\n\n    const left = paddingLeft ? parseFloat(paddingLeft) : 0;\n    const right = paddingRight ? parseFloat(paddingRight) : 0;\n\n    return left + right;\n  }\n\n  public static getTotalVerticalPaddings(element: HTMLElement): number {\n    const style = window.getComputedStyle(element);\n\n    const { paddingTop, paddingBottom } = style;\n\n    const top = paddingTop ? parseFloat(paddingTop) : 0;\n    const bottom = paddingBottom ? parseFloat(paddingBottom) : 0;\n\n    return top + bottom;\n  }\n\n  public static getTotalHorizontalInnerSpace(element: HTMLElement): number {\n    if (DOMStyle.getBoxSizing(element) === 'border-box') {\n      return this.getTotalHorizontalPaddings(element) + this.getTotalHorizontalBorderWidths(element);\n    }\n\n    return this.getTotalHorizontalPaddings(element);\n  }\n\n  public static getTotalVerticalInnerSpace(element: HTMLElement): number {\n    if (DOMStyle.getBoxSizing(element) === 'border-box') {\n      return this.getTotalVerticalPaddings(element) + this.getTotalVerticalBorderWidths(element);\n    }\n\n    return this.getTotalVerticalPaddings(element);\n  }\n\n  public static getTotalHorizontalOuterSpace(element: HTMLElement): number {\n    if (DOMStyle.getBoxSizing(element) === 'content-box') {\n      return this.getTotalHorizontalMargins(element) + this.getTotalHorizontalBorderWidths(element);\n    }\n\n    return this.getTotalHorizontalMargins(element);\n  }\n\n  public static getTotalVerticalOuterSpace(element: HTMLElement): number {\n    if (DOMStyle.getBoxSizing(element) === 'content-box') {\n      return this.getTotalVerticalMargins(element) + this.getTotalVerticalBorderWidths(element);\n    }\n\n    return this.getTotalVerticalMargins(element);\n  }\n\n  public static getTotalHorizontalDimension(\n    element: HTMLElement,\n    includeTransform: boolean = false,\n  ): number {\n    let width = element.offsetWidth;\n\n    if (includeTransform === true) {\n      width = element.getBoundingClientRect().width;\n    }\n\n    return width + this.getTotalHorizontalOuterSpace(element);\n  }\n\n  public static getTotalVerticalDimension(\n    element: HTMLElement,\n    includeTransform: boolean = false,\n  ): number {\n    let height = element.offsetHeight;\n    \n    if (includeTransform === true) {\n      height = element.getBoundingClientRect().height;\n    }\n\n    return height + this.getTotalVerticalOuterSpace(element);\n  }\n\n  public static getContentWidth(element: HTMLElement): number {\n    return element.offsetWidth - DOMBoxModel.getTotalHorizontalInnerSpace(element);\n  }\n\n  public static getContentHeight(element: HTMLElement): number {\n    return element.offsetHeight - DOMBoxModel.getTotalVerticalInnerSpace(element);\n  }\n}\n","import {\n  Size,\n} from '../rocket';\n\nexport interface DOMImagePromiseValue {\n  image: HTMLImageElement;\n  source: string;\n  width: number;\n  height: number;\n}\n\nexport class DOMImage {\n  public static loadImageFromSource(source: string): Promise<DOMImagePromiseValue> {\n    return new Promise((resolve, reject) => {\n      const image = new Image();\n\n      image.addEventListener('load', () => {\n        const width = image.width;\n        const height = image.height;\n\n        resolve({ image, source, width, height });\n      });\n\n      image.addEventListener('error', () => {\n        reject(new Error('DOMImage.loadImageFromSource: There is an error loading image.'));\n      });\n\n      image.src = source;\n    });\n  }\n\n  public static getImageSizeFromSource(\n    source: string,\n    timeoutInSeconds: number = 1,\n    checkIntervalInMilliseconds: number = 10,\n  ): Promise<Size> {\n    return new Promise((resolve, reject) => {\n      const image = new Image();\n\n      image.addEventListener('error', () => {\n        reject(new Error('DOMImage.getImageSizeFromSource: There is an error loading image.'));\n      });\n\n      image.src = source;\n\n      let timeoutId;\n\n      const intervalId = setInterval(\n        () => {\n          if (\n            typeof image.naturalWidth === 'number'\n            && typeof image.naturalHeight === 'number'\n          ) {\n            clearTimeout(timeoutId);\n            clearInterval(intervalId);\n\n            resolve({\n              width: image.naturalWidth,\n              height: image.naturalHeight,\n            });\n          }\n        },\n        checkIntervalInMilliseconds\n      );\n\n      timeoutId = setTimeout(\n        () => {\n          clearInterval(intervalId);\n          reject(new Error('DOMImage.getImageSizeFromSource: Timeout trying to get image size.'));\n        },\n        timeoutInSeconds * 1000\n      );\n    });\n  }\n}\n","import {\n  DOMScroll,\n  FullOffset,\n  Num,\n} from '../rocket';\n\nexport class DOMOffset {\n  public static getElementOffsetFromAnotherElement(from: HTMLElement, to: HTMLElement): FullOffset {\n    const fromRect = from.getBoundingClientRect();\n    const toRect = to.getBoundingClientRect();\n\n    const top = Num.getEuclideanDistance(fromRect.top, toRect.top);\n    const bottom = Num.getEuclideanDistance(fromRect.bottom, toRect.bottom);\n\n    const left = Num.getEuclideanDistance(fromRect.left, toRect.left);\n    const right = Num.getEuclideanDistance(fromRect.right, toRect.right);\n\n    return { top, bottom, left, right };\n  }\n\n  public static getElementOffsetFromDocument(element: HTMLElement): FullOffset {\n    const rect = element.getBoundingClientRect();\n\n    const { scrollLeft, scrollTop } = DOMScroll;\n\n    const top = rect.top + scrollTop;\n    const bottom = rect.bottom + scrollTop;\n\n    const left = rect.left + scrollLeft;\n    const right = rect.right + scrollLeft;\n\n    return { top, bottom, left, right };\n  }\n\n  public static getElementOffsetFromView(element: HTMLElement): FullOffset {\n    const { top, bottom, left, right } = element.getBoundingClientRect();\n\n    return { top, bottom, left, right };\n  }\n}\n","import {\n  Num,\n  Point,\n} from '../rocket';\n\ninterface IdentifiyElementFunction {\n  (element: HTMLElement): boolean;\n}\n\nexport class DOMPoint {\n  // Point is relative to viewport. (clientX, clientY)\n  // Offset is relative to Point.\n  public static getElementOffsetFromPoint(\n    element: HTMLElement,\n    { x, y }: Point,\n  ): Point {\n    const { left, top } = element.getBoundingClientRect();\n\n    return new Point(\n      Num.getEuclideanDistance(left, x),\n      Num.getEuclideanDistance(top, y),\n    );\n  }\n\n  public static getElementCornerPoints(element: HTMLElement): Point[] {\n    const { top, bottom, left, right } = element.getBoundingClientRect();\n\n    return [\n      new Point(left, top),\n      new Point(left, bottom),\n      new Point(right, top),\n      new Point(right, bottom),\n    ];\n  }\n\n  public static getElementCenterPoint(element: HTMLElement): Point {\n    const { left, top, width, height } = element.getBoundingClientRect();\n\n    return new Point(\n      left + width / 2,\n      top + height / 2,\n    );\n  }\n\n  public static getElementDiagonalPoints(element: HTMLElement): [Point, Point] {\n    const { top, bottom, left, right } = element.getBoundingClientRect();\n\n    return [\n      new Point(left, top),\n      new Point(right, bottom),\n    ];\n  }\n\n  public static getElementTopPoints(element: HTMLElement): Point[] {\n    const { left, right, top } = element.getBoundingClientRect();\n\n    return [\n      new Point(left, top),\n      new Point(right, top),\n    ];\n  }\n\n  public static getElementBottomPoints(element: HTMLElement): Point[] {\n    const { left, right, bottom } = element.getBoundingClientRect();\n\n    return [\n      new Point(left, bottom),\n      new Point(right, bottom),\n    ];\n  }\n\n  public static getElementLeftPoints(element: HTMLElement): Point[] {\n    const { left, top, bottom } = element.getBoundingClientRect();\n\n    return [\n      new Point(left, top),\n      new Point(left, bottom),\n    ];\n  }\n\n  public static getElementRightPoints(element: HTMLElement): Point[] {\n    const { right, top, bottom } = element.getBoundingClientRect();\n\n    return [\n      new Point(right, top),\n      new Point(right, bottom),\n    ];\n  }\n\n  public static isElementAbovePoints(\n    element: HTMLElement,\n    points: Point | Point[],\n    offset: number = 0,\n  ) {\n    const { bottom } = element.getBoundingClientRect();\n\n    if (Array.isArray(points) === true) {\n      let isAbovePoints = true;\n\n      points = points as Point[];\n\n      points.forEach(({ y }) => {\n        if (bottom + offset < y === false) {\n          isAbovePoints = false;\n        }\n      });\n\n      return isAbovePoints;\n    }\n\n    const point = points as Point;\n\n    return bottom + offset < point.y;\n  }\n\n  public static isElementBelowPoints(\n    element: HTMLElement,\n    points: Point | Point[],\n    offset: number = 0,\n  ) {\n    const { top } = element.getBoundingClientRect();\n\n    if (Array.isArray(points) === true) {\n      let isBelowPoints = true;\n\n      (points as Point[]).forEach(({ y }) => {\n        if (top + offset > y === false) {\n          isBelowPoints = false;\n        }\n      });\n\n      return isBelowPoints;\n    }\n\n    return top + offset > (points as Point).y;\n  }\n\n  public static isElementCenterAbovePoints(\n    element: HTMLElement,\n    points: Point | Point[],\n    offset: number = 0,\n  ) {\n    const centerPoint = this.getElementCenterPoint(element);\n\n    if (Array.isArray(points) === true) {\n      let isAbovePoint = true;\n\n      (points as Point[]).forEach(({ y }) => {\n        if (centerPoint.y + offset > y === false) {\n          isAbovePoint = false;\n        }\n      });\n\n      return isAbovePoint;\n    }\n\n    return centerPoint.y + offset > (points as Point).y;\n  }\n\n  public static isElementCenterBelowPoints(\n    element: HTMLElement,\n    points: Point | Point[],\n    offset: number = 0,\n  ) {\n    const centerPoint = this.getElementCenterPoint(element);\n\n    if (Array.isArray(points) === true) {\n      let isBelowPoint = true;\n\n      (points as Point[]).forEach(({ y }) => {\n        if (centerPoint.y + offset < y === false) {\n          isBelowPoint = false;\n        }\n      });\n\n      return isBelowPoint;\n    }\n\n    return centerPoint.y + offset < (points as Point).y;\n  }\n\n  public static getClosestDistanceFromElementCornersToPoint(\n    element: HTMLElement,\n    point: Point,\n  ): number {\n    const corners = this.getElementCornerPoints(element);\n\n    const distances = corners.map(corner => {\n      return Point.getDistanceTo(corner, point);\n    });\n\n    return Math.min(...distances);\n  }\n\n  public static getDistanceFromElementCenterToPoint(element: HTMLElement, point: Point): number {\n    const centerPoint = this.getElementCenterPoint(element);\n\n    return Point.getDistanceTo(centerPoint, point);\n  }\n\n  // Point is relative to viewport. (clientX, clientY)\n\n  public static pointIsInElement({ x, y }: Point, element: HTMLElement): boolean {\n    return document\n      .elementsFromPoint(x, y)\n      .indexOf(element) !== -1;\n  }\n\n  public static findElementFromPoint(\n    { x, y }: Point,\n    identifiyElementFunction?: IdentifiyElementFunction,\n    getAll: boolean = true,\n  ): HTMLElement | HTMLElement[] | false {\n    const elements = document.elementsFromPoint(x, y);\n\n    if (elements.length === 0) {\n      return false;\n    }\n\n    let identifyElement;\n\n    if (typeof identifiyElementFunction === 'undefined') {\n      identifyElement = () => true;\n    } else {\n      identifyElement = identifiyElementFunction;\n    }\n\n    let results: HTMLElement[] = [];\n\n    elements.forEach(element => {\n      if (identifyElement(element as HTMLElement) === true) {\n        results.push(element as HTMLElement);\n      }\n    });\n\n    if (results.length === 0) {\n      return false;\n    } else if (results.length === 1) {\n      return results[0];\n    }\n\n    if (getAll === true) {\n      return results;\n    }\n\n    return results[0];\n  }\n\n  public static getClosestChildFromPoints(\n    parent: HTMLElement,\n    points: Point | Point[],\n    identifiyElementFunction?: IdentifiyElementFunction,\n  ): HTMLElement | false {\n    if (typeof identifiyElementFunction === 'undefined') {\n      identifiyElementFunction = element => true;\n    }\n\n    const children = [...parent.children] as HTMLElement[];\n\n    const selectedChildren = children.filter(identifiyElementFunction);\n\n    if (selectedChildren.length === 0) {\n      return false;\n    }\n\n    const distances = selectedChildren.map(item => {\n      if (Array.isArray(points) === true) {\n        const distances = (points as Point[]).map(point =>\n          this.getClosestDistanceFromElementCornersToPoint(item, point),\n        );\n\n        return Math.min(...distances);\n      } else {\n        return this.getClosestDistanceFromElementCornersToPoint(item, points as Point);\n      }\n    });\n\n    const closesDistanceIndex = distances.indexOf(Math.min(...distances));\n\n    return selectedChildren[closesDistanceIndex];\n  }\n}\n","import {\n  Num,\n  Point,\n  Rectangle,\n} from '../rocket';\n\nexport class DOMRectangle {\n  public static getMinimumBoundingRectangleFromElements(...elements: HTMLElement[]): Rectangle | null {\n    if (elements.length === 0) {\n      return null;\n    }\n\n    const result = {\n      top: 0,\n      bottom: 0,\n\n      left: 0,\n      right: 0,\n\n      width: 0,\n      height: 0,\n\n      center: Point.zero(),\n    };\n\n    for (let i = 0; i < elements.length; i++) {\n      const { top, bottom, left, right } = elements[i].getBoundingClientRect();\n\n      if (i === 0) {\n        result.top = top;\n        result.bottom = bottom;\n        result.left = left;\n        result.right = right;\n      } else {\n        if (top < result.top) {\n          result.top = top;\n        }\n\n        if (bottom > result.bottom) {\n          result.bottom = bottom;\n        }\n\n        if (left < result.left) {\n          result.left = left;\n        }\n\n        if (right > result.right) {\n          result.right = right;\n        }\n      }\n    }\n\n    result.width = Num.getEuclideanDistance(result.left, result.right);\n    result.height = Num.getEuclideanDistance(result.top, result.bottom);\n\n    result.center = new Point(result.left + result.width / 2, result.top + result.height / 2);\n\n    return result;\n  }\n\n  public static twoElementRectanglesAreOverlapping(\n    element1: HTMLElement,\n    element2: HTMLElement,\n  ): boolean {\n    const rect1 = element1.getBoundingClientRect();\n    const rect2 = element2.getBoundingClientRect();\n\n    if (\n      rect1.left > rect2.right\n      || rect2.left > rect1.right\n      || rect1.top > rect2.bottom\n      || rect2.top > rect1.bottom\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public static getTwoElementRectanglesOverlappingArea(\n    element1: HTMLElement,\n    element2: HTMLElement,\n  ): number {\n    const rect1 = element1.getBoundingClientRect();\n    const rect2 = element2.getBoundingClientRect();\n\n    if (this.twoElementRectanglesAreOverlapping(element1, element2) === true) {\n      const top = Math.max(rect1.top, rect2.top);\n      const bottom = Math.min(rect1.bottom, rect2.bottom);\n\n      const left = Math.max(rect1.left, rect2.left);\n      const right = Math.min(rect1.right, rect2.right);\n\n      const width = Num.getEuclideanDistance(left, right);\n      const height = Num.getEuclideanDistance(top, bottom);\n\n      return width * height;\n    }\n\n    return 0;\n  }\n}\n","import {\n  DOMRectangle,\n  Offset,\n  Viewport,\n} from '../rocket';\n\nexport class DOMScroll {\n  public static get scrollLeft(): number {\n    if (typeof window.pageXOffset === 'number') {\n      return window.pageXOffset;\n    }\n\n    return document.documentElement.scrollLeft\n      || document.body.scrollLeft\n      || window.scrollX\n      || 0;\n  }\n\n  public static get scrollTop(): number {\n    if (typeof window.pageYOffset === 'number') {\n      return window.pageYOffset;\n    }\n\n    return document.documentElement.scrollTop\n      || document.body.scrollTop\n      || window.scrollY\n      || 0;\n  }\n\n  public static getScrollLeftToElement(...elements: HTMLElement[]): number {\n    let rect;\n\n    let left = 0;\n\n    if (elements.length > 1) {\n      rect = DOMRectangle.getMinimumBoundingRectangleFromElements(...elements);\n    } else {\n      rect = elements[0].getBoundingClientRect();\n    }\n\n    if (rect !== false) {\n      left = rect.left;\n    }\n\n    return left + this.scrollLeft;\n  }\n\n  public static getScrollTopToElement(...elements: HTMLElement[]): number {\n    let rect;\n\n    let top = 0;\n\n    if (elements.length > 1) {\n      rect = DOMRectangle.getMinimumBoundingRectangleFromElements(...elements);\n    } else {\n      rect = elements[0].getBoundingClientRect();\n    }\n\n    if (rect !== false) {\n      top = rect.top;\n    }\n\n    return top + this.scrollTop;\n  }\n\n  public static getScrollLeftToElementsCenterFrame(...elements: HTMLElement[]): number {\n    let rect;\n\n    let left = 0;\n\n    let width = 0;\n\n    if (elements.length > 1) {\n      rect = DOMRectangle.getMinimumBoundingRectangleFromElements(...elements);\n    } else {\n      rect = elements[0].getBoundingClientRect();\n    }\n\n    if (rect !== false) {\n      left = rect.left;\n\n      width = rect.width;\n    }\n\n    return left - (Viewport.width - width) / 2 + this.scrollLeft;\n  }\n\n  public static getScrollTopToElementsCenterFrame(...elements: HTMLElement[]): number {\n    let rect;\n\n    let top = 0;\n\n    let height = 0;\n\n    if (elements.length > 1) {\n      rect = DOMRectangle.getMinimumBoundingRectangleFromElements(...elements);\n    } else {\n      rect = elements[0].getBoundingClientRect();\n    }\n\n    if (rect !== false) {\n      top = rect.top;\n\n      height = rect.height;\n    }\n\n    return top - (Viewport.height - height) / 2 + this.scrollTop;\n  }\n\n  public static getScrollToElementsCenterFrame(...elements: HTMLElement[]): Offset {\n    return {\n      left: this.getScrollLeftToElementsCenterFrame(...elements),\n      top: this.getScrollTopToElementsCenterFrame(...elements),\n    };\n  }\n}\n","import {\n  DOMTraverse,\n  DOMUtil,\n  Num,\n  StringUtil,\n} from '../rocket';\n\nexport interface StyleObject {\n  [key: string]: string | number;\n}\n\n// NOTE:\n// You can remove style by setting it to null\n// For example element.style.backgroundColor = null;\n\nexport class DOMStyle {\n  public static applyStyle(\n    element: HTMLElement,\n    styleObject: StyleObject,\n  ): void\n\n  public static applyStyle(\n    styleObject: StyleObject,\n    ...elements: HTMLElement[]\n  ): void\n\n  public static applyStyle(\n    a: HTMLElement | StyleObject,\n    b: HTMLElement | StyleObject,\n    ...c: HTMLElement[]\n  ): void {\n    let elements = c;\n\n    let styleObject;\n\n    if (DOMUtil.isHTMLElement(a) === true) {\n      elements.push(a as HTMLElement);\n      styleObject = b as StyleObject;\n    } else if (DOMUtil.isHTMLElement(b) === true) {\n      styleObject = a as StyleObject;\n      elements.push(b as HTMLElement);\n    }\n\n    Object.keys(styleObject).forEach(property => {\n      let value = styleObject[property];\n\n      const propertyName = StringUtil.kebabCaseToCamelCase(property);\n\n      if (typeof value === 'number') {\n        value = value.toString();\n      }\n\n      if (typeof value === 'string') {\n        elements.forEach(element => element.style[propertyName] = value);\n      }\n    });\n  }\n\n  public static clearStyles(element: HTMLElement) {\n    element.removeAttribute('style');\n  }\n\n  public static copyStylesFrom(\n    from: HTMLElement,\n    properties: string | string[],\n    ...to: HTMLElement[]\n  ): void {\n    if (typeof properties === 'string') {\n      properties = [properties];\n    }\n\n    const style = window.getComputedStyle(from);\n\n    properties.forEach(property => {\n      to.forEach(element => {\n        property = StringUtil.kebabCaseToCamelCase(property);\n\n        element.style[property] = style[property];\n      });\n    });\n  }\n\n  public static getAnimationDelaysInSeconds(element: HTMLElement): number[] {\n    const computedStyle = getComputedStyle(element);\n\n    const value = computedStyle.animationDelay;\n\n    if (!value) {\n      return [0];\n    }\n\n    return value.split(',').map(delay => parseFloat(delay) * 1000);\n  }\n\n  public static getAnimationDurationsInSeconds(element: HTMLElement): number[] {\n    const computedStyle = getComputedStyle(element);\n\n    const value = computedStyle.animationDuration;\n\n    if (!value) {\n      return [0];\n    }\n\n    return value.split(',').map(duration => parseFloat(duration) * 1000);\n  }\n\n  public static getBaseFontSize(): number {\n    const fontSize = window.getComputedStyle(document.documentElement).fontSize;\n\n    if (\n      typeof fontSize === 'string'\n      && fontSize.match(/^[0-9]+/g) !== null\n    ) {\n      return parseFloat(fontSize);\n    }\n\n    return 16;\n  }\n\n  public static getBoxSizing(element: HTMLElement): string {\n    return this.getStyleValue(element, 'box-sizing') as string;\n  }\n\n  public static getChildrenMaxAnimationDuration(\n    from: HTMLElement,\n    withDelay: boolean = false,\n  ): number {\n    let durations: number[] = [];\n\n    DOMTraverse.descendFrom(\n      from,\n      element => {\n        if (DOMUtil.isHTMLElement(element) === true) {\n          const _element = element as HTMLElement;\n\n          let duration;\n\n          if (withDelay === true) {\n            duration = this.getMaxAnimationDurationInSeconds(_element);\n          } else {\n            duration = this.getMaxAnimationDurationWithDelayInSeconds(_element);\n          }\n\n          durations.push(duration);\n        }\n      }\n    );\n\n    return Math.max(...durations);\n  }\n\n  public static getFontSize(element: HTMLElement): number {\n    return this.getStyleValue(element, 'font-size') as number;\n  }\n\n  public static getLineHeight(element: HTMLElement): number {\n    const temp = document.createElement('div');\n\n    temp.style.padding = '0';\n    temp.style.visibility = 'none';\n\n    temp.textContent = 'abcd';\n\n    this.copyStylesFrom(\n      element,\n      [\n        'font-family',\n        'font-size',\n        'line-height',\n      ],\n      temp,\n    );\n\n    let result;\n\n    if (element.parentNode) {\n      element.parentNode.appendChild(temp);\n\n      result = temp.clientHeight;\n\n      element.parentNode.removeChild(temp);\n    } else {\n      document.appendChild(temp);\n\n      result = temp.clientHeight;\n\n      document.removeChild(temp);\n    }\n\n    temp.remove();\n\n    return result;\n  }\n\n  public static getMaxAnimationDelayInSeconds(element: HTMLElement): number {\n    return Math.max(...this.getAnimationDelaysInSeconds(element));\n  }\n\n  public static getMaxAnimationDurationInSeconds(element: HTMLElement): number {\n    return Math.max(...this.getAnimationDurationsInSeconds(element));\n  }\n\n  public static getMaxAnimationDurationWithDelayInSeconds(element: HTMLElement): number {\n    const delays = this.getAnimationDelaysInSeconds(element);\n\n    const durations = this.getAnimationDurationsInSeconds(element);\n\n    return Math.max(...Num.sumNumberArrays(delays, durations));\n  }\n\n  public static getMaxTransitionDelayInSeconds(element: HTMLElement): number {\n    return Math.max(...this.getTransitionDelaysInSeconds(element));\n  }\n\n  public static getMaxTransitionDurationInSeconds(element: HTMLElement): number {\n    return Math.max(...this.getTransitionDurationsInSeconds(element));\n  }\n\n  public static getMaxTransitionDurationWithDelayInSeconds(element: HTMLElement): number {\n    const delays = this.getTransitionDelaysInSeconds(element);\n\n    const durations = this.getTransitionDurationsInSeconds(element);\n\n    return Math.max(...Num.sumNumberArrays(delays, durations));\n  }\n\n  public static getParentsMaxAnimationDuration(\n    from: HTMLElement,\n    withDelay: boolean = false,\n  ): number {\n    let durations: number[] = [];\n\n    DOMTraverse.ascendFrom(\n      from,\n      element => {\n        if (DOMUtil.isHTMLElement(element) === true) {\n          const _element = element as HTMLElement;\n\n          let duration;\n\n          if (withDelay === true) {\n            duration = this.getMaxAnimationDurationWithDelayInSeconds(_element);\n          } else {\n            duration = this.getMaxAnimationDurationInSeconds(_element);\n          }\n\n          durations.push(duration);\n        }\n      }\n    );\n\n    return Math.max(...durations);\n  }\n\n  public static getStyleValue(\n    element: HTMLElement,\n    property: string,\n    stringOnly: boolean = false,\n  ): string | number {\n    const style = window.getComputedStyle(element);\n\n    property = StringUtil.kebabCaseToCamelCase(property);\n\n    const value = style[property];\n\n    if (\n      stringOnly === false\n      && value.match(/^[0-9]+/g)\n    ) {\n      return parseFloat(value);\n    }\n\n    return value;\n  }\n\n  public static getStyleValues(\n    element: HTMLElement,\n    properties: string | string[],\n    stringOnly: boolean = false,\n  ): StyleObject {\n    if (typeof properties === 'string') {\n      properties = [properties];\n    }\n\n    const style = window.getComputedStyle(element);\n\n    const result = {};\n\n    properties.forEach(property => {\n      property = StringUtil.kebabCaseToCamelCase(property);\n\n      const value = style[property];\n\n      if (\n        stringOnly === false\n        && value.match(/^[0-9]+/g)\n      ) {\n        result[property] = parseFloat(value);\n      } else {\n        result[property] = value\n      }\n    });\n\n    return result;\n  }\n\n  public static getTransitionDelaysInSeconds(element: HTMLElement): number[] {\n    const computedStyle = getComputedStyle(element);\n\n    const value = computedStyle.transitionDelay;\n\n    if (!value) {\n      return [0];\n    }\n\n    return value.split(',').map(delay => parseFloat(delay) * 1000);\n  }\n\n  public static getTransitionDurationsInSeconds(element: HTMLElement): number[] {\n    const computedStyle = getComputedStyle(element);\n\n    const value = computedStyle.transitionDuration;\n\n    if (!value) {\n      return [0];\n    }\n\n    return value.split(',').map(duration => parseFloat(duration) * 1000);\n  }\n\n  public static removeStyles(\n    element: HTMLElement,\n    properties: string | string[],\n  ) {\n    if (typeof properties === 'string') {\n      properties = [properties];\n    }\n\n    properties.forEach(property => {\n      property = StringUtil.kebabCaseToCamelCase(property);\n\n      element.style.removeProperty(property);\n    });\n  }\n\n  public static RemToPx(rem: number): number {\n    return rem * this.getBaseFontSize();\n  }\n\n  public static setFontSize(\n    element: HTMLElement,\n    fontSize: number,\n    unit: string = 'px',\n  ): void {\n    element.style.fontSize = `${fontSize}${unit}`;\n  }\n}\n","import {\n  DOMBoxModel,\n  DOMStyle,\n  DOMUtil,\n  InputOrTextArea,\n} from '../rocket';\n\nconst TEXT_BOX_MODEL_ATTRIBUTES = {\n  border: 'none',\n  height: '0',\n  left: '0',\n  overflowWrap: 'normal',\n  overflowX: 'hidden',\n  overflowY: 'hidden',\n  padding: '0',\n  position: 'fixed',\n  resize: 'none',\n  top: '0',\n  visibility: 'hidden',\n  whiteSpace: 'nowrap',\n  width: '0',\n  zIndex: '-9999',\n};\n\nconst STYLE_PROPERTIES = [\n  'borderBottomStyle',\n  'borderBottomWidth',\n  'borderLeftStyle',\n  'borderLeftWidth',\n  'borderRightStyle',\n  'borderRightWidth',\n  'borderTopStyle',\n  'borderTopWidth',\n  'boxSizing',\n  'height',\n  'maxHeight',\n  'maxWidth',\n  'minHeight',\n  'minWidth',\n  'paddingBottom',\n  'paddingLeft',\n  'paddingRight',\n  'paddingTop',\n  'width',\n];\n\nconst FONT_STYLE_PROPERTIES = [\n  'direction',\n  'fontFamily',\n  'fontSize',\n  'fontSizeAdjust',\n  'fontStyle',\n  'fontVariant',\n  'fontWeight',\n  'letterSpacing',\n  'lineHeight',\n  'tabSize',\n  'textAlign',\n  'textDecoration',\n  'textIndent',\n  'textOverflow',\n  'textTransform',\n  'whiteSpace',\n  'wordBreak',\n  'wordSpacing',\n  'wordWrap',\n];\n\ninterface StyleObject {\n  [name: string]: string;\n}\n\nexport class DOMText {\n  public static getTextBoxHeightFromElement(\n    element: HTMLElement,\n    text: string | null = null,\n    transformTextHook: ((text: string) => string) | null = null,\n    styleOverride: StyleObject | null = null,\n  ): number {\n    const modelElement = document.createElement('TEXTAREA') as HTMLTextAreaElement;\n\n    Object.assign(modelElement.style, TEXT_BOX_MODEL_ATTRIBUTES);\n\n    const elementStyle = window.getComputedStyle(element);\n\n    [...STYLE_PROPERTIES, ...FONT_STYLE_PROPERTIES].forEach(property => {\n      modelElement.style[property] = elementStyle[property];\n    });\n\n    Object.assign(modelElement.style, {\n      height: '0',\n      maxHeight: '0',\n      whiteSpace: 'pre-wrap',\n    });\n\n    if (\n      typeof styleOverride === 'object'\n      && styleOverride !== null\n    ) {\n      Object.assign(modelElement.style, styleOverride);\n    }\n\n    let transformText = text => text;\n\n    if (typeof transformTextHook === 'function') {\n      transformText = transformTextHook as (text: string) => string;\n    }\n\n    if (typeof text === 'string') {\n      modelElement.value = transformText(text);\n    } else {\n      modelElement.value = transformText(this.getTextFromElement(element));\n    }\n\n    // Set offset for when boxSizing is set to border-box.\n    let offset = 0;\n\n    if (DOMStyle.getBoxSizing(element) === 'border-box') {\n      offset = DOMBoxModel.getTotalVerticalBorderWidths(element);\n    } else {\n      offset -= DOMBoxModel.getTotalVerticalPaddings(element);\n    }\n\n    document.body.appendChild(modelElement);\n\n    const result = modelElement.scrollHeight + offset;\n\n    document.body.removeChild(modelElement);\n\n    modelElement.remove();\n\n    return result;\n  }\n\n  public static getTextBoxWidthFromElement(\n    element: HTMLElement,\n    text: string | null = null,\n    transformTextHook: ((text: string) => string) | null = null,\n    styleOverride: StyleObject | null = null,\n  ): number {\n    const modelElement = document.createElement('DIV');\n\n    Object.assign(modelElement.style, TEXT_BOX_MODEL_ATTRIBUTES);\n\n    const elementStyle = window.getComputedStyle(element);\n\n    [...STYLE_PROPERTIES, ...FONT_STYLE_PROPERTIES].forEach(property => {\n      modelElement.style[property] = elementStyle[property];\n    });\n\n    Object.assign(modelElement.style, {\n      borderLeftWidth: '0',\n      borderRightWidth: '0',\n      boxSizing: 'content-box',\n      minWidth: '0',\n      paddingLeft: '0',\n      paddingRight: '0',\n      whiteSpace: 'nowrap',\n      width: '0',\n      wordBreak: 'normal',\n      wordWrap: 'normal',\n    });\n\n    if (\n      typeof styleOverride === 'object'\n      && styleOverride !== null\n    ) {\n      Object.assign(modelElement.style, styleOverride);\n    }\n\n    let textString;\n\n    let transformText = text => text;\n\n    if (typeof transformTextHook === 'function') {\n      transformText = transformTextHook as (text: string) => string;\n    }\n\n    if (typeof text === 'string') {\n      textString = transformText(text);\n    } else {\n      textString = transformText(this.getTextFromElement(element));\n    }\n\n    textString = textString.replace(/[\\n\\r]/g, '<br>');\n    textString = textString.replace(/[\\t]/g, '&#9');\n    textString = textString.replace(/[\\s]/g, '&nbsp');\n\n    modelElement.innerHTML = textString;\n\n    document.body.appendChild(modelElement);\n\n    const result = modelElement.scrollWidth;\n\n    document.body.removeChild(modelElement);\n\n    modelElement.remove();\n\n    return result;\n  }\n\n  public static getTextFromElement(element: HTMLElement): string {\n    if (DOMUtil.isInputOrTextArea(element) === true) {\n      return (element as InputOrTextArea).value;\n    }\n\n    if (element.textContent !== null) {\n      return element.textContent;\n    }\n\n    return '';\n  }\n\n  public static setElementText(element: HTMLElement, text: string) {\n    if (DOMUtil.isInputOrTextArea(element) === true) {\n      const input = element as InputOrTextArea;\n\n      input.value = text;\n    } else {\n      element.textContent = text;\n    }\n  }\n\n  public static getLastLine(element: HTMLElement): string {\n    const text = element.textContent;\n\n    if (text) {\n      const words = text.split(' ');\n\n      const lastLine: string[] = [];\n\n      let index = words.length - 1;\n\n      const temp = document.createElement('div');\n\n      temp.style.padding = '0';\n      temp.style.visibility = 'none';\n\n      DOMStyle.copyStylesFrom(element, ['font-size', 'font-family', 'line-height'], temp);\n\n      const maxWidth = element.clientWidth - DOMBoxModel.getTotalHorizontalInnerSpace(element);\n\n      temp.style.maxWidth = `${maxWidth}px`;\n\n      temp.textContent = text;\n\n      if (element.parentNode) {\n        element.parentNode.appendChild(temp);\n      } else {\n        document.appendChild(temp);\n      }\n\n      const startingHeight = temp.clientHeight;\n\n      let textCopy = text;\n\n      while (true) {\n        if (!words[index]) {\n          break;\n        }\n\n        const wordLength = words[index].length + 1;\n\n        textCopy = textCopy.substring(0, textCopy.length - wordLength);\n\n        temp.textContent = textCopy;\n\n        lastLine.unshift(words[index]);\n\n        if (temp.clientHeight < startingHeight) {\n          break;\n        }\n\n        index--;\n      }\n\n      if (element.parentNode) {\n        element.parentNode.removeChild(temp);\n      } else {\n        document.removeChild(temp);\n      }\n\n      return lastLine.join(' ');\n    }\n\n    return '';\n  }\n}\n","import {\n  DOMUtil,\n  Elements,\n} from '../rocket';\n\nexport interface DOMTraverseInspectFunction {\n  (element: Element): true | void;\n}\n\nexport interface DOMTraversePredicateFunction {\n  (element: Element): boolean;\n}\n\nexport interface DOMTraverseExtractFunction<T> {\n  (child: Element): T | void;\n}\n\nexport type DOMTraverseResult = Element | Element[] | null;\n\nexport class DOMTraverse {\n  public static ascendFrom(\n    from: Element,\n    inspect: DOMTraverseInspectFunction,\n    to: Element = document.documentElement,\n  ): void {\n    let element: Element | null = from;\n\n    while (\n      element\n      && element !== to\n      && element !== document.documentElement\n    ) {\n      if (inspect(element) === true) {\n        break;\n      }\n\n      element = element.parentElement;\n    }\n  }\n\n  public static descendFrom(\n    from: Element,\n    inspect: DOMTraverseInspectFunction,\n  ): void {\n    const descent = (element: Element) => {\n      const children = element.children;\n\n      if (children.length > 0) {\n        for (let i = 0; i < children.length; i++) {\n          const child = children[i];\n\n          if (inspect(child) === true) {\n            break;\n          }\n\n          if (child.children.length > 0) {\n            descent(child);\n          }\n        }\n      }\n    };\n\n    descent(from);\n  }\n\n  public static findAncestor(\n    from: Element,\n    identifyElement: DOMTraversePredicateFunction,\n    getAllMatchingAncestors: boolean = false,\n  ): DOMTraverseResult {\n    const results: Element[] = [];\n\n    if (DOMUtil.isHTMLElement(from) === false) {\n      return null;\n    }\n\n    if (identifyElement(from) === true) {\n      results.push(from);\n    }\n\n    let element: Element | null = from;\n\n    while (\n      element\n      && element !== document.documentElement\n    ) {\n      if (identifyElement(element) === true) {\n        results.push(element);\n\n        if (getAllMatchingAncestors === false) {\n          break;\n        }\n      }\n\n      element = element.parentElement;\n    }\n\n    if (results.length > 0) {\n      return getAllMatchingAncestors === true ? results : results[0];\n    }\n\n    return null;\n  }\n\n  public static findDescendant(\n    from: Element,\n    identifyElement: DOMTraversePredicateFunction,\n    getAllMatchingDescendants: boolean = false,\n  ): DOMTraverseResult {\n    const results: Element[] = [];\n\n    if (identifyElement(from) === true) {\n      results.push(from);\n    }\n\n    const descent = (element: Element) => {\n      const children = element.children;\n\n      if (children.length > 0) {\n        for (let i = 0; i < children.length; i++) {\n          const child = children[i];\n\n          if (identifyElement(child) === true) {\n            results.push(child);\n\n            if (getAllMatchingDescendants === false) {\n              break;\n            }\n          }\n\n          if (child.children.length > 0) {\n            descent(child);\n          }\n        }\n      }\n    };\n\n    descent(from);\n\n    if (results.length > 0) {\n      return getAllMatchingDescendants === true ? results : results[0];\n    }\n\n    return null;\n  }\n\n  public static findAncestorWithClass(\n    from: Element,\n    classNames: string | string[],\n    getAllMatchingAncestors: boolean = false,\n  ): DOMTraverseResult {\n    let identifyElement;\n\n    if (typeof classNames === 'string') {\n      identifyElement = element => element.classList.contains(classNames);\n    } else if (Array.isArray(classNames) === true) {\n      identifyElement = element => {\n        for (let i = 0; i < classNames.length; i++) {\n          if (element.classList.contains(classNames[i]) === true) {\n            return true;\n          }\n        }\n\n        return false;\n      };\n    }\n\n    return this.findAncestor(from, identifyElement, getAllMatchingAncestors);\n  }\n\n  public static findDescendantWithClass(\n    from: Element,\n    classNames: string | string[],\n    getAllMatchingDescendants: boolean = false,\n  ): DOMTraverseResult {\n    let identifyElement;\n\n    if (typeof classNames === 'string') {\n      identifyElement = element => element.classList.contains(classNames);\n    } else if (Array.isArray(classNames) === true) {\n      identifyElement = element => {\n        for (let i = 0; i < classNames.length; i++) {\n          if (element.classList.contains(classNames[i]) === true) {\n            return true;\n          }\n        }\n\n        return false;\n      };\n    }\n\n    return this.findDescendant(from, identifyElement, getAllMatchingDescendants);\n  }\n\n  public static findAncestorWithId(\n    from: Element,\n    id: string,\n    getAllMatchingAncestors: boolean = false,\n  ): DOMTraverseResult {\n    const identifyElement = element => element.id === id;\n\n    return this.findAncestor(from, identifyElement, getAllMatchingAncestors);\n  }\n\n  public static findDescendantWithId(\n    from: Element,\n    id: string,\n    getAllMatchingDescendants: boolean = false,\n  ): DOMTraverseResult {\n    const identifyElement = element => element.id === id;\n\n    return this.findDescendant(from, identifyElement, getAllMatchingDescendants);\n  }\n\n  public static hasAncestor(\n    from: Element,\n    options: Element | Elements,\n  ): boolean {\n    const candidates = DOMUtil.toElementArray(options);\n\n    const identifyElement = element => candidates.indexOf(element) !== -1;\n\n    return this.findAncestor(from, identifyElement, false) !== null;\n  }\n\n  public static hasDescendant(\n    from: Element,\n    options: Element | Elements,\n  ): boolean {\n    const candidates = DOMUtil.toElementArray(options);\n\n    const identifyElement = element => candidates.indexOf(element) !== -1;\n\n    return this.findDescendant(from, identifyElement, false) !== null;\n  }\n\n  // @siblings\n\n  public static getSiblings(\n    element: Element,\n    isExclusive: boolean = false,\n  ): Element[] | null {\n    if (element.parentElement) {\n      const siblings = [...element.parentElement.children];\n\n      if (isExclusive === true) {\n        siblings.splice(siblings.indexOf(element), 1);\n      }\n\n      return siblings.length > 0 ? siblings : null;\n    }\n\n    return null;\n  }\n\n  public static findSibling(\n    element: Element,\n    identifyElement: DOMTraversePredicateFunction,\n    getAllMatchingSiblings = true,\n  ): DOMTraverseResult {\n    const siblings = this.getSiblings(element);\n\n    if (!siblings) {\n      return null;\n    }\n\n    if (siblings.length > 0) {\n      const results: Element[] = [];\n\n      for (let i = 0; i < siblings.length; i++) {\n        const sibling = siblings[i];\n\n        if (identifyElement(sibling) === true) {\n          results.push(sibling);\n\n          if (getAllMatchingSiblings === false) {\n            break;\n          }\n        }\n      }\n\n      if (results.length > 0) {\n        return getAllMatchingSiblings === true ? results : results[0];\n      }\n    }\n\n    return null;\n  }\n\n  public static findNextSibling(\n    element: Element,\n    identifyElement: DOMTraversePredicateFunction,\n  ): Element | null {\n    let nextSibling: Element | null = element;\n\n    while (nextSibling) {\n      if (\n        element\n        && identifyElement(element) === true\n      ) {\n        return element;\n      } else {\n        nextSibling = element.nextElementSibling;\n      }\n    }\n\n    return null;\n  }\n\n  public static findSiblingWithClass(\n    element: Element,\n    classNames: string | string[],\n    getAllMatchingSiblings: boolean = false,\n  ): DOMTraverseResult {\n    let identifyElement;\n\n    if (typeof classNames === 'string') {\n      identifyElement = sibling => sibling.classList.contains(classNames);\n    } else if (Array.isArray(classNames) === true) {\n      identifyElement = sibling => {\n        for (let i = 0; i < classNames.length; i++) {\n          if (sibling.classList.contains(classNames[i]) === true) {\n            return true;\n          }\n        }\n\n        return false;\n      };\n    }\n\n    return this.findSibling(element, identifyElement, getAllMatchingSiblings);\n  }\n\n  public static getChildren(\n    element: Element,\n    identifyElement?: DOMTraversePredicateFunction,\n  ): Element[] {\n    const children = [...element.children];\n\n    if (typeof identifyElement === 'undefined') {\n      return children;\n    }\n\n    return children.filter(element => identifyElement(element));\n  }\n\n  public static getNthChild(\n    n: number | 'last',\n    element: Element,\n    identifyElement?: DOMTraversePredicateFunction,\n  ): Element | null {\n    if (!identifyElement) {\n      identifyElement = element => true;\n    }\n\n    const children = [...element.children];\n\n    const selectedChildren = children.filter(identifyElement);\n\n    let result;\n\n    if (n === 'last') {\n      result = selectedChildren[selectedChildren.length - 1];\n    } else {\n      result = selectedChildren[n];\n    }\n\n    return typeof result === 'object' ? result : null;\n  }\n\n  public static removeChildren(element: Element): number {\n    let deleteCount = 0;\n\n    while (element.firstChild !== null) {\n      element.removeChild(element.firstChild);\n\n      deleteCount++;\n    }\n\n    return deleteCount;\n  }\n\n  public static removeChild(\n    element: Element,\n    identifyElement: DOMTraversePredicateFunction,\n  ): number {\n    let deleteCount = 0;\n\n    const inspect = parent => {\n      const children = parent.children;\n\n      if (children.length > 0) {\n        for (let i = 0; i < children.length; i++) {\n          const child = children[i];\n\n          if (identifyElement(child) === true) {\n            parent.removeChild(child);\n\n            deleteCount++;\n          } else if (child.children.length > 0) {\n            inspect(child);\n          }\n        }\n      }\n    };\n\n    inspect(element);\n\n    return deleteCount;\n  }\n\n  public static mapDataFromChildren<T>(\n    element: Element,\n    extractFunction: DOMTraverseExtractFunction<T>,\n    identifyElement?: DOMTraversePredicateFunction,\n  ): T[] {\n    if (!identifyElement) {\n      identifyElement = element => true;\n    }\n\n    const children = [...element.children];\n\n    const selectedChildren = children.filter(identifyElement);\n\n    if (selectedChildren.length === 0) {\n      return [];\n    }\n\n    if (selectedChildren.length === 1) {\n      const datum: T = <T>extractFunction(selectedChildren[0]);\n\n      return datum ? [datum] : [];\n    }\n\n    const results: T[] = [];\n\n    selectedChildren.forEach(child => {\n      const datum: T = <T>extractFunction(child);\n\n      if (datum) {\n        results.push(datum);\n      }\n    });\n\n    return results;\n  }\n}\n","export type Elements = NodeListOf<Element> | Element[] | HTMLElements;\n\nexport type HTMLElements = NodeListOf<HTMLElement> | HTMLCollection | HTMLElement[];\n\nexport type InputOrTextArea = HTMLTextAreaElement | HTMLInputElement;\n\nexport class DOMUtil {\n  public static isElement(...things: any[]): boolean {\n    if (things.length === 0) {\n      return false;\n    }\n\n    const isElement = thing => {\n      return (\n        thing\n        && typeof thing === 'object'\n        && typeof thing.nodeType === 'number'\n        && thing.nodeType === 1\n        && thing instanceof Element === true\n      )\n    }\n\n    return things.every(isElement);\n  }\n\n  public static isNodeListOfElement(...things: any[]): boolean {\n    if (things.length === 0) {\n      return false;\n    }\n\n    const isNodeListOfElement = thing => {\n      return (\n        thing\n        && typeof thing === 'object'\n        && NodeList.prototype.isPrototypeOf(thing) === true\n        && [...thing].every(element => DOMUtil.isElement(element)) === true\n      );\n    }\n\n    return things.every(isNodeListOfElement);\n  }\n\n  public static toElementArray(elements: Element | Elements): Element[] {\n    if (\n      this.isNodeListOfElement(elements) === true\n      || this.isHTMLCollection(elements) === true\n    ) {\n      elements = elements as NodeListOf<Element> | HTMLCollection;\n\n      return [...elements];\n    } else if (this.isElement(elements) === true) {\n      const element = elements as Element;\n\n      return [element];\n    } else if (\n      Array.isArray(elements) === true\n      && this.isElement(...elements as unknown[]) === true\n    ) {\n      return elements as Element[];\n    }\n\n    return [];\n  }\n\n  public static isHTMLElement(...things: any[]): boolean {\n    if (things.length === 0) {\n      return false;\n    }\n\n    const isHTMLElement = thing => {\n      return (\n        thing\n        && typeof thing === 'object'\n        && typeof thing.nodeType === 'number'\n        && thing.nodeType === 1\n        && thing instanceof HTMLElement === true\n      )\n    }\n\n    return things.every(isHTMLElement);\n  }\n\n  public static isNodeListOfHTMLElement(...things: any[]): boolean {\n    if (things.length === 0) {\n      return false;\n    }\n\n    const isNodeListOfHTMLElement = thing => {\n      return (\n        thing\n        && typeof thing === 'object'\n        && NodeList.prototype.isPrototypeOf(thing) === true\n        && [...thing].every(element => DOMUtil.isHTMLElement(element)) === true\n      );\n    }\n\n    return things.every(isNodeListOfHTMLElement);\n  }\n\n  public static isHTMLCollection(...things: any[]): boolean {\n    if (things.length === 0) {\n      return false;\n    }\n\n    const isHTMLCollection = thing => {\n      return (\n        thing\n        && typeof thing === 'object'\n        && HTMLCollection.prototype.isPrototypeOf(thing) === true\n      );\n    }\n\n    return things.every(isHTMLCollection);\n  }\n\n  public static toHTMLElementArray(elements: HTMLElement | HTMLElements): HTMLElement[] {\n    if (\n      this.isNodeListOfHTMLElement(elements) === true\n      || this.isHTMLCollection(elements) === true\n    ) {\n      elements = elements as NodeListOf<HTMLElement> | HTMLCollection;\n\n      return [...elements] as HTMLElement[];\n    } else if (\n      this.isHTMLElement(elements) === true\n    ) {\n      const element = elements as HTMLElement;\n\n      return [element];\n    } else if (\n      Array.isArray(elements) === true\n      && this.isHTMLElement(...elements as unknown[]) === true\n    ) {\n      return elements as HTMLElement[];\n    }\n\n    return [];\n  }\n\n  public static isInputOrTextArea(...things: any[]): boolean {\n    if (things.length === 0) {\n      return false;\n    }\n\n    const isInputOrTextArea = thing => {\n      return (\n        thing\n        && typeof thing === 'object'\n        && typeof thing.nodeType === 'number'\n        && thing.nodeType === 1\n        && (\n          (\n            thing.nodeName === 'INPUT'\n            && thing instanceof HTMLInputElement\n          )\n          || (\n            thing.nodeName === 'TEXTAREA'\n            && thing instanceof HTMLTextAreaElement\n          )\n        )\n      );\n    }\n\n    return things.every(isInputOrTextArea);\n  }\n\n  public static prependChild(parent: HTMLElement, child: HTMLElement): void {\n    if (parent.childElementCount > 0) {\n      parent.insertBefore(child, parent.childNodes[0]);\n    } else {\n      parent.appendChild(child);\n    }\n  }\n}\n","import {\n  Viewport,\n} from '../rocket';\n\nexport type DOMViewCornerNames = 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n\nexport type DOMViewEdgeNames = 'top' | 'bottom' | 'left' | 'right';\n\nexport type DOMViewEdgeAndCornerNames = DOMViewCornerNames | DOMViewEdgeNames;\n\nexport const DOMViewCornerNames: DOMViewCornerNames[] = [\n  'top-left',\n  'top-right',\n  'bottom-left',\n  'bottom-right',\n];\n\nexport const DOMViewEdgeNames: DOMViewEdgeNames[] = [\n  'top',\n  'bottom',\n  'left',\n  'right',\n];\n\nexport const DOMViewEdgeAndCornerNames: DOMViewEdgeAndCornerNames[] = [\n  ...DOMViewCornerNames,\n  ...DOMViewEdgeNames,\n];\n\nexport class DOMView {\n  public static elementIsInView(element: HTMLElement): boolean {\n    const { top, bottom, left, right } = element.getBoundingClientRect();\n\n    if (\n      left < 0\n      || top  < 0\n      || right  > Viewport.width\n      || bottom > Viewport.height\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public static getElementWidthInView(element: HTMLElement): number {  \n    const rect = element.getBoundingClientRect();\n    \n    let { width } = rect;\n  \n    if (width === 0) {\n      return 0;\n    }\n  \n    if (rect.left < 0) {\n      width = width + rect.left;\n    }\n  \n    if (rect.right > Viewport.width) {\n      width = width - (rect.right - Viewport.width);\n    }\n  \n    return width;\n  }\n  \n  public static getElementHeightInView(element: HTMLElement): number {  \n    const rect = element.getBoundingClientRect();\n    \n    let { height } = rect;\n  \n    if (height === 0) {\n      return 0;\n    }\n\n    if (rect.top < 0) {\n      height = height + rect.top;\n    }\n  \n    if (rect.bottom > Viewport.height) {\n      height = height - (rect.bottom - Viewport.height);\n    }\n  \n    return height;\n  }\n\n  public static getProportionOfElementWidthInView(element: HTMLElement): number {  \n    const rect = element.getBoundingClientRect();\n    \n    const width = this.getElementWidthInView(element);\n  \n    return width / rect.width;\n  }\n\n  public static getProportionOfElementHeightInView(element: HTMLElement): number {\n    const rect = element.getBoundingClientRect();\n    \n    const height = this.getElementHeightInView(element);\n  \n    return height / rect.height;\n  }\n\n  public static getProportionOfElementInView(element: HTMLElement): number {\n    if (this.elementIsInView(element) === false) {\n      return 0;\n    }\n  \n    const rect = element.getBoundingClientRect();\n\n    const width = this.getElementWidthInView(element);\n    const height = this.getElementHeightInView(element);\n\n    return (width * height) / (rect.width * rect.height);\n  }\n\n  public static elementIsClipping(\n    element: HTMLElement,\n    cornersOrEdges?: DOMViewEdgeAndCornerNames | DOMViewEdgeAndCornerNames[],\n  ): DOMViewEdgeAndCornerNames | null {\n    let _cornersOrEdges: DOMViewEdgeAndCornerNames[] = [];\n\n    if (!cornersOrEdges) {\n      _cornersOrEdges = [...DOMViewEdgeAndCornerNames];\n    }\n\n    if (Array.isArray(cornersOrEdges) === true) {\n      _cornersOrEdges = cornersOrEdges as DOMViewEdgeAndCornerNames[];\n    } else if (typeof cornersOrEdges === 'string') {\n      _cornersOrEdges = [cornersOrEdges];\n    }\n\n    const result = this.elementIsClippingCornerOrEdge(element);\n\n    if (\n      result === null\n      || _cornersOrEdges.indexOf(result) === -1\n    ) {\n      return null;\n    }\n\n    return result;\n  }\n\n  public static elementIsClippingEdge(element: HTMLElement): DOMViewEdgeNames | null {\n    const { top, bottom, left, right } = element.getBoundingClientRect();\n\n    if (left < 0) {\n      return 'left';\n    } else if (top < 0) {\n      return 'top';\n    } else if (right > Viewport.width) {\n      return 'right';\n    } else if (bottom > Viewport.height) {\n      return 'bottom';\n    }\n\n    return null;\n  }\n\n  public static elementIsClippingCorner(element: HTMLElement): DOMViewCornerNames | null {\n    const { top, bottom, left, right } = element.getBoundingClientRect();\n\n    if (top < 0) {\n      if (left < 0) {\n        return 'top-left';\n      }\n\n      if (right > Viewport.width) {\n        return 'top-right';\n      }\n    } else if (bottom > Viewport.height) {\n      if (left < 0) {\n        return 'bottom-left';\n      }\n\n      if (right > Viewport.width) {\n        return 'bottom-right';\n      }\n    }\n\n    return null;\n  }\n\n  public static elementIsClippingCornerOrEdge(\n    element: HTMLElement,\n  ): DOMViewEdgeAndCornerNames | null {\n    const { top, bottom, left, right } = element.getBoundingClientRect();\n\n    if (top < 0) {\n      if (left < 0) {\n        return 'top-left';\n      }\n\n      if (right > Viewport.width) {\n        return 'top-right';\n      }\n\n      return 'top';\n    } else if (bottom > Viewport.height) {\n      if (left < 0) {\n        return 'bottom-left';\n      }\n\n      if (right > Viewport.width) {\n        return 'bottom-right';\n      }\n\n      return 'bottom';\n    } else if (left < 0) {\n      return 'left';\n    } else if (right > Viewport.width) {\n      return 'right';\n    }\n\n    return null;\n  }\n}\n","import {\n  DOMScroll,\n  DOMUtil,\n  Num,\n  Point,\n} from './rocket';\n\nconst VIEWPORT_MODEL_ATTRIBUTES = {\n  border: 'none',\n  boxSizing: 'border-box',\n  display: 'block',\n  height: '100vh',\n  left: '0',\n  maxHeight: '100%',\n  maxWidth: '100%',\n  padding: '0',\n  position: 'fixed',\n  top: '0',\n  visibility: 'hidden',\n  width: '100vw',\n  zIndex: '-9999999',\n};\n\nlet modelElement: HTMLElement;\nlet modelIsReady: boolean = false;\n\nlet scrollToggleElement: HTMLElement = document.body;\n\nlet scrollingIsDisabled: boolean = false;\nlet scrollingIsLocked: boolean = false;\n\nlet scrollX: number;\nlet scrollY: number;\n\nexport class Viewport {\n  public static setScrollToggleElement(element: HTMLElement) {\n    if (\n      DOMUtil.isHTMLElement(element) === true\n      && scrollingIsDisabled === false\n    ) {\n      scrollToggleElement = element;\n    } else {\n      scrollToggleElement = document.body;\n    }\n  }\n\n  public static get scrollingIsEnabled(): boolean {\n    return !scrollingIsDisabled;\n  }\n\n  public static get scrollingIsLocked(): boolean {\n    return scrollingIsLocked;\n  }\n\n  public static disableScrolling(\n    isLocked: boolean = false,\n    forceHideScrollbar: boolean = false,\n  ) {\n    if (scrollingIsDisabled === false) {\n      let { \n        hasHorizontalScrollBar,\n        hasVerticalScrollBar,\n      } = this;\n\n      scrollX = DOMScroll.scrollLeft;\n      scrollY = DOMScroll.scrollTop;\n\n      scrollToggleElement.style.overflow = 'hidden';\n      scrollToggleElement.style.position = 'fixed';\n      scrollToggleElement.style.left = `-${scrollX}px`;\n      scrollToggleElement.style.top = `-${scrollY}px`;\n\n      if (\n        hasHorizontalScrollBar === true\n        && forceHideScrollbar === false\n      ) {\n        document.documentElement.style.overflowX = 'scroll';\n      }\n\n      if (\n        hasVerticalScrollBar === true\n        && forceHideScrollbar === false\n      ) {\n        document.documentElement.style.overflowY = 'scroll';\n      }\n\n      scrollingIsLocked = isLocked;\n\n      scrollingIsDisabled = true;\n    }\n  }\n\n  public static enableScrolling(unlock: boolean = false) {\n    if (scrollingIsDisabled === true) {\n      if (\n        scrollingIsLocked === false\n        || (\n          scrollingIsLocked === true\n          && unlock === true\n        )\n      ) {\n        document.documentElement.style.removeProperty('overflow-x');\n        document.documentElement.style.removeProperty('overflow-y');\n\n        scrollToggleElement.style.removeProperty('overflow');\n        scrollToggleElement.style.removeProperty('position');\n        scrollToggleElement.style.removeProperty('left');\n        scrollToggleElement.style.removeProperty('top');\n\n        window.scrollTo(scrollX, scrollY);\n\n        scrollingIsLocked = false;\n\n        scrollingIsDisabled = false;\n      }\n    }\n  }\n\n  public static scrollTo(left: number, top: number) {\n    if (scrollingIsDisabled === true) {\n      scrollX = left;\n      scrollY = top;\n\n      scrollToggleElement.style.left = `-${left}px`;\n      scrollToggleElement.style.top = `-${top}px`;\n    } else {\n      window.scrollTo(left, top);\n    }\n  }\n\n  // @model_properties\n  public static get hasHorizontalScrollBar(): boolean {\n    return window.innerHeight > document.documentElement.scrollHeight;\n  }\n\n  public static get hasVerticalScrollBar(): boolean {\n    return window.innerWidth > document.documentElement.scrollWidth;\n  }\n\n  public static get centerPoint(): Point {\n    this.createModel();\n\n    return new Point(this.centerX, this.centerY);\n  }\n\n  public static get centerX(): number {\n    this.createModel();\n\n    return modelElement.offsetWidth / 2;\n  }\n\n  public static get centerY(): number {\n    this.createModel();\n\n    return modelElement.offsetHeight / 2;\n  }\n\n  public static get width(): number {\n    this.createModel();\n\n    return modelElement.offsetWidth;\n  }\n\n  public static get height(): number {\n    this.createModel();\n\n    return modelElement.offsetHeight;\n  }\n\n  public static get diagonal(): number {\n    this.createModel();\n\n    return Num.hypotenuse(\n      modelElement.offsetWidth,\n      modelElement.offsetHeight,\n    );\n  }\n\n  public static get documentWidth(): number {\n    const { body } = document;\n\n    const html = document.documentElement;\n\n    return Math.max(\n      body.scrollWidth,\n      body.offsetWidth, \n      html.clientWidth,\n      html.scrollWidth,\n      html.offsetWidth,\n    );\n  }\n\n  public static get documentHeight(): number {\n    const { body } = document;\n\n    const html = document.documentElement;\n\n    return Math.max(\n      body.scrollHeight,\n      body.offsetHeight, \n      html.clientHeight,\n      html.scrollHeight,\n      html.offsetHeight,\n    );\n  }\n\n  public static getHorizontalPageScrollPercentage(): number {\n    return (DOMScroll.scrollLeft / this.documentWidth) * 100;\n  }\n\n  public static getVerticalPageScrollPercentage(): number {\n    return (DOMScroll.scrollTop / this.documentHeight) * 100;\n  }\n\n  // @model\n\n  private static get modelElement(): HTMLElement {\n    this.createModel();\n\n    return modelElement;\n  }\n\n  private static get modelIsReady(): boolean {\n    return modelIsReady;\n  }\n\n  private static get modelIsCreated(): boolean {\n    return DOMUtil.isHTMLElement(modelElement);\n  }\n\n  private static createModel(): Viewport {\n    if (modelIsReady === false) {\n      modelElement = document.createElement('DIV');\n\n      document.body.appendChild(modelElement);\n\n      Object.assign(modelElement.style, VIEWPORT_MODEL_ATTRIBUTES);\n\n      modelIsReady = true;\n    }\n\n    return this;\n  }\n\n  private static destroyModel(): Viewport {\n    if (modelIsReady === true) {\n      document.body.removeChild(modelElement);\n\n      modelElement.remove();\n\n      modelIsReady = false;\n    }\n\n    return this;\n  }\n}\n","import {\n  Num,\n} from '../rocket';\n\nexport class Angle {\n  public static toDegrees(radians: number): number {\n    return radians * (180 / Math.PI);\n  }\n\n  public static toRadians(degrees: number): number {\n    return degrees * (Math.PI / 180);\n  }\n\n  public static deltaClockwise(from: number, to: number, direction: boolean = false): number {\n    let sign = 1;\n\n    const range = from - Math.PI;\n\n    if (range < 0) {\n      const offset = Num.cycle(range, Math.PI * 2);\n\n      if (to < from || to >= offset) {\n        sign = -1;\n      }\n    } else if (to < from && to >= range) {\n      sign = -1;\n    }\n\n    if (direction === false) {\n      sign = 1;\n    }\n\n    let result = 0;\n\n    if (from > to) {\n      result = from - to;\n    } else if (to > from) {\n      result = to - from;\n    }\n\n    return result * sign;\n  }\n\n  public static deltaCounterclockwise(from: number, to: number, direction: boolean = false): number {\n    let sign = 1;\n\n    const range = from + Math.PI;\n\n    if (range > Math.PI * 2) {\n      const offset = Num.cycle(range, Math.PI * 2);\n\n      if (to > from || to <= offset) {\n        sign = -1;\n      }\n    } else if (to > from && to <= range) {\n      sign = -1;\n    }\n\n    if (direction === false) {\n      sign = 1;\n    }\n\n    let result = 0;\n\n    if (from > to) {\n      result = from - to;\n    } else if (to > from) {\n      result = to - from;\n    }\n\n    return result * sign;\n  }\n\n  public static differenceClockwise(from: number, to: number) {\n    let result = 0;\n\n    if (from > to) {\n      result = Math.PI * 2 - from + to;\n    } else if (to > from) {\n      result = to - from;\n    }\n\n    return result;\n  }\n\n  public static differenceCounterclockwise(from: number, to: number) {\n    let result = 0;\n\n    if (from > to) {\n      result = from - to;\n    } else if (to > from) {\n      result = from + Math.PI * 2 - to;\n    }\n\n    return result;\n  }\n}\n","import {\n  Point,\n} from '../rocket';\n\nexport class Geometry {\n  // linear\n  // negative  = \\\n  // positive  = /\n  // 0         = horizontal\n  // undefined = vertical\n  public static getSlopeOfLine(ls: Point, le: Point): number | false {\n    if (le.x === ls.x) {\n      return false;\n    } else {\n      let rise = le.y - ls.y;\n\n      let run = le.x - ls.x;\n\n      return rise / run;\n    }\n  }\n\n  public static checkIfTwoLineSegmentsAreParallel(\n    ls1: Point,\n    le1: Point,\n    ls2: Point,\n    le2: Point,\n  ): boolean {\n    let s1 = this.getSlopeOfLine(ls1, le1);\n    let s2 = this.getSlopeOfLine(ls2, le2);\n\n    return s1 === s2;\n  }\n\n  // Two lines will always intersect unless they are parallel.\n  // Check if two line segments intersect each other.\n  public static checkIfTwoLineSegmentsIntersect(\n    ls1: Point,\n    le1: Point,\n    ls2: Point,\n    le2: Point,\n  ): boolean {\n    const pi = this.getPointOfIntersectionBetweenTwoLineSegments(ls1, le1, ls2, le2);\n\n    if (pi === false) {\n      return false;\n    }\n\n    if (\n      pi.x > Math.max(ls1.x, le1.x)\n      || pi.x < Math.min(ls1.x, le1.x)\n      || pi.x > Math.max(ls2.x, le2.x)\n      || pi.x < Math.min(ls2.x, le2.x)\n      || pi.y > Math.max(ls1.y, le1.y)\n      || pi.y < Math.min(ls1.y, le1.y)\n      || pi.y > Math.max(ls2.y, le2.y)\n      || pi.y < Math.min(ls2.y, le2.y)\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public static getPointOfIntersectionBetweenTwoLineSegments(\n    ls1: Point,\n    le1: Point,\n    ls2: Point,\n    le2: Point,\n  ): Point | false {\n    if (this.checkIfTwoLineSegmentsAreParallel(ls1, le1, ls2, le2) === true) {\n      return false;\n    }\n\n    let ix = 0;\n    let iy = 0;\n\n    // Get slope.\n    let m1 = this.getSlopeOfLine(ls1, le1);\n    let m2 = this.getSlopeOfLine(ls2, le2);\n\n    let yi1, yi2;\n\n    if (m1 === false && typeof m2 === 'number') {\n      ix = ls1.x;\n\n      yi2 = -1 * m2 * ls2.x + ls2.y;\n\n      iy = m2 * ix + yi2;\n    } else if (m2 === false && typeof m1 === 'number') {\n      ix = ls2.x;\n\n      yi1 = -1 * m1 * ls1.x + ls1.y;\n\n      iy = m1 * ix + yi1;\n    } else if (typeof m1 === 'number' && typeof m2 === 'number') {\n      // Get y-intercept\n      // b = -m * x + y\n      yi1 = -1 * m1 * ls1.x + ls1.y;\n\n      yi2 = -1 * m2 * ls2.x + ls2.y;\n\n      // Complete line equations\n      ix = (yi1 - yi2) / (m2 - m1);\n\n      iy = m1 * ix + yi1;\n    }\n\n    return new Point(ix, iy);\n  }\n}\n","import {\n  Num,\n  Vector2,\n} from '../rocket';\n\nexport interface PointLike {\n  x: number;\n  y: number;\n\n  [key: string]: any;\n}\n\nexport class Point {\n  public x: number = 0;\n  public y: number = 0;\n\n  constructor(x: number, y: number);\n  constructor(x: number);\n  constructor(p: Point);\n  constructor(v: Vector2);\n  constructor(p: PointLike);\n  constructor();\n  constructor(a?: number | PointLike, b?: number) {\n    if (typeof a === 'number' && typeof b === 'number') {\n      this.x = a;\n      this.y = b;\n    } else if (typeof a === 'number' && typeof b !== 'number') {\n      this.x = a;\n      this.y = a;\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n\n      this.x = a.x;\n      this.y = a.y;\n    }\n\n    return this;\n  }\n\n  public equals(x: number, y: number): this;\n  public equals(n: number): this;\n  public equals(p: Point): this;\n  public equals(v: Vector2): this;\n  public equals(p: PointLike): this;\n  public equals(a: number | PointLike, b?: number): this {\n    if (typeof a === 'number' && typeof b === 'number') {\n      this.x = a;\n      this.y = b;\n    } else if (typeof a === 'number' && typeof b !== 'number') {\n      this.x = a;\n      this.y = a;\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n\n      this.x = a.x;\n      this.y = a.y;\n    }\n\n    return this;\n  }\n\n  public clone() {\n    return new Point(this.x, this.y);\n  }\n\n  public isEqual(...points: PointLike[]): boolean {\n    let isEqual = true;\n\n    points.forEach(point => {\n      if (this.x !== point.x || this.y !== point.y) {\n        isEqual = false;\n      }\n    });\n\n    return isEqual;\n  }\n\n  public toVector2(): Vector2 {\n    return new Vector2(this.x, this.y);\n  }\n\n  // @modify\n\n  public round(to: number = 0): this {\n    this.x = parseFloat(this.x.toFixed(to));\n    this.y = parseFloat(this.y.toFixed(to));\n\n    return this;\n  }\n\n  public negative(): this {\n    this.x = -this.x;\n    this.y = -this.y;\n\n    return this;\n  }\n\n  public absolute(): this {\n    this.x = Math.abs(this.x);\n    this.y = Math.abs(this.y);\n\n    return this;\n  }\n\n  public zero(): this {\n    this.x = this.y = 0;\n\n    return this;\n  }\n\n  // @calculate\n\n  public getLengthFromOrigin(): number {\n    return Num.hypotenuse(this.x, this.y);\n  }\n\n  public getLengthFrom(x: number, y: number): number;\n  public getLengthFrom(p: number): number;\n  public getLengthFrom(a: number | PointLike, b?: number): number {\n    let x;\n    let y;\n\n    x = y = 0;\n\n    if (typeof a === 'number' && typeof b === 'number') {\n      x = a;\n      y = b;\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n      x = a.x;\n      y = a.y;\n    }\n\n    x = this.x - x;\n    y = this.y - y;\n\n    return Num.hypotenuse(x, y);\n  }\n\n  // @operations\n\n  public add(x: number, y: number): this;\n  public add(n: number): this;\n  public add(p: Point): this;\n  public add(v: Vector2): this;\n  public add(p: PointLike): this;\n  public add(a: PointLike | number, b?: number): this {\n    if (typeof a === 'number' && typeof b === 'number') {\n      this.x += a;\n      this.y += b;\n    } else if (typeof a === 'number' && typeof b !== 'number') {\n      this.x += a;\n      this.y += a;\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n\n      this.x += a.x;\n      this.y += a.y;\n    }\n\n    return this;\n  }\n\n  public addX(n: number): this;\n  public addX(p: Point): this;\n  public addX(v: Vector2): this;\n  public addX(p: PointLike): this;\n  public addX(a: PointLike | number): this {\n    if (typeof a === 'number') {\n      this.x += a;\n    } else if (Point.isPointLike(a) === true) {\n      this.x += a.x;\n    }\n\n    return this;\n  }\n\n  public addY(n: number): this;\n  public addY(p: Point): this;\n  public addY(v: Vector2): this;\n  public addY(p: PointLike): this;\n  public addY(a: PointLike | number): this {\n    if (typeof a === 'number') {\n      this.y += a;\n    } else if (Point.isPointLike(a) === true) {\n      this.y += a.y;\n    }\n\n    return this;\n  }\n\n  public subtract(x: number, y: number): this;\n  public subtract(n: number): this;\n  public subtract(p: Point): this;\n  public subtract(v: Vector2): this;\n  public subtract(p: PointLike): this;\n  public subtract(a: PointLike | number, b?: number): this {\n    if (typeof a === 'number' && typeof b === 'number') {\n      this.x -= a;\n      this.y -= b;\n    } else if (typeof a === 'number' && typeof b !== 'number') {\n      this.x -= a;\n      this.y -= a;\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n\n      this.x -= a.x;\n      this.y -= a.y;\n    }\n\n    return this;\n  }\n\n  public subtractX(n: number): this;\n  public subtractX(p: Point): this;\n  public subtractX(v: Vector2): this;\n  public subtractX(p: PointLike): this;\n  public subtractX(a: PointLike | number): this {\n    if (typeof a === 'number') {\n      this.x -= a;\n    } else if (Point.isPointLike(a) === true) {\n      this.x -= a.x;\n    }\n\n    return this;\n  }\n\n  public subtractY(n: number): this;\n  public subtractY(p: Point): this;\n  public subtractY(v: Vector2): this;\n  public subtractY(p: PointLike): this;\n  public subtractY(a: PointLike | number): this {\n    if (typeof a === 'number') {\n      this.y -= a;\n    } else if (Point.isPointLike(a) === true) {\n      this.y -= a.y;\n    }\n\n    return this;\n  }\n\n  public multiply(x: number, y: number): this;\n  public multiply(n: number): this;\n  public multiply(p: Point): this;\n  public multiply(v: Vector2): this;\n  public multiply(p: PointLike): this;\n  public multiply(a: PointLike | number, b?: number): this {\n    if (typeof a === 'number' && typeof b === 'number') {\n      this.x *= a;\n      this.y *= b;\n    } else if (typeof a === 'number' && typeof b !== 'number') {\n      this.x *= a;\n      this.y *= a;\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n\n      this.x *= a.x;\n      this.y *= a.y;\n    }\n\n    return this;\n  }\n\n  public multiplyX(n: number): this;\n  public multiplyX(p: Point): this;\n  public multiplyX(v: Vector2): this;\n  public multiplyX(p: PointLike): this;\n  public multiplyX(a: PointLike | number): this {\n    if (typeof a === 'number') {\n      this.x *= a;\n    } else if (Point.isPointLike(a) === true) {\n      this.x *= a.x;\n    }\n\n    return this;\n  }\n\n  public multiplyY(n: number): this;\n  public multiplyY(p: Point): this;\n  public multiplyY(v: Vector2): this;\n  public multiplyY(p: PointLike): this;\n  public multiplyY(a: PointLike | number): this {\n    if (typeof a === 'number') {\n      this.y *= a;\n    } else if (Point.isPointLike(a) === true) {\n      this.y *= a.y;\n    }\n\n    return this;\n  }\n\n  public divide(x: number, y: number): this;\n  public divide(n: number): this;\n  public divide(p: Point): this;\n  public divide(v: Vector2): this;\n  public divide(p: PointLike): this;\n  public divide(a: PointLike | number, b?: number): this {\n    if (typeof a === 'number' && typeof b === 'number') {\n      if (a === 0 || b === 0) {\n        throw new Error('Point: Division by zero.');\n      } else {\n        this.x /= a;\n        this.y /= b;\n      }\n    } else if (typeof a === 'number' && typeof b !== 'number') {\n      if (a === 0) {\n        throw new Error('Point: Division by zero.');\n      } else {\n        this.x /= a;\n        this.y /= a;\n      }\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n\n      if (a.x === 0 || a.y === 0) {\n        throw new Error('Point: Division by zero.');\n      } else {\n        this.x /= a.x;\n        this.y /= a.y;\n      }\n    }\n\n    return this;\n  }\n\n  public divideX(n: number): this;\n  public divideX(p: Point): this;\n  public divideX(v: Vector2): this;\n  public divideX(p: PointLike): this;\n  public divideX(a: PointLike | number): this {\n    if (typeof a === 'number') {\n      if (a === 0) {\n        throw new Error('Point: Division by zero.');\n      } else {\n        this.x /= a;\n      }\n    } else if (Point.isPointLike(a) === true) {\n      if (a.x === 0) {\n        throw new Error('Point: Division by zero.');\n      } else {\n        this.x /= a.x;\n      }\n    }\n\n    return this;\n  }\n\n  public divideY(n: number): this;\n  public divideY(p: Point): this;\n  public divideY(v: Vector2): this;\n  public divideY(p: PointLike): this;\n  public divideY(a: PointLike | number): this {\n    if (typeof a === 'number') {\n      if (a === 0) {\n        throw new Error('Point: Division by zero.');\n      } else {\n        this.y /= a;\n      }\n    } else if (Point.isPointLike(a) === true) {\n      if (a.y === 0) {\n        throw new Error('Point: Division by zero.');\n      } else {\n        this.y /= a.y;\n      }\n    }\n\n    return this;\n  }\n\n  public static add(point1: PointLike, point2: PointLike, mutate: boolean = false): Point {\n    const x = point1.x + point2.x;\n    const y = point1.y + point2.y;\n\n    if (mutate === true) {\n      point1.x = x;\n      point1.y = y;\n\n      return new Point().equals(point1);\n    }\n\n    return new Point(x, y);\n  }\n\n  public static subtract(point: PointLike, by: PointLike, mutate: boolean = false): Point {\n    const x = point.x - by.x;\n    const y = point.y - by.y;\n\n    if (mutate === true) {\n      point.x = x;\n      point.y = y;\n\n      return new Point().equals(point);\n    }\n\n    return new Point(x, y);\n  }\n\n  public static multiply(point: PointLike, by: PointLike, mutate: boolean = false): Point {\n    const x = point.x * by.x;\n    const y = point.y * by.y;\n\n    if (mutate === true) {\n      point.x = x;\n      point.y = y;\n\n      return new Point().equals(point);\n    }\n\n    return new Point(x, y);\n  }\n\n  public static divide(point: PointLike, by: PointLike, mutate: boolean = false): Point | undefined {\n    if (by.x === 0 || by.y === 0) {\n      throw new Error('Point: Division by zero.');\n    }\n\n    const x = point.x / by.x;\n    const y = point.y / by.y;\n\n    if (mutate === true) {\n      point.x = x;\n      point.y = y;\n\n      return new Point().equals(point);\n    }\n\n    return new Point(x, y);\n  }\n\n  public static getDistanceTo(from: PointLike, to: PointLike): number {\n    const difference = Point.subtract(from, to, true);\n\n    return difference.getLengthFromOrigin();\n  }\n\n  public static getMidPointBetween(a: PointLike, b: PointLike): Point {\n    let x = a.x - b.x;\n    let y = a.y - b.y;\n\n    x /= 2;\n    y /= 2;\n\n    x += b.x;\n    y += b.y;\n\n    return new Point(x, y);\n  }\n\n  public static lerp(time: number, from: PointLike, to: PointLike, mutate: boolean = false): Point {\n    const x = Num.transform(time, 1, [from.x, to.x]);\n    const y = Num.transform(time, 1, [from.y, to.y]);\n\n    if (mutate === true) {\n      from.x = x;\n      from.y = y;\n\n      return new Point().equals(from);\n    }\n\n    return new Point(x, y);\n  }\n\n  // @zero\n\n  public static zero(point?: Point, mutate: boolean = false): Point {\n    if (typeof point !== 'undefined' && mutate === true) {\n      point.x = 0;\n      point.y = 0;\n\n      return point;\n    }\n\n    return new Point(0, 0);\n  }\n\n  public static isPointLike(point): boolean {\n    return (\n      typeof point === 'object'\n      && typeof point.x === 'number'\n      && typeof point.y === 'number'\n    )\n  }\n}\n","import {\n  Angle,\n  Num,\n  Point,\n  PointLike,\n} from '../rocket';\n\n// Glossary\n\n// point: An object containing x and y numbers, representing position in the cartesian plane.\n// length: Magnitude between two vectors OR magnitude of a vector.\n// displacement: A vector, representing the distance and direction of one point to another.\n// direction: A unit vector representing the direction from one point to another.\n\nexport class Vector2 {\n  public x: number = 0;\n  public y: number = 0;\n\n  constructor(x: number, y: number);\n  constructor(n: number);\n  constructor(v: Vector2);\n  constructor(p: Point);\n  constructor(p: PointLike);\n  constructor();\n  constructor(a?: number | PointLike, b?: number) {\n    if (typeof a === 'number' && typeof b === 'number') {\n      this.x = a;\n      this.y = b;\n    } else if (typeof a === 'number' && typeof b !== 'number') {\n      this.x = a;\n      this.y = a;\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n\n      this.x = a.x;\n      this.y = a.y;\n    }\n\n    return this;\n  }\n\n  public equals(x: number, y: number): this;\n  public equals(n: number): this;\n  public equals(v: Vector2): this;\n  public equals(p: Point): this;\n  public equals(p: PointLike): this;\n  public equals(a?: number | PointLike, b?: number): this {\n    if (typeof a === 'number' && typeof b === 'number') {\n      this.x = a;\n      this.y = b;\n    } else if (typeof a === 'number' && typeof b !== 'number') {\n      this.x = a;\n      this.y = a;\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n\n      this.x = a.x;\n      this.y = a.y;\n    }\n\n    return this;\n  }\n\n  public isEqual(...v: PointLike[]): boolean {\n    return v.every(p => this.x === p.x && this.y === p.y);\n  }\n\n  public toPoint(): Point {\n    return new Point(this.x, this.y);\n  }\n\n  public negative(): this {\n    this.x = -this.x;\n    this.y = -this.y;\n\n    return this;\n  }\n\n  public absolute(): this {\n    this.x = Math.abs(this.x);\n    this.y = Math.abs(this.y);\n\n    return this;\n  }\n\n  // TODO: See if this make sense\n  public clamp(by: number): this {\n    this.x = Num.clamp(this.x, by);\n    this.y = Num.clamp(this.y, by);\n\n    return this;\n  }\n\n  public limit(by: number): this {\n    if (this.magnitude > by) {\n      this\n        .normalize()\n        .multiply(by);\n    }\n\n    return this;\n  }\n\n  get magnitude(): number {\n    return Num.hypotenuse(this.x, this.y);\n  }\n\n  set magnitude(magnitude: number) {\n    this\n      .normalize()\n      .multiply(magnitude);\n  }\n\n  public normalize(): this {\n    let magnitude = Math.abs(this.magnitude);\n\n    if (magnitude === 0) {\n      magnitude = 1;\n    }\n\n    this.x /= magnitude;\n    this.y /= magnitude;\n\n    return this;\n  }\n\n  public dot(point: PointLike): number {\n    return this.x * point.x + this.y * point.y;\n  }\n\n  public round(to: number = 0): this {\n    this.x = parseFloat(this.x.toFixed(to));\n    this.y = parseFloat(this.y.toFixed(to));\n\n    return this;\n  }\n\n  public zero(): this {\n    this.x = this.y = 0;\n\n    return this;\n  }\n\n  get isZero(): boolean {\n    return this.x === 0 && this.y === 0;\n  }\n\n  public clone(): Vector2 {\n    return Vector2.clone(this);\n  }\n\n  get array(): [number, number] {\n    return [this.x, this.y];\n  }\n\n  get string(): string {\n    return `x: ${this.x}, y: ${this.y}`;\n  }\n\n  get average(): number {\n    return (Math.abs(this.x) + Math.abs(this.y)) / 2;\n  }\n\n  public add(x: number, y: number): this;\n  public add(n: number): this;\n  public add(v: Vector2): this;\n  public add(p: Point): this;\n  public add(p: PointLike): this;\n  public add(a: number | PointLike, b?: number): this {\n    if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n\n      this.x += a.x;\n      this.y += a.y;\n    } else if (typeof a === 'number' && typeof b === 'number') {\n      this.x += a;\n      this.y += b;\n    } else if (typeof a === 'number' && typeof b !== 'number') {\n      this.x += a;\n      this.y += a;\n    }\n\n    return this;\n  }\n\n  public addX(n: number): this;\n  public addX(v: Vector2): this;\n  public addX(p: Point): this;\n  public addX(p: PointLike): this;\n  public addX(a: number | PointLike): this {\n    if (typeof a === 'number') {\n      this.x += a;\n    } else if (typeof a === 'object' && typeof a.x === 'number') {\n      this.x += a.x;\n    }\n\n    return this;\n  }\n\n  public addY(n: number): this;\n  public addY(v: Vector2): this;\n  public addY(p: Point): this;\n  public addY(p: PointLike): this;\n  public addY(a: number | PointLike): this {\n    if (typeof a === 'number') {\n      this.y += a;\n    } else if (typeof a === 'object' && typeof a.y === 'number') {\n      this.y += a.y;\n    }\n\n    return this;\n  }\n\n  public subtract(x: number, y: number): this;\n  public subtract(n: number): this;\n  public subtract(v: Vector2): this;\n  public subtract(p: Point): this;\n  public subtract(p: PointLike): this;\n  public subtract(a: number | PointLike, b?: number): this {\n    if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n\n      this.x -= a.x;\n      this.y -= a.y;\n    } else if (typeof a === 'number' && typeof b !== 'number') {\n      this.x -= a;\n      this.y -= a;\n    } else if (typeof a === 'number' && typeof b === 'number') {\n      this.x -= a;\n      this.y -= b;\n    }\n\n    return this;\n  }\n\n  public subtractX(n: number): this;\n  public subtractX(v: Vector2): this;\n  public subtractX(p: Point): this;\n  public subtractX(p: PointLike): this;\n  public subtractX(a: number | PointLike): this {\n    if (typeof a === 'number') {\n      this.x -= a;\n    } else if (typeof a === 'object' && typeof a.x === 'number') {\n      this.x -= a.x;\n    }\n\n    return this;\n  }\n\n  public subtractY(n: number): this;\n  public subtractY(v: Vector2): this;\n  public subtractY(p: Point): this;\n  public subtractY(p: PointLike): this;\n  public subtractY(a: number | PointLike): this {\n    if (typeof a === 'number') {\n      this.y -= a;\n    } else if (typeof a === 'object' && typeof a.y === 'number') {\n      this.y -= a.y;\n    }\n\n    return this;\n  }\n\n  public multiply(x: number, y: number): this;\n  public multiply(n: number): this;\n  public multiply(v: Vector2): this;\n  public multiply(p: Point): this;\n  public multiply(p: PointLike): this;\n  public multiply(a: number | PointLike, b?: number): this {\n    if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n\n      this.x *= a.x;\n      this.y *= a.y;\n    } else if (typeof a === 'number' && typeof b !== 'number') {\n      this.x *= a;\n      this.y *= a;\n    } else if (typeof a === 'number' && typeof b === 'number') {\n      this.x *= a;\n      this.y *= b;\n    }\n\n    return this;\n  }\n\n  public multiplyX(n: number): this;\n  public multiplyX(v: Vector2): this;\n  public multiplyX(p: Point): this;\n  public multiplyX(p: PointLike): this;\n  public multiplyX(a: number | PointLike): this {\n    if (typeof a === 'number') {\n      this.x *= a;\n    } else if (Point.isPointLike(a) === true) {\n      this.x *= a.x;\n    }\n\n    return this;\n  }\n\n  public multiplyY(n: number): this;\n  public multiplyY(v: Vector2): this;\n  public multiplyY(p: Point): this;\n  public multiplyY(p: PointLike): this;\n  public multiplyY(a: number | PointLike): this {\n    if (typeof a === 'number') {\n      this.y *= a;\n    } else if (Point.isPointLike(a) === true) {\n      this.y *= a.y;\n    }\n\n    return this;\n  }\n\n  public divide(x: number, y: number): this;\n  public divide(n: number): this;\n  public divide(v: Vector2): this;\n  public divide(p: Point): this;\n  public divide(p: PointLike): this;\n  public divide(a: number | PointLike, b?: number): this {\n    if (typeof a === 'number' && typeof b !== 'number') {\n      if (a === 0) {\n        throw new Error('Vector2: Division by zero.');\n      } else {\n        this.x /= a;\n        this.y /= a;\n      }\n    } else if (typeof a === 'number' && typeof b === 'number') {\n      if (a === 0 || b === 0) {\n        throw new Error('Vector2: Division by zero.');\n      } else {\n        this.x /= a;\n        this.y /= b;\n      }\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n\n      if (a.x === 0 || a.y === 0) {\n        throw new Error('Vector2: Division by zero.');\n      } else {\n        this.x /= a.x;\n        this.y /= a.y;\n      }\n    }\n\n    return this;\n  }\n\n  public divideX(n: number): this;\n  public divideX(v: Vector2): this;\n  public divideX(p: Point): this;\n  public divideX(p: PointLike): this;\n  public divideX(a: number | PointLike): this {\n    if (typeof a === 'number') {\n      if (a === 0) {\n        throw new Error('Vector2: Division by zero.');\n      } else {\n        this.x /= a;\n      }\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n\n      if (a.x === 0) {\n        throw new Error('Vector2: Division by zero.');\n      } else {\n        this.x /= a.x;\n      }\n    }\n\n    return this;\n  }\n\n  public divideY(n: number): this;\n  public divideY(v: Vector2): this;\n  public divideY(p: Point): this;\n  public divideY(p: PointLike): this;\n  public divideY(a: number | PointLike): this {\n    if (typeof a === 'number') {\n      if (a === 0) {\n        throw new Error('Vector2: Division by zero.');\n      } else {\n        this.y /= a;\n      }\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n\n      if (a.y === 0) {\n        throw new Error('Vector2: Division by zero.');\n      } else {\n        this.y /= a.y;\n      }\n    }\n\n    return this;\n  }\n\n  public getDistanceTo(to: PointLike): number {\n    return Vector2.subtract(this, to).magnitude;\n  }\n\n  get angle() {\n    let angle = Math.acos(this.x / this.magnitude);\n\n    if (this.y < 0) {\n      angle = Math.PI + (Math.PI - angle);\n    }\n\n    return angle;\n  }\n\n  public getAngleFrom(from: PointLike): number {\n    const x = this.x - from.x;\n    const y = this.y - from.y;\n\n    const m = Num.hypotenuse(x, y);\n\n    let angle = Math.acos(x / m);\n\n    if (y < 0) {\n      angle = Math.PI + (Math.PI - angle);\n    }\n\n    return angle;\n  }\n\n  public getAngleTo(to: PointLike): number {\n    const x = to.x - this.x;\n    const y = to.y - this.y;\n\n    const m = Num.hypotenuse(x, y);\n\n    let angle = Math.acos(x / m);\n\n    if (y < 0) {\n      angle = Math.PI + (Math.PI - angle);\n    }\n\n    return angle;\n  }\n\n  public moveBy(v: PointLike): this;\n  public moveBy(x: number): this;\n  public moveBy(x: number, y: number): this;\n  public moveBy(a: number | PointLike, b?: number): this {\n    if (typeof a === 'number' && typeof b === 'number') {\n      this.x += a;\n      this.y += b;\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n\n      this.add(a);\n    }\n\n    return this;\n  }\n\n  public moveTo(v: PointLike): this;\n  public moveTo(x: number, y: number): this;\n  public moveTo(a: number | PointLike, b?: number): this {\n    if (typeof a === 'number' && typeof b === 'number') {\n      this.x = a;\n      this.y = b;\n    } else if (Point.isPointLike(a) === true) {\n      a = a as PointLike;\n\n      this.equals(a);\n    }\n\n    return this;\n  }\n\n  public polarTranslate(angle: number, length: number): this {\n    angle = Num.cycle(angle, Math.PI * 2);\n\n    this.x += Math.cos(angle) * length;\n    this.y += Math.sin(angle) * length;\n\n    return this;\n  }\n\n  public polarTranslateBy(by: number, length: number): this {\n    const angle = Num.cycle(this.angle + by, Math.PI * 2);\n\n    this.x += Math.cos(angle) * length;\n    this.y += Math.sin(angle) * length;\n\n    return this;\n  }\n\n  public moveRadiallyBy(angle: number, by: number): this {\n    angle = Num.cycle(angle, Math.PI * 2);\n\n    this.x += Math.cos(angle) * by;\n    this.y += Math.sin(angle) * by;\n\n    return this;\n  }\n\n  public moveRadiallyTo(angle: number, to: number): this {\n    angle = Num.cycle(angle, Math.PI * 2);\n\n    this.x = Math.cos(angle) * to;\n    this.y = Math.sin(angle) * to;\n\n    return this;\n  }\n\n  public rotateBy(by: number): this {\n    const angle = this.angle + by;\n\n    this.x = Math.cos(angle) * this.magnitude;\n    this.y = Math.sin(angle) * this.magnitude;\n\n    return this;\n  }\n\n  public rotateTo(angle: number): this {\n    angle = Num.cycle(angle, Math.PI * 2);\n\n    this.x = Math.cos(angle) * this.magnitude;\n    this.y = Math.sin(angle) * this.magnitude;\n\n    return this;\n  }\n\n  public rotateByFrom(by: number, from: PointLike): this {\n    by = Num.cycle(by, Math.PI * 2);\n\n    const x = this.x - from.x;\n    const y = this.y - from.y;\n\n    const m = Num.hypotenuse(x, y);\n\n    let a = Math.acos(x / m);\n\n    if (y < 0) {\n      a = Math.PI + (Math.PI - a);\n    }\n\n    const angle = Num.cycle(a + by, Math.PI * 2);\n\n    this.x = from.x + Math.cos(angle) * m;\n    this.y = from.y + Math.sin(angle) * m;\n\n    return this;\n  }\n\n  public rotateToFrom(to: number, from: PointLike): this {\n    to = Num.cycle(to, Math.PI * 2);\n\n    const x = this.x - from.x;\n    const y = this.y - from.y;\n\n    const m = Num.hypotenuse(x, y);\n\n    this.x = from.x + Math.cos(to) * m;\n    this.y = from.y + Math.sin(to) * m;\n\n    return this;\n  }\n\n  public scaleBy(by: number): this {\n    let magnitude = this.magnitude;\n\n    if (magnitude === 0) {\n      magnitude = 1;\n    }\n\n    this.x /= magnitude;\n    this.y /= magnitude;\n\n    this.x *= by;\n    this.y *= by;\n\n    return this;\n  }\n\n  public scaleByFrom(by: number, from: PointLike): this {\n    const difference = Vector2.subtract(this, from);\n\n    const magnitude = difference.magnitude;\n\n    difference\n      .normalize()\n      .multiply(magnitude * by)\n      .add(from);\n\n    this.equals(difference);\n\n    return this;\n  }\n\n  public applyLerp(t: number, point: PointLike): this {\n    this.x = Num.transform(t, 1, [this.x, point.x], false);\n    this.y = Num.transform(t, 1, [this.y, point.y], false);\n\n    return this;\n  }\n\n  public applyCubicBezier(\n    t: number,\n    p1: PointLike,\n    cp1: PointLike,\n    cp2: PointLike,\n    p2: PointLike,\n  ): this {\n    this.x = Num.cubicBezier(t, p1.x, cp1.x, cp2.x, p2.x);\n    this.y = Num.cubicBezier(t, p1.y, cp1.y, cp2.y, p2.y);\n\n    return this;\n  }\n\n  static clone(point: PointLike): Vector2 {\n    return new Vector2(point.x, point.y);\n  }\n\n  static unit(v: PointLike): Vector2 {\n    return Vector2\n      .clone(v)\n      .normalize();\n  }\n\n  static add(a: PointLike, b: PointLike): Vector2 {\n    return Vector2\n      .clone(a)\n      .add(b);\n  }\n\n  static subtract(a: PointLike, b: PointLike): Vector2 {\n    return Vector2\n      .clone(a)\n      .subtract(b);\n  }\n\n  static multiply(v: PointLike, n: number): Vector2 {\n    return Vector2\n      .clone(v)\n      .multiply(n);\n  }\n\n  static divide(v: PointLike, n: number): Vector2 {\n    return Vector2\n      .clone(v)\n      .divide(n);\n  }\n\n  static projectFrom(from: PointLike, direction: PointLike, by: number): Vector2 {\n    const to = Vector2\n    .clone(direction)\n    .normalize()\n    .multiply(by);\n\n    return Vector2.add(from, to);\n  }\n\n  static splitAtAngle(target: PointLike, angle: number, by: number): Vector2[] {\n    let results: Vector2[] = [];\n\n    results[0] = Vector2.clone(target).moveRadiallyBy(angle, -by);\n    results[1] = Vector2.clone(target).moveRadiallyBy(angle, by);\n\n    return results;\n  }\n\n  static getMidPointBetween(a: PointLike, b: PointLike): Vector2 {\n    let x = a.x - b.x;\n    let y = a.y - b.y;\n\n    x /= 2;\n    y /= 2;\n\n    x += b.x;\n    y += b.y;\n\n    return new Vector2(x, y);\n  }\n\n  // Distance and length are alias of each other.\n  static getDistanceBetween(a: PointLike, b: PointLike): number {\n    return Vector2.subtract(a, b).magnitude;\n  }\n\n  static getLengthBetween(a: PointLike, b: PointLike): number {\n    return Vector2.subtract(a, b).magnitude;\n  }\n\n  static scaleByFrom(vector: PointLike, to: number, from: PointLike): Vector2 {\n    return Vector2.clone(vector).scaleByFrom(to, from);\n  }\n\n  static getDisplacement(from: PointLike, to: PointLike): Vector2 {\n    return Vector2.subtract(to, from);\n  }\n\n  static getDirection(from: PointLike, to: PointLike): Vector2 {\n    return Vector2.subtract(to, from).normalize();\n  }\n\n  // Returns a Vector rotated 90degrees clockwise for a\n  // 2D coordinate system where the positive Y axis goes down.\n  static perpendicular(from: Vector2): Vector2 {\n    return from.clone().rotateBy(Math.PI / 2);\n  }\n\n  static angleIsInProximity(a: number, b: number, tolerance: number): boolean {\n    const d1 = Angle.differenceClockwise(a, b);\n    const d2 = Angle.differenceCounterclockwise(a, b);\n\n    const d = Math.min(d1, d2);\n\n    return d <= tolerance;\n  }\n\n  static getAngleBetween2Points(a: PointLike, b: PointLike): number {\n    const a1 = Vector2.clone(a).angle;\n    const a2 = Vector2.clone(b).angle;\n\n    const b1 = Angle.differenceClockwise(a1, a2);\n    const b2 = Angle.differenceCounterclockwise(a1, a2);\n\n    return Math.min(b1, b2);\n  }\n\n  static getAngleBetween3Points(a: PointLike, b: PointLike, c: PointLike): number {\n    const va = Vector2.clone(a);\n    const vb = Vector2.clone(b);\n    const vc = Vector2.clone(c);\n\n    const a1 = vb.getAngleTo(va);\n    const a2 = vb.getAngleTo(vc);\n\n    const b1 = Angle.differenceClockwise(a1, a2);\n    const b2 = Angle.differenceCounterclockwise(a1, a2);\n\n    return Math.min(b1, b2);\n  }\n\n  static getBasePointOfTriangle(v1: PointLike, v2: PointLike, v3: PointLike): Vector2 {\n    const a1 = v1.getAngleTo(v3);\n    const a2 = v1.getAngleTo(v2);\n\n    const a = Math.abs(a1 - a2);\n\n    const h = v1.getDistanceTo(v2);\n\n    const bh = Math.sin(a) * h;\n    const ml = Math.atan(a) / bh;\n\n    const fv = Vector2.clone(v1);\n\n    return fv.moveRadiallyBy(a1, ml);\n  }\n\n  // static perpendicular(): Vector2 {}\n\n  static getCenterVector(...v: PointLike[]): Vector2 {\n    const left = this.minX(...v);\n    const right = this.maxX(...v);\n    const top = this.minY(...v);\n    const bottom = this.maxY(...v);\n\n    return new Vector2(\n      left + (right - left) / 2,\n      top + (bottom - top) / 2\n    );\n  }\n\n  static one(): Vector2 {\n    return new Vector2(1, 1);\n  }\n\n  static get zero(): Vector2 {\n    return new Vector2(0, 0);\n  }\n\n  static get random(): Vector2 {\n    return new Vector2(Math.random(), Math.random());\n  }\n\n  static up(): Vector2 {\n    return new Vector2(0, -1);\n  }\n\n  static down(): Vector2 {\n    return new Vector2(0, 1);\n  }\n\n  static left(): Vector2 {\n    return new Vector2(-1, 0);\n  }\n\n  static right(): Vector2 {\n    return new Vector2(0, 1);\n  }\n\n  static min(...v: Vector2[]): Vector2 {\n    const magnitudes = v.map(vector => vector.magnitude);\n   \n    const index = magnitudes.indexOf(Math.min(...magnitudes));\n\n    return v[index];\n  }\n\n  static max(...v: Vector2[]): Vector2 {\n    const magnitudes = v.map(vector => vector.magnitude);\n\n    const index = magnitudes.indexOf(Math.max(...magnitudes));\n\n    return v[index];\n  }\n\n  static minX(...p: PointLike[]): number {\n    const x = p.map(point => point.x);\n\n    const i = x.indexOf(Math.min(...x));\n\n    return x[i];\n  }\n\n  static minY(...p: PointLike[]): number {\n    const y = p.map(point => point.y);\n\n    const i = y.indexOf(Math.min(...y));\n\n    return y[i];\n  }\n\n  static maxX(...p: PointLike[]): number {\n    const x = p.map(point => point.x);\n\n    const i = x.indexOf(Math.max(...x));\n\n    return x[i];\n  }\n\n  static maxY(...p: PointLike[]): number {\n    const y = p.map(point => point.y);\n\n    const i = y.indexOf(Math.max(...y));\n\n    return y[i];\n  }\n}\n","import {\n  PointLike,\n  Vector2,\n} from '../rocket';\n\nexport class Vector2Group {\n  public static addGroupBy(group: Vector2[], by: PointLike): Vector2[] {\n    return group.map(point => point.add(by));\n  }\n\n  public static subtractGroupBy(group: Vector2[], by: PointLike): Vector2[] {\n    return group.map(point => point.subtract(by));\n  }\n\n  public static multiplyGroupBy(group: Vector2[], by: number): Vector2[] {\n    return group.map(point => point.multiply(by));\n  }\n\n  public static divideGroupBy(group: Vector2[], by: number): Vector2[] {\n    return group.map(point => point.divide(by));\n  }\n\n  public static scaleGroupByFrom(group: Vector2[], by: number, from: PointLike): Vector2[] {\n    return group.map(point => point.scaleByFrom(by, from));\n  }\n\n  public static rotateGroupToFrom(group: Vector2[], to: number, from: PointLike): Vector2[] {\n    return group.map(point => point.rotateToFrom(to, from));\n  }\n\n  public static rotateGroupByFrom(group: Vector2[], by: number, from: PointLike): Vector2[] {\n    return group.map(point => point.rotateByFrom(by, from));\n  }\n}\n","import {\n  Animation,\n} from './animation';\n\nexport interface AnimationTimingFunction {\n  (t: number): number;\n}\n\nexport interface AnimationTickFunction<T = void> {\n  (n: number, iterationCount: number, animation: Animation, data: any): Promise<T> | void;\n}\n\nexport interface AnimationBeforeCallback<T = void> {\n  (animation: Animation, data: any): Promise<T> | void;\n}\n\nexport interface AnimationCallback {\n  (animation: Animation, data: any): void;\n}\n\nexport interface AnimationConfig {\n  timeUnit: 's' | 'ms';\n\n  alternate: boolean;\n\n  delay: number;\n\n  iterationDelay: number;\n\n  duration: number;\n\n  direction: 1 | -1;\n\n  numberOfIterations: number | 'infinite';\n\n  dataExport: object;\n\n  timingFunction: AnimationTimingFunction;\n\n  onTick: AnimationTickFunction | AnimationTickFunction[];\n\n  beforeStart: AnimationBeforeCallback;\n\n  beforeStartWithDelay: AnimationBeforeCallback;\n\n  onStart: AnimationCallback | AnimationCallback[];\n\n  beforeIterationStart: AnimationBeforeCallback;\n\n  beforeSubsequentIteration: AnimationBeforeCallback;\n\n  onIterationStart: AnimationCallback | AnimationCallback[];\n\n  onIterationComplete: AnimationCallback | AnimationCallback[];\n\n  onPause: AnimationCallback | AnimationCallback[];\n\n  onContinue: AnimationCallback | AnimationCallback[];\n\n  onComplete: AnimationCallback | AnimationCallback[];\n\n  onEnd: AnimationCallback | AnimationCallback[];\n\n  callback: Function;\n}\n\nexport const DEFAULT_ANIMATION_CONFIG: AnimationConfig = {\n  timeUnit: 's',\n\n  alternate: false,\n\n  delay: 0,\n\n  iterationDelay: 0,\n\n  duration: 0.4,\n\n  direction: 1,\n\n  numberOfIterations: 1,\n\n  dataExport: {},\n\n  timingFunction: t => t,\n\n  onTick: (n, fn, data) => {},\n\n  beforeStart: () => Promise.resolve(),\n\n  beforeStartWithDelay: () => Promise.resolve(),\n\n  onStart: () => {},\n\n  beforeIterationStart: () => Promise.resolve(),\n\n  onIterationStart: () => {},\n\n  onIterationComplete: () => {},\n\n  beforeSubsequentIteration: () => Promise.resolve(),\n\n  onPause: () => {},\n\n  onContinue: () => {},\n\n  onComplete: () => {},\n\n  onEnd: () => {},\n\n  callback: () => {},\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","import {\n  Num,\n} from '../rocket';\n\nimport {\n  Animation,\n} from './animation';\n\nexport type AnimationState = 'READY' | 'INITIAL' | 'BETWEEN' | 'ANIMATING' | 'PAUSED';\n\nexport class AnimationCore {\n  public animation: Animation;\n\n  public isActive: boolean = false;\n  public isAnimating: boolean = false;\n  public isPaused: boolean = false;\n\n  public state: AnimationState = 'READY';\n\n  public currentDirection: 1 | -1 = 1;\n\n  public iterationCount: number = 0;\n\n  private progress: number = 0;\n  private progressTimeOffset: number = 0;\n\n  private startTime: number = 0;\n  private endTime: number = 0;\n  private pauseTime: number = 0;\n\n  private animationFrameId?: number;\n  private startTimeoutId?: number;\n  private iterationTimeoutId?: number;\n\n  public callback?: Function;\n\n  constructor(animation: Animation) {\n    this.animation = animation;\n  }\n\n  private getTimeInMilliseconds(time: number) {\n    const { config } = this.animation;\n\n    if (config.timeUnit === 's') {\n      return time * 1000;\n    }\n\n    return time;\n  }\n\n  public async start(delay?: number): Promise<void> {\n    if (\n      this.isActive === false\n      && this.isAnimating === false\n      && this.isPaused === false\n    ) {\n      const { config } = this.animation;\n\n      this.state = 'INITIAL';\n\n      this.isActive = true;\n\n      if (typeof delay !== 'number') {\n        delay = 0;\n\n        if (typeof config.delay === 'number') {\n          delay = config.delay;\n        }\n      }\n\n      if (delay > 0) {\n        try {\n          await config.beforeStart(this.animation, config.dataExport);\n\n          await config.beforeStartWithDelay(this.animation, config.dataExport);\n\n          this.startTimeoutId = setTimeout(this.begin, this.getTimeInMilliseconds(delay));\n\n          return Promise.resolve();\n        } catch (error) {\n          this.end();\n\n          return Promise.reject(error);\n        }\n      } else {\n        try {\n          await config.beforeStart(this.animation, config.dataExport);\n\n          this.begin();\n\n          return Promise.resolve();\n        } catch (error) {\n          this.end();\n\n          return Promise.reject(error);\n        }\n      }\n    }\n\n    return Promise.reject(\n      new Error('@nekobird/rocket: Animation.core.start: Animation is already active.'),\n    );\n  }\n\n  private begin = () => {\n    if (\n      this.isActive === true\n      && this.isAnimating === false\n      && this.isPaused === false\n    ) {\n      this.setStartingDirection();\n\n      this.runCallbacks('onStart');\n\n      this.startIteration();\n    }\n  };\n\n  private setStartingDirection() {\n    const { config } = this.animation;\n\n    this.currentDirection = config.direction;\n  }\n\n  private async startIteration() {\n    const { config } = this.animation;\n\n    try {\n      await config.beforeIterationStart(this.animation, config.dataExport);\n\n      this.state = 'BETWEEN';\n\n      this.runCallbacks('onIterationStart');\n\n      this.prepareIteration();\n\n      this.continueLoop();\n\n      return Promise.resolve();\n    } catch (error) {\n      this.end();\n\n      return Promise.reject(error);\n    }\n  }\n\n  private prepareIteration(): this {\n    const { config } = this.animation;\n\n    this.progress = 0;\n    this.progressTimeOffset = 0;\n\n    this.startTime = Date.now();\n    this.endTime = this.startTime + this.getTimeInMilliseconds(config.duration);\n\n    return this;\n  }\n\n  private continueLoop(): this {\n    if (this.isActive === true) {\n      if (typeof this.animationFrameId === 'number') {\n        window.cancelAnimationFrame(this.animationFrameId);\n      }\n\n      this.state = 'ANIMATING';\n\n      this.isAnimating = true;\n\n      this.animationFrameId = window.requestAnimationFrame(this.loop);\n    }\n\n    return this;\n  }\n\n  public loop = () => {\n    if (\n      this.isActive === true\n      && this.isAnimating === true\n      && this.isPaused === false\n    ) {\n      // Progress always starts from 0\n      // regardless of direction.\n      if (this.progress < 1) {\n        this.tick();\n\n        this.continueLoop();\n      } else {\n        this.completeIteration();\n      }\n    }\n  };\n\n  public completeIteration() {\n    const { config } = this.animation;\n\n    this.state = 'BETWEEN';\n\n    this.isAnimating = false;\n\n    this.iterationCount++;\n\n    this.runCallbacks('onIterationComplete');\n\n    // Complete animation if iterationCount exceeds numberOfIterations\n    if (\n      typeof config.numberOfIterations === 'number'\n      && this.iterationCount >= config.numberOfIterations\n    ) {\n      this.complete();\n    } else {\n      this.continueIteration();\n    }\n  }\n\n  public async continueIteration() {\n    const { config } = this.animation;\n\n    try {\n      await config.beforeSubsequentIteration(this.animation, config.dataExport);\n\n      this.iterationTimeoutId = setTimeout(\n        () => {\n          if (config.alternate === true) {\n            this.toggleCurrentDirection();\n          }\n\n          this.startIteration();\n        },\n        this.getTimeInMilliseconds(config.iterationDelay)\n      );\n    } catch (error) {\n      this.end();\n\n      return Promise.reject(error);\n    }\n  }\n\n  public pause(): this {\n    if (\n      this.isActive === true\n      && this.isPaused === false\n    ) {\n      this.clearTimeoutsAndAnimationFrames();\n\n      this.state = 'PAUSED';\n\n      this.isAnimating = false;\n      this.isPaused = true;\n\n      this.pauseTime = Date.now();\n\n      this.runCallbacks('onPause');\n    }\n\n    return this;\n  }\n\n  public continueAnimation = () => {\n    if (\n      this.isActive === true\n      && this.isPaused === true\n    ) {\n      const startTimeDelta = this.pauseTime - this.startTime;\n      const endTimeDelta = this.endTime - this.pauseTime;\n\n      const now = Date.now();\n\n      this.startTime = now - startTimeDelta;\n      this.endTime = now + endTimeDelta;\n\n      this.state = 'BETWEEN';\n\n      this.isPaused = false;\n\n      this.runCallbacks('onContinue');\n\n      this.continueLoop();\n    }\n  };\n\n  public reset(): this {\n    this.clearTimeoutsAndAnimationFrames();\n\n    this.isActive = this.isAnimating = this.isPaused = false;\n\n    this.currentDirection = this.animation.config.direction;\n\n    this.iterationCount = 0;\n\n    this.startTime = this.endTime = this.pauseTime = 0;\n\n    this.progress = 0;\n\n    this.state = 'READY';\n\n    return this;\n  }\n\n  public complete(): this {\n    this.reset();\n\n    if (this.isActive === true) {\n      this.runCallbacks('onComplete');\n\n      this.end();\n    }\n\n    return this;\n  }\n\n  public end(): this {\n    this.reset();\n\n    if (this.isActive === true) {\n      this.runCallbacks('onEnd');\n\n      this.animation.config.callback();\n\n      if (typeof this.callback === 'function') {\n        this.callback();\n      }\n    }\n\n    return this;\n  }\n\n  public tick(): this {\n    if (\n      this.isActive === true\n      && this.isAnimating === true\n    ) {\n      const { config } = this.animation;\n\n      this.progress = this.getCurrentProgress();\n\n      let n = config.timingFunction(this.progress);\n\n      if (this.currentDirection === -1) {\n        n = 1 - n;\n      }\n\n      this.callOnTick(n);\n    }\n\n    return this;\n  }\n\n  public inactiveTick(to: number): this {\n    if (this.isActive === false) {\n      const { config } = this.animation;\n\n      let n = Num.clamp(to, 1);\n\n      if (config.direction === -1) {\n        n = 1 - n;\n      }\n\n      this.callOnTick(n);\n    }\n\n    return this;\n  }\n\n  public callOnTick(n: number): this {\n    const { config } = this.animation;\n\n    if (typeof config.onTick === 'function') {\n      config.onTick(n, this.iterationCount, this.animation, config.dataExport);\n    } else if (Array.isArray(config.onTick) === true) {\n      config.onTick.forEach(tick => {\n        if (typeof tick === 'function') {\n          tick(n, this.iterationCount, this.animation, config.dataExport);\n        }\n      });\n    }\n\n    return this;\n  }\n\n  private getCurrentProgress(): number {\n    return Num.transform(\n      Date.now() + this.progressTimeOffset,\n      [this.startTime, this.endTime],\n      1,\n      true\n    );\n  }\n\n  // TODO: Rename this to something better.\n  public setProgressTimeOffsetFromProgressTarget(target: number) {\n    const offset = this.getCurrentProgress() - target;\n\n    const sign = Num.getSign(offset) * -1;\n\n    const timeOffset = Num.transform(\n      Math.abs(offset), 1, [this.startTime, this.endTime], true\n    );\n\n    this.progressTimeOffset += (timeOffset - this.startTime) * sign;\n  }\n\n  private toggleCurrentDirection(): this {\n    this.currentDirection *= -1;\n\n    return this;\n  }\n\n  public clearTimeoutsAndAnimationFrames(): this {\n    if (typeof this.startTimeoutId === 'number') {\n      clearTimeout(this.startTimeoutId);\n    }\n\n    if (typeof this.iterationTimeoutId === 'number') {\n      clearTimeout(this.iterationTimeoutId);\n    }\n\n    if (typeof this.animationFrameId === 'number') {\n      window.cancelAnimationFrame(this.animationFrameId);\n    }\n\n    return this;\n  }\n\n  public runCallbacks(name: string): this {\n    const { config } = this.animation;\n\n    if (typeof config[name] === 'function') {\n      config[name](this.animation, config.dataExport);\n    } else if (Array.isArray(config[name]) === true) {\n      config[name].forEach(callback => {\n        if (typeof callback === 'function') {\n          callback(this.animation, config.dataExport);\n        }\n      });\n    }\n\n    return this;\n  }\n}\n","import {\n  AnimationConfig,\n  DEFAULT_ANIMATION_CONFIG,\n} from './animation-config';\n\nimport {\n  AnimationCore,\n  AnimationState,\n} from './animation-core';\n\nexport class Animation {\n  public config: AnimationConfig;\n\n  public core: AnimationCore;\n\n  constructor(config?: Partial<AnimationConfig>) {\n    this.config = {...DEFAULT_ANIMATION_CONFIG};\n\n    this.config.dataExport = {};\n\n    this.setConfig(config);\n\n    this.core = new AnimationCore(this);\n\n    return this;\n  }\n\n  public setConfig(config?: Partial<AnimationConfig>): this {\n    if (typeof config === 'object') {\n      Object.assign(this.config, config);\n    }\n\n    return this;\n  }\n\n  public get state(): AnimationState {\n    return this.core.state;\n  }\n\n  public get isActive(): boolean {\n    return this.core.isActive;\n  }\n\n  public get isAnimating(): boolean {\n    return this.core.isAnimating;\n  }\n\n  public get isPaused(): boolean {\n    return this.core.isPaused;\n  }\n\n  public get iterationCount(): number {\n    return this.iterationCount;\n  }\n\n  public jumpTo(to: number): this {\n    if (this.core.isActive === true) {\n      this.core.setProgressTimeOffsetFromProgressTarget(to);\n    }\n    \n    if (this.core.isActive === false) {\n      this.core.inactiveTick(to);\n    }\n\n    return this;\n  }\n\n  public play(delay?: number): Promise<void> {\n    if (this.core.isPaused === true) {\n      this.core.continueAnimation();\n\n      return Promise.resolve();\n    } else {\n      return new Promise(resolve => {\n        this.core.callback = () => resolve();\n\n        this.core.start(delay);\n      });\n    }\n  }\n\n  public pause(): this {\n    if (this.core.isActive === true) {\n      this.core.pause();\n    }\n\n    return this;\n  }\n\n  public stop(): this {\n    if (this.core.isActive === true) {\n      this.core.end();\n    }\n\n    return this;\n  }\n}\n","export class Easings {\n  static QuadEaseIn(t: number): number {\n    return t * t;\n  }\n\n  static QuadEaseOut(t: number): number {\n    return -1 * t * (t - 2);\n  }\n\n  static QuadEaseInEaseOut(t: number): number {\n    t /= 0.5;\n\n    if (t < 1) {\n      return 0.5 * t * t;\n    }\n\n    t--;\n\n    return -0.5 * (t * (t - 2) - 1);\n  }\n\n  static CubicEaseIn(t: number): number {\n    return t * t * t;\n  }\n\n  static CubicEaseOut(t: number): number {\n    t--;\n\n    return t * t * t + 1;\n  }\n\n  static CubicEaseInEaseOut(t: number): number {\n    t /= 0.5;\n\n    if (t < 1) {\n      return 0.5 * t * t * t;\n    }\n\n    t -= 2;\n\n    return 0.5 * (t * t * t + 2);\n  }\n\n  static QuarticEaseIn(t: number): number {\n    return t * t * t * t;\n  }\n\n  static QuarticEaseOut(t: number): number {\n    t--;\n\n    return -1 * (t * t * t * t - 1);\n  }\n\n  static QuarticEaseInEaseOut(t: number): number {\n    t /= 0.5;\n\n    if (t < 1) {\n      return 0.5 * t * t * t * t;\n    }\n\n    t -= 2;\n\n    return -0.5 * (t * t * t * t - 2);\n  }\n\n  static EaseOutElastic(t: number, p: number = 0.3): number {\n    return Math.pow(2, -10 * t) * Math.sin(((t - p / 4) * (2 * Math.PI)) / p) + 1;\n  }\n}\n","import {\n  ConvertColor,\n  Num,\n  StringUtil,\n} from '../rocket';\n\ntype ColorArray3 = [number, number, number];\n\ntype ColorArray4 = [number, number, number, number];\n\n// Range\n// A   : 1\n// RGB : 1  , 1, 1\n// HSL : 359, 1, 1\n// HSV : 359, 1, 1\n// CYMK: 1  , 1, 1, 1\n\nconst NAMED_COLOR_SET = {\n  azure: [0, 0.5, 1, 1],\n  black: [0, 0, 0, 1],\n  blue: [0, 0, 1, 1],\n  brown: [0.6, 0.3, 0, 1],\n  clear: [0, 0, 0, 0],\n  cyan: [0, 1, 1, 1],\n  gray: [0.5, 0.5, 0.5, 1],\n  green: [0, 1, 0, 1],\n  magenta: [1, 0, 1, 1],\n  orange: [1, 0.5, 0, 1],\n  pink: [1, 0.8, 0.86, 1],\n  purple: [0.5, 0, 0.5, 1],\n  red: [1, 0, 0, 1],\n  salmon: [0.98, 0.5, 0.45, 1],\n  transparent: [0, 0, 0, 0],\n  ultramarine: [0.25, 0, 1, 1],\n  violet: [0.5, 0, 1, 1],\n  white: [1, 1, 1, 1],\n  yellow: [1, 1, 0, 1],\n};\n\nconst COLOR_INPUT_REGEX = {\n  hex: /^#([0-9a-fA-F]{6}|[0-9a-fA-F]{3})$/g,\n  hsl: /^(hsl|HSL)\\((360|3[0-5][0-9]|2[0-9][0-9]|1[0-9][0-9]|[1-9]?[0-9]),\\s?(100|[1-9]?[0-9])\\%?,\\s?(100|[1-9]?[0-9])\\%?\\)$/g,\n  hsla: /^(hsla|HSLA)\\((360|3[0-5][0-9]|2[0-9][0-9]|1[0-9][0-9]|[1-9]?[0-9]),\\s?(100|[1-9]?[0-9])\\%?,\\s?(100|[1-9]?[0-9])\\%?,\\s?(1|0|0\\.([0-9]?)+[1-9])\\)$/g,\n  rgb: /^(rgb|RGB)\\((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]),\\s?(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]),\\s?(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\)$/g,\n  rgba: /^(rgba|RGBA)\\((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]),\\s?(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]),\\s?(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]),\\s?(1|0|0\\.([0-9]?){1,5}[1-9])\\)$/g,\n};\n\nexport class Color {\n  public r: number = 0;\n  public g: number = 0;\n  public b: number = 0;\n  public a: number = 1;\n\n  constructor(input?) {\n    if (typeof input !== 'undefined') {\n      this.set(input);\n    }\n  }\n\n  public equals(color: Color): this {\n    if (Color.isColor(color) === true) {\n      this.r = color.r;\n      this.g = color.g;\n      this.b = color.b;\n      this.a = color.a;\n    }\n\n    return this;\n  }\n\n  public clone(): Color {\n    return Color.clone(this);\n  }\n\n  public set(input) {\n    if (Color.isColor(input)) {\n      this.equals(input);\n    } else if (typeof input === 'string') {\n      this.colorString = input;\n    } else {\n      this.r = 0;\n      this.g = 0;\n      this.b = 0;\n      this.a = 1;\n    }\n\n    return this;\n  }\n\n  set colorString(input: string) {\n    if (typeof NAMED_COLOR_SET[input] !== 'undefined') {\n      this.rgba = NAMED_COLOR_SET[input];\n    } else if (typeof StringUtil.match(input, COLOR_INPUT_REGEX.hex) === 'string') {\n      this.hex = input;\n    } else if (typeof StringUtil.match(input, COLOR_INPUT_REGEX.rgb) === 'string') {\n      this.rgbString = input;\n    } else if (typeof StringUtil.match(input, COLOR_INPUT_REGEX.rgba) === 'string') {\n      this.rgbaString = input;\n    } else if (typeof StringUtil.match(input, COLOR_INPUT_REGEX.hsl) === 'string') {\n      this.hslString = input;\n    } else if (typeof StringUtil.match(input, COLOR_INPUT_REGEX.hsla) === 'string') {\n      this.hslaString = input;\n    }\n  }\n\n  // GETTERS AND SETTERS\n\n  // STRINGS\n  set rgbString(input: string) {\n    const numbers = input.match(/(\\d+)/g);\n\n    if (numbers) {\n      const rgb = numbers.map(v => {\n        return Num.cycle(parseFloat(v) / 255, 1);\n      });\n\n      this.r = rgb[0];\n      this.g = rgb[1];\n      this.b = rgb[2];\n    }\n  }\n\n  set rgbaString(input: string) {\n    const numbers = input.match(/([\\d]+(\\.[\\d]+)?)/g);\n\n    if (numbers) {\n      const rgba = numbers.map((value, index) => {\n        if (index === 3) {\n          return Num.cycle(parseFloat(value), 1);\n        }\n\n        return Num.cycle(parseFloat(value) / 255, 1);\n      });\n\n      this.r = rgba[0];\n      this.g = rgba[1];\n      this.b = rgba[2];\n      this.a = rgba[3];\n    }\n  }\n\n  set hslString(input: string) {\n    const numbers = input.match(/(\\d+)/g);\n\n    if (numbers) {\n      const hsl = numbers.map(v => parseFloat(v));\n\n      hsl[1] /= 100;\n      hsl[2] /= 100;\n\n      const rgb = ConvertColor.HSLToRGB(...hsl as ColorArray3);\n\n      this.r = rgb[0];\n      this.g = rgb[1];\n      this.b = rgb[2];\n    }\n  }\n\n  set hslaString(input: string) {\n    const numbers = input.match(/([\\d]+(\\.[\\d]+)?)/g);\n\n    if (numbers) {\n      const hsla = numbers.map(v => parseFloat(v));\n\n      const hsl = hsla.slice(0, 3);\n\n      hsl[1] /= 100;\n      hsl[2] /= 100;\n\n      const rgb = ConvertColor.HSLToRGB(...hsl as ColorArray3);\n\n      this.r = rgb[0];\n      this.g = rgb[1];\n      this.b = rgb[2];\n      this.a = Num.cycle(hsla[3], 1);\n    }\n  }\n\n  // These will always return HTML color format.\n  get rgbString(): string {\n    const rgb = this.rgb255;\n\n    return `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\n  }\n\n  get rgbaString(): string {\n    const rgba = this.rgb255;\n\n    return `rgba(${rgba[0]}, ${rgba[1]}, ${rgba[2]}, ${this.a})`;\n  }\n\n  get hslString(): string {\n    const hsl = this.hsl;\n\n    const s = (hsl[1] * 100).toFixed(0);\n    const l = (hsl[2] * 100).toFixed(0);\n\n    return `hsl(${hsl[0]}, %${s}, ${l})`;\n  }\n\n  get hslaString(): string {\n    const hsl = this.hsl;\n\n    const s = (hsl[1] * 100).toFixed(0);\n    const l = (hsl[2] * 100).toFixed(0);\n\n    return `hsl(${hsl[0]}, %${s}, ${l}, ${this.a})`;\n  }\n\n  set hexString(hex: string) {\n    this.hex = hex;\n  }\n\n  get hexString(): string {\n    return this.hex;\n  }\n\n  // HEX\n\n  set hex(hex: string) {\n    const rgb = ConvertColor.HEXToRGB(hex);\n\n    this.r = rgb[0];\n    this.g = rgb[1];\n    this.b = rgb[2];\n  }\n\n  get hex(): string {\n    const rgb = [this.r, this.g, this.b] as ColorArray3;\n\n    return ConvertColor.RGBToHEX(...rgb);\n  }\n\n  // RGB\n\n  set rgb255(rgb: ColorArray3) {\n    this.r = Num.cycle(rgb[0] / 255, 1);\n    this.g = Num.cycle(rgb[1] / 255, 1);\n    this.b = Num.cycle(rgb[2] / 255, 1);\n  }\n\n  get rgb255(): ColorArray3 {\n    const rgb = [this.r, this.g, this.b];\n\n    return rgb.map(v => Math.round(v * 255)) as ColorArray3;\n  }\n\n  set rgb(rgb: ColorArray3) {\n    this.r = Num.cycle(rgb[0], 1);\n    this.g = Num.cycle(rgb[1], 1);\n    this.b = Num.cycle(rgb[2], 1);\n  }\n\n  get rgb(): ColorArray3 {\n    return [this.r, this.g, this.b];\n  }\n\n  // RGBA\n\n  set rgba255(rgba: ColorArray4) {\n    this.r = Num.cycle(rgba[0], 1);\n    this.g = Num.cycle(rgba[1], 1);\n    this.b = Num.cycle(rgba[2], 1);\n    this.a = Num.cycle(rgba[3], 1);\n  }\n\n  get rgba255(): ColorArray4 {\n    return [this.r, this.g, this.b, this.a];\n  }\n\n  set rgba(rgba: ColorArray4) {\n    this.r = Num.cycle(rgba[0], 1);\n    this.g = Num.cycle(rgba[1], 1);\n    this.b = Num.cycle(rgba[2], 1);\n    this.a = Num.cycle(rgba[3], 1);\n  }\n\n  get rgba(): ColorArray4 {\n    return [this.r, this.g, this.b, this.a];\n  }\n\n  // HSL\n\n  set hsl(hsl: ColorArray3) {\n    const rgb = ConvertColor.HSLToRGB(...hsl);\n\n    this.r = rgb[0];\n    this.g = rgb[1];\n    this.b = rgb[2];\n  }\n\n  get hsl(): ColorArray3 {\n    return ConvertColor.RGBToHSL(this.r, this.g, this.b);\n  }\n\n  // HSV and HSB\n\n  set hsv(hsv: ColorArray3) {\n    if (hsv.length === 3) {\n      const rgb = ConvertColor.HSVToRGB(...hsv);\n\n      this.r = rgb[0];\n      this.g = rgb[1];\n      this.b = rgb[2];\n    }\n  }\n\n  get hsv(): ColorArray3 {\n    return ConvertColor.HSVToRGB(this.r, this.g, this.b);\n  }\n\n  // CMYK\n\n  set cmyk(cmyk: ColorArray4) {\n    const rgb = ConvertColor.CMYKToRGB(...cmyk);\n\n    this.r = rgb[0];\n    this.g = rgb[1];\n    this.b = rgb[2];\n  }\n\n  get cmyk(): ColorArray4 {\n    return ConvertColor.RGBToCMYK(this.r, this.g, this.b);\n  }\n\n  // RED\n\n  set red255(red: number) {\n    this.r = Num.cycle(red / 255, 1);\n  }\n\n  get red255(): number {\n    return Math.round(this.r * 255);\n  }\n\n  set red(red: number) {\n    this.r = red;\n  }\n\n  get red(): number {\n    return this.r;\n  }\n\n  // GREEN\n\n  set green255(green: number) {\n    this.g = Num.cycle(green / 255, 1);\n  }\n\n  get green255(): number {\n    return Math.round(this.g * 255);\n  }\n\n  set green(green: number) {\n    this.g = green;\n  }\n\n  get green(): number {\n    return this.g;\n  }\n\n  // BLUE\n\n  set blue255(blue: number) {\n    this.b = Num.cycle(blue / 255, 1);\n  }\n\n  get blue255(): number {\n    return Math.round(this.b * 255);\n  }\n\n  set blue(blue: number) {\n    this.b = blue;\n  }\n\n  get blue(): number {\n    return this.b;\n  }\n\n  // CYAN\n\n  set cyan(cyan: number) {\n    const cmyk = ConvertColor.RGBToCMYK(this.r, this.g, this.b);\n\n    cmyk[0] = cyan;\n\n    const rgb = ConvertColor.CMYKToRGB(...cmyk);\n\n    this.r = rgb[0];\n    this.g = rgb[1];\n    this.b = rgb[2];\n  }\n\n  get cyan(): number {\n    return ConvertColor.RGBToCMYK(this.r, this.g, this.b)[0];\n  }\n\n  // MAGENTA\n\n  set magenta(magenta: number) {\n    const cmyk = ConvertColor.RGBToCMYK(this.r, this.g, this.b);\n\n    cmyk[1] = magenta;\n\n    const rgb = ConvertColor.CMYKToRGB(...cmyk);\n\n    this.r = rgb[0];\n    this.g = rgb[1];\n    this.b = rgb[2];\n  }\n\n  get magenta(): number {\n    return ConvertColor.RGBToCMYK(this.r, this.g, this.b)[1];\n  }\n\n  // YELLOW\n\n  set yellow(yellow: number) {\n    const cmyk = ConvertColor.RGBToCMYK(this.r, this.g, this.b);\n\n    cmyk[2] = yellow;\n\n    const rgb = ConvertColor.CMYKToRGB(...cmyk);\n\n    this.r = rgb[0];\n    this.g = rgb[1];\n    this.b = rgb[2];\n  }\n\n  get yellow(): number {\n    return ConvertColor.RGBToCMYK(this.r, this.g, this.b)[2];\n  }\n\n  // ALPHA\n\n  set alpha(alpha: number) {\n    this.a = Num.cycle(alpha, 1);\n  }\n\n  get alpha(): number {\n    return this.a;\n  }\n\n  // HUE\n\n  set hue(degrees: number) {\n    const hsl = ConvertColor.RGBToHSL(this.r, this.g, this.b);\n\n    hsl[0] = Math.abs(Math.round(Num.cycle(degrees, 359)));\n\n    const rgb = ConvertColor.HSLToRGB(...hsl);\n\n    this.r = rgb[0];\n    this.g = rgb[1];\n    this.b = rgb[2];\n  }\n\n  get hue(): number {\n    const hsl = ConvertColor.RGBToHSL(this.r, this.g, this.b);\n\n    return Math.round(hsl[0]);\n  }\n\n  // SATURATION\n\n  set saturation(saturation: number) {\n    const hsl = ConvertColor.RGBToHSL(this.r, this.g, this.b);\n\n    hsl[1] = Num.cycle(saturation, 1);\n\n    const rgb = ConvertColor.HSLToRGB(...hsl);\n\n    this.r = rgb[0];\n    this.g = rgb[1];\n    this.b = rgb[2];\n  }\n\n  get saturation(): number {\n    const hsl = ConvertColor.RGBToHSL(this.r, this.g, this.b);\n\n    return hsl[1];\n  }\n\n  // VALUE\n\n  set value(value: number) {\n    const hsv = ConvertColor.RGBToHSV(this.r, this.g, this.b);\n\n    hsv[2] = Num.cycle(value, 1);\n\n    const rgb = ConvertColor.HSVToRGB(...hsv);\n\n    this.r = rgb[0];\n    this.g = rgb[1];\n    this.b = rgb[2];\n  }\n\n  get value(): number {\n    const hsv = ConvertColor.RGBToHSV(this.r, this.g, this.b);\n\n    return hsv[2];\n  }\n\n  get brightness(): number {\n    return Math.sqrt(\n      0.299 * this.r * this.r\n      + 0.587 * this.g * this.g\n      + 0.114 * this.b * this.b\n    );\n  }\n\n  // MODIFIER\n\n  public hueRotate(increment: number): this {\n    this.hue += increment;\n\n    return this;\n  }\n\n  public invert(): this {\n    this.r = 1 - this.r;\n    this.g = 1 - this.g;\n    this.b = 1 - this.b;\n\n    return this;\n  }\n\n  // INTERPOLATION\n\n  public lerp(target: Color, t: number): this {\n    this.r = Num.lerp(t, this.r, target.r);\n    this.g = Num.lerp(t, this.g, target.g);\n    this.b = Num.lerp(t, this.b, target.b);\n    this.a = Num.lerp(t, this.a, target.a);\n\n    return this;\n  }\n\n  // @static\n\n  static isColor(color): boolean {\n    return typeof color === 'object' && color instanceof Color;\n  }\n\n  static clone(color: Color): Color {\n    return new Color(color);\n  }\n\n  static triadic(color: Color): [Color, Color, Color] {\n    const color_a = color.clone().hueRotate(-120);\n    const color_c = color.clone().hueRotate(120);\n\n    return [color_a, color, color_c];\n  }\n\n  static complement(color: Color): Color {\n    return color.clone().hueRotate(180);\n  }\n\n  static splitComplements(color: Color): [Color, Color, Color] {\n    const color_a = color.clone().hueRotate(-150);\n    const color_c = color.clone().hueRotate(150);\n\n    return [color_a, color, color_c];\n  }\n\n  static analogous(color: Color): [Color, Color, Color] {\n    const color_a = color.clone().hueRotate(-30);\n    const color_c = color.clone().hueRotate(30);\n\n    return [color_a, color, color_c];\n  }\n\n  static lerp(t: number, color_a: Color, color_b: Color): Color {\n    const color = Color.clone(color_a);\n\n    color.r = Num.lerp(t, color_a.r, color_b.r);\n    color.g = Num.lerp(t, color_a.g, color_b.g);\n    color.b = Num.lerp(t, color_a.b, color_b.b);\n    color.a = Num.lerp(t, color_a.a, color_b.a);\n\n    return color;\n  }\n}\n","import {\n  Num,\n} from '../rocket';\n\n/*\n  https://gist.github.com/felipesabino/5066336\n  http://stackoverflow.com/questions/2353211/hsl-to-rgb-color-conversion\n  http://www.tannerhelland.com/3643/grayscale-image-algorithm-vb6/\n  http://alienryderflex.com/hsp.html\n  http://www.rapidtables.com/convert/color/hsl-to-rgb.htm\n  alpha      = 1\n  black      = 100\n  blue       = 255\n  cyan       = 100\n  green      = 255\n  lightness  = 100\n  magenta    = 100\n  red        = 255\n  saturation = 100\n  value      = 100\n  yellow     = 100\n*/\n\ntype ColorArray3 = [number, number, number];\n\ntype ColorArray4 = [number, number, number, number];\n\n// RGB 1, 1, 1\nexport function RGBToHEX(...rgb: ColorArray3): string {\n  rgb[0] = Num.cycle(rgb[0], 1);\n  rgb[1] = Num.cycle(rgb[1], 1);\n  rgb[2] = Num.cycle(rgb[2], 1);\n\n  rgb = rgb.map(n => n * 255) as ColorArray3;\n\n  return `#${rgb[0].toString(16)}${rgb[1].toString(16)}${rgb[2].toString(16)}`;\n}\n\n// RGB 1, 1, 1\nexport function HEXToRGB(hex: string): ColorArray3 {\n  let rgb = [0, 0, 0];\n  let r = '';\n  let g = '';\n  let b = '';\n\n  if (hex.length === 7) {\n    r = hex.substr(1, 2);\n    g = hex.substr(3, 2);\n    b = hex.substr(5, 2);\n  } else if (hex.length === 4) {\n    r = hex.substr(1, 1);\n    g = hex.substr(2, 1);\n    b = hex.substr(3, 1);\n\n    r = r.concat(r);\n    g = g.concat(g);\n    b = b.concat(b);\n  }\n\n  rgb[0] = parseInt(r, 16);\n  rgb[1] = parseInt(g, 16);\n  rgb[2] = parseInt(b, 16);\n\n  return rgb.map(n => n / 255) as ColorArray3;\n}\n\n// CMYK 1, 1, 1, 1\n// RGB 1, 1, 1\nexport function RGBToCMYK(...rgb: ColorArray3): ColorArray4 {\n  rgb[0] = Num.cycle(rgb[0], 1);\n  rgb[1] = Num.cycle(rgb[1], 1);\n  rgb[2] = Num.cycle(rgb[2], 1);\n\n  const cmyk = [0, 0, 0, 0];\n\n  cmyk[3] = 1 - Math.max(...rgb);\n  cmyk[0] = (1 - rgb[0] - cmyk[3]) / (1 - cmyk[3]);\n  cmyk[1] = (1 - rgb[1] - cmyk[3]) / (1 - cmyk[3]);\n  cmyk[2] = (1 - rgb[2] - cmyk[3]) / (1 - cmyk[3]);\n\n  return cmyk as ColorArray4;\n}\n\n// CMYK 1, 1, 1, 1\n//  RGB 1, 1, 1\nexport function CMYKToRGB(...cmyk: ColorArray4): ColorArray3 {\n  cmyk[0] = Num.cycle(cmyk[0], 1);\n  cmyk[1] = Num.cycle(cmyk[1], 1);\n  cmyk[2] = Num.cycle(cmyk[2], 1);\n  cmyk[3] = Num.cycle(cmyk[3], 1);\n\n  const rgb = [0, 0, 0];\n\n  rgb[0] = (1 - cmyk[0]) * (1 - cmyk[3]);\n  rgb[1] = (1 - cmyk[1]) * (1 - cmyk[3]);\n  rgb[2] = (1 - cmyk[2]) * (1 - cmyk[3]);\n\n  return rgb as ColorArray3;\n}\n\n// RGB   1, 1, 1\n// HSL 359, 1, 1\nexport function RGBToHSL(...rgb: ColorArray3): ColorArray3 {\n  rgb[0] = Num.cycle(rgb[0], 1);\n  rgb[1] = Num.cycle(rgb[1], 1);\n  rgb[2] = Num.cycle(rgb[2], 1);\n\n  let cMin = Math.min(...rgb);\n  let cMax = Math.max(...rgb);\n  \n  let delta = cMax - cMin;\n\n  let hsl = [0, 0, 0];\n\n  if (delta === 0) {\n    hsl[0] = 0;\n  } else if (cMax === rgb[0]) {\n    hsl[0] = 60 * (((rgb[1] - rgb[2]) / delta) % 6);\n  } else if (cMax === rgb[1]) {\n    hsl[0] = 60 * ((rgb[2] - rgb[0]) / delta + 2);\n  } else if (cMax === rgb[2]) {\n    hsl[0] = 60 * ((rgb[0] - rgb[1]) / delta + 4);\n  }\n\n  hsl[2] = (cMax + cMin) / 2;\n  hsl[1] = delta === 0 ? 0 : delta / (1 - Math.abs(2 * hsl[2] - 1));\n\n  return hsl as ColorArray3;\n}\n\n// HSL 359, 1, 1\n// RGB   1, 1, 1\nexport function HSLToRGB(...hsl: ColorArray3): ColorArray3 {\n  hsl[0] = Num.cycle(hsl[0], 359);\n  hsl[1] = Num.cycle(hsl[1], 1);\n  hsl[2] = Num.cycle(hsl[2], 1);\n\n  let rgb = [0, 0, 0];\n\n  let h = hsl[0] / 60;\n\n  let c = (1 - Math.abs(2 * hsl[2] - 1)) * hsl[1];\n\n  let x = c * (1 - Math.abs((h % 2) - 1));\n\n  if (h >= 0 && h <= 1) {\n    rgb = [c, x, 0];\n  } else if (h >= 1 && h <= 2) {\n    rgb = [x, c, 0];\n  } else if (h >= 2 && h <= 3) {\n    rgb = [0, c, x];\n  } else if (h >= 3 && h <= 4) {\n    rgb = [0, x, c];\n  } else if (h >= 4 && h <= 5) {\n    rgb = [x, 0, c];\n  } else if (h >= 5 && h <= 6) {\n    rgb = [c, 0, x];\n  }\n\n  let m = hsl[2] - 0.5 * c;\n\n  return rgb.map(v => v + m) as ColorArray3;\n}\n\n// RGB   1, 1, 1\n// HSV 359, 1, 1\nexport function RGBToHSV(...rgb: ColorArray3): ColorArray3 {\n  rgb[0] = Num.cycle(rgb[0], 1);\n  rgb[1] = Num.cycle(rgb[1], 1);\n  rgb[2] = Num.cycle(rgb[2], 1);\n\n  let cMin = Math.min(...rgb);\n  let cMax = Math.max(...rgb);\n\n  let delta = cMax - cMin;\n\n  let hsv = [0, 0, 0];\n\n  if (delta === 0) {\n    hsv[0] = 0;\n  } else if (cMax === rgb[0]) {\n    hsv[0] = 60 * (((rgb[1] - rgb[2]) / delta) % 6);\n  } else if (cMax === rgb[1]) {\n    hsv[0] = 60 * ((rgb[2] - rgb[0]) / delta + 2);\n  } else if (cMax === rgb[2]) {\n    hsv[0] = 60 * ((rgb[0] - rgb[1]) / delta + 4);\n  }\n\n  hsv[1] = cMax === 0 ? 0 : delta / cMax;\n  hsv[2] = cMax;\n\n  return hsv as ColorArray3;\n}\n\n// HSV 359, 1, 1\n// RGB   1, 1, 1\nexport function HSVToRGB(...hsv: ColorArray3): ColorArray3 {\n  hsv[0] = Num.cycle(hsv[0], 359);\n  hsv[1] = Num.cycle(hsv[1], 1);\n  hsv[2] = Num.cycle(hsv[2], 1);\n\n  const c = hsv[2] * hsv[1];\n\n  const x = c * (1 - Math.abs(((hsv[0] / 60) % 2) - 1));\n\n  let rgb = [0, 0, 0];\n\n  if (hsv[0] >= 0 && hsv[0] <= 60) {\n    rgb = [c, x, 0];\n  } else if (hsv[0] >= 60 && hsv[0] <= 120) {\n    rgb = [x, c, 0];\n  } else if (hsv[0] >= 120 && hsv[0] <= 180) {\n    rgb = [0, c, x];\n  } else if (hsv[0] >= 180 && hsv[0] <= 240) {\n    rgb = [0, x, c];\n  } else if (hsv[0] >= 240 && hsv[0] <= 300) {\n    rgb = [x, 0, c];\n  } else if (hsv[0] >= 300 && hsv[0] <= 360) {\n    rgb = [c, 0, x];\n  }\n\n  const m = hsv[2] - c;\n\n  return rgb.map(v => v + m) as ColorArray3;\n}\n\nexport const ConvertColor = {\n  CMYKToRGB,\n  HEXToRGB,\n  HSLToRGB,\n  HSVToRGB,\n  RGBToCMYK,\n  RGBToHEX,\n  RGBToHSL,\n  RGBToHSV,\n}\n","import {\n  MonoTap,\n} from './mono-tap';\n\nimport {\n  MonoTapStory,\n} from './mono-tap-story';\n\nimport {\n  MonoTapEvent,\n} from './mono-tap-event';\n\nexport interface MonoTapConfig {\n  target?: HTMLElement;\n\n  offsetFrom?: HTMLElement;\n\n  positionThreshold: number;\n\n  keepHistory: boolean;\n\n  preventDefault: boolean;\n\n  condition: (\n    event: MonoTapEvent,\n    monoTap: MonoTap,\n  ) => boolean;\n\n  isValidTap: (\n    event: MonoTapEvent,\n    story: MonoTapStory,\n    monoTap: MonoTap,\n  ) => boolean;\n\n  onTap: (\n    event: MonoTapEvent,\n    story: MonoTapStory,\n    monoTap: MonoTap,\n  ) => void;\n\n  onEvent: (\n    event: MonoTapEvent,\n    monoTap: MonoTap,\n  ) => void;\n\n  onDown: (\n    event: MonoTapEvent,\n    story: MonoTapStory,\n    monoTap: MonoTap,\n  ) => void;\n\n  onUp: (\n    event: MonoTapEvent,\n    story: MonoTapStory,\n    monoTap: MonoTap,\n  ) => void;\n\n  onCancel: (\n    event: MonoTapEvent,\n    story: MonoTapStory,\n    monoTap: MonoTap,\n  ) => void;\n}\n\nexport const MONO_TAP_DEFAULT_CONFIG = {\n  positionThreshold: 10,\n\n  keepHistory: false,\n\n  preventDefault: true,\n\n  condition: () => true,\n\n  isValidTap: () => true,\n\n  onTap: () => {},\n\n  onEvent: () => {},\n\n  onDown: () => {},\n  onUp: () => {},\n  onCancel: () => {},\n}","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","import {\n  DOMUtil,\n  Vector2,\n} from '../rocket';\n\nimport {\n  MonoTap,\n} from './mono-tap';\n\nexport type MonoTapEventIdentifier = 'mouse' | number;\n\nexport type MonoTapEventType = 'down' | 'move' | 'up' | 'cancel';\n\nexport class MonoTapEvent {\n  public monoTap: MonoTap;\n\n  public type: MonoTapEventType;\n\n  public identifier: MonoTapEventIdentifier;\n\n  public isTouch: boolean;\n\n  public originalEvent: MouseEvent | TouchEvent;\n  public originalTouch?: Touch;\n\n  public targetFromEvent: EventTarget | null;\n  public target: HTMLElement | null;\n\n  public position: Vector2;\n  public offset?: Vector2;\n\n  public time: number;\n\n  constructor(\n    monoTap: MonoTap,\n    type: MonoTapEventType,\n    originalEvent: MouseEvent | TouchEvent,\n    isTouch: boolean = false,\n    touch?: Touch,\n  ) {\n    this.monoTap = monoTap;\n\n    this.time = Date.now();\n\n    this.type = type;\n\n    this.isTouch = isTouch;\n\n    this.originalEvent = originalEvent;\n    this.targetFromEvent = originalEvent.target;\n\n    let clientX;\n    let clientY;\n\n    if (\n      isTouch === true\n      && typeof touch !== 'undefined'\n    ) {\n      this.identifier = touch.identifier;\n\n      clientX = touch.clientX;\n      clientY = touch.clientY;\n    } else {\n      this.identifier = 'mouse';\n\n      const event = originalEvent as MouseEvent;\n\n      clientX = event.clientX;\n      clientY = event.clientY;\n    }\n\n    this.target = document.elementFromPoint(clientX, clientY) as HTMLElement | null;\n\n    this.position = new Vector2(clientX, clientY);\n\n    this.updateOffset();\n  }\n\n  private updateOffset() {\n    const { target, offsetFrom } = this.monoTap.config;\n\n    if (DOMUtil.isHTMLElement(target) === true) {\n      let element = target as HTMLElement;\n\n      if (DOMUtil.isHTMLElement(offsetFrom) === true) {\n        element = offsetFrom as HTMLElement;\n      }\n\n      const { left, top } = element.getBoundingClientRect();\n\n      this.offset= new Vector2(\n        this.position.x - left,\n        this.position.y - top,\n      );\n    }\n  }\n}\n","import {\n  MonoTap,\n} from '../mono-tap';\n\nexport class Sensor {\n  public monoTap: MonoTap;\n\n  public isListening: boolean = false;\n\n  protected target?: HTMLElement;\n\n  constructor(monoTap: MonoTap) {\n    this.monoTap = monoTap;\n  }\n}","import {\n  DOMUtil,\n} from '../../rocket';\n\nimport {\n  MonoTap,\n} from '../mono-tap';\n\nimport {\n  MonoTapEvent,\n  MonoTapEventType,\n} from '../mono-tap-event';\n\nimport {\n  Sensor,\n} from './sensor';\n\nexport class MouseSensor extends Sensor {\n  public mouseButtonIsDown: boolean = false;\n\n  constructor(monoTap: MonoTap) {\n    super(monoTap);\n  }\n\n  public attach(): boolean {\n    const { target } = this.monoTap.config;\n\n    if (\n      this.isListening === false\n      && DOMUtil.isHTMLElement(target) === true\n    ) {\n      this.target = target as HTMLElement;\n\n      this.target.addEventListener('mousedown', this.onMouseDown);\n\n      window.addEventListener('mousemove', this.onMouseMove);\n\n      window.addEventListener('mouseup', this.onMouseUp);\n\n      this.isListening = true;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  public detach(): boolean {\n    if (\n      this.isListening === true\n      && DOMUtil.isHTMLElement(this.target) === true\n    ) {\n      const target = this.target as HTMLElement;\n\n      target.removeEventListener('mousedown', this.onMouseDown);\n\n      window.removeEventListener('mousemove', this.onMouseMove);\n\n      window.removeEventListener('mouseup', this.onMouseUp);\n\n      this.isListening = false;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  private onMouseDown = (event: MouseEvent) => {\n    this.mouseButtonIsDown = true;\n\n    this.dispatch('down', event);\n  }\n\n  private onMouseMove = (event: MouseEvent) => {\n    this.mouseButtonIsDown = true;\n\n    this.dispatch('move', event);\n  }\n\n  private onMouseUp = (event: MouseEvent) => {\n    this.mouseButtonIsDown = false;\n\n    this.dispatch('up', event);\n  }\n\n  private dispatch(type: MonoTapEventType, event: MouseEvent) {\n    const tapEvent = new MonoTapEvent(this.monoTap, type, event);\n\n    this.monoTap.sensorHub.receive(tapEvent);\n  }\n}\n","import {\n  DOMUtil,\n} from '../../rocket';\n\nimport {\n  MonoTap,\n} from '../mono-tap';\n\nimport {\n  MonoTapEvent,\n  MonoTapEventType,\n} from '../mono-tap-event';\n\nimport {\n  Sensor,\n} from './sensor';\n\nexport class TouchSensor extends Sensor {\n  constructor(monoTap: MonoTap) {\n    super(monoTap);\n  }\n\n  public attach(): boolean {\n    const { target } = this.monoTap.config;\n\n    if (\n      this.isListening === false\n      && DOMUtil.isHTMLElement(target) === true\n    ) {\n      this.target = target as HTMLElement;\n\n      this.target.addEventListener('touchstart', this.onTouchStart);\n\n      window.addEventListener('touchmove', this.onTouchMove);\n      window.addEventListener('touchend', this.onTouchEnd);\n      window.addEventListener('touchcancel', this.onTouchCancel);\n\n      this.isListening = true;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  public detach(): boolean {\n    if (\n      this.isListening === true\n      && DOMUtil.isHTMLElement(this.target) === true\n    ) {\n      const target = this.target as HTMLElement;\n\n      target.removeEventListener('touchstart', this.onTouchStart);\n\n      window.removeEventListener('touchmove', this.onTouchMove);\n      window.removeEventListener('touchend', this.onTouchEnd);\n      window.removeEventListener('touchcancel', this.onTouchCancel);\n\n      this.isListening = false;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  private onTouchStart = (event: TouchEvent) => {\n    this.dispatch('down', event);\n  }\n\n  private onTouchMove = (event: TouchEvent) => {\n    this.dispatch('move', event);\n  }\n\n  private onTouchEnd = (event: TouchEvent) => {\n    this.dispatch('up', event);\n  }\n  \n  private onTouchCancel = (event: TouchEvent) => {\n    this.dispatch('cancel', event);\n  }\n\n  private dispatch(type: MonoTapEventType, event: TouchEvent) {\n    [...event.changedTouches].forEach(touch => {\n      const tapEvent = new MonoTapEvent(this.monoTap, type, event, true, touch);\n\n      this.monoTap.sensorHub.receive(tapEvent);\n    });\n  }\n}\n","import {\n  Vector2,\n} from '../rocket';\n\nimport {\n  MonoTapEvent,\n  MonoTapEventIdentifier,\n} from './mono-tap-event';\n\nimport {\n  MonoTap,\n} from './mono-tap';\n\nexport class MonoTapStory {\n  public monoTap: MonoTap;\n\n  public identifier: MonoTapEventIdentifier;\n\n  public isActive: boolean = false;\n  public isCancelled: boolean = false;\n  public hasEnded: boolean = false;\n\n  public downEvent: MonoTapEvent;\n  public upEvent: MonoTapEvent | null = null;\n  public cancelEvent: MonoTapEvent | null = null;\n\n  public startTime: number;\n  public endTime?: number;\n\n  constructor(monoTap: MonoTap, event: MonoTapEvent) {\n    this.monoTap = monoTap;\n\n    this.identifier = event.identifier;\n\n    this.startTime = event.time;\n\n    this.downEvent = event;\n\n    this.addEvent(event);\n  }\n\n  public get duration(): number | null {\n    if (\n      this.hasEnded === true\n      && typeof this.startTime === 'number'\n      && typeof this.endTime === 'number'\n    ) {\n      return this.startTime - this.endTime;\n    }\n\n    return null;\n  }\n\n  public get translationDistance(): number | null {\n    if (this.upEvent !== null) {\n      return Vector2.getDistanceBetween(this.downEvent.position, this.upEvent.position);\n    }\n\n    return null;\n  }\n\n  public addEvent(event: MonoTapEvent) {\n    if (this.identifier !== event.identifier) {\n      return;\n    }\n\n    this.preventDefault(event);\n\n    switch (event.type) {\n      case 'down': {\n        if (this.isActive === false && this.hasEnded === false) {\n          this.downEvent = event;\n\n          this.startTime = event.time;\n\n          this.isActive = true;\n        }\n\n        break;\n      }\n\n      case 'up': {\n        if (this.isActive === true) {\n          this.upEvent = event;\n\n          this.endTime = event.time;\n\n          this.isActive = false;\n\n          this.hasEnded = true;\n        }\n\n        break;\n      }\n\n      case 'cancel': {\n        if (this.isActive === true) {\n          this.cancelEvent = event;\n\n          this.endTime = event.time;\n\n          this.isActive = false;\n          this.hasEnded = true;\n          this.isCancelled = true;\n        }\n\n        break;\n      }\n    }\n  }\n\n  private preventDefault(event: MonoTapEvent) {\n    const { preventDefault } = this.monoTap.config;\n\n    if (preventDefault === true) {\n      event.originalEvent.preventDefault();\n    }\n  }\n}","import {\n  DOMTraverse,\n  Util,\n} from '../rocket';\n\nimport {\n  MonoTap,\n} from './mono-tap';\n\nimport {\n  MouseSensor,\n} from './sensors/mouse-sensor';\n\nimport {\n  TouchSensor, \n} from './sensors/touch-sensor';\n\nimport {\n  MonoTapStory,\n} from './mono-tap-story';\n\nimport {\n  MonoTapEvent,\n} from './mono-tap-event';\n\nexport class SensorHub {\n  public monoTap: MonoTap;\n\n  public mouseSensor: MouseSensor;\n  public touchSensor: TouchSensor;\n\n  public isListening: boolean = false;\n\n  public previousStory: MonoTapStory | null = null;\n\n  public activeStories: MonoTapStory[];\n\n  public history: MonoTapStory[];\n\n  constructor(monoTap: MonoTap) {\n    this.monoTap = monoTap;\n\n    this.mouseSensor = new MouseSensor(this.monoTap);\n    this.touchSensor = new TouchSensor(this.monoTap);\n\n    this.activeStories = [];\n\n    this.history = [];\n  }\n\n  public attach() {\n    if (this.isListening === false) {\n      const result = Util.truthChain(\n        () => this.mouseSensor.attach(),\n        () => this.touchSensor.attach(),\n      );\n\n      this.isListening = result;\n    }\n  }\n\n  public detach() {\n    if (this.isListening === true) {\n      const result = Util.truthChain(\n        () => this.mouseSensor.detach(),\n        () => this.touchSensor.detach(),\n      );\n\n      this.isListening = !result;\n    }\n  }\n\n  // Receive MonoTapEvent from sensors.\n  public receive(event: MonoTapEvent) {\n    const { config } = this.monoTap;\n\n    config.onEvent(event, this.monoTap);\n\n    switch (event.type) {\n      case 'down': {\n        if (config.condition(event, this.monoTap) === true) {\n          const story = new MonoTapStory(this.monoTap, event);\n\n          this.addActiveStory(story);\n\n          config.onDown(event, story, this.monoTap);\n        }\n\n        break;\n      }\n\n      case 'up': {\n        const story = this.getStoryFromEvent(event);\n\n        if (story !== null) {\n          story.addEvent(event);\n\n          config.onUp(event, story, this.monoTap);\n\n          if (\n            story.upEvent !== null\n            && DOMTraverse.hasAncestor(story.upEvent.target as HTMLElement, config.target as HTMLElement) === true\n            && config.isValidTap(event, story, this.monoTap) === true\n          ) {\n            this.previousStory = story;\n\n            config.onTap(event, story, this.monoTap);\n  \n            this.addStoryToHistory(story);        \n          }\n  \n          this.removeActiveStory(story);  \n        }\n\n        break;\n      }\n\n      case 'cancel': {\n        const story = this.getStoryFromEvent(event);\n\n        if (story !== null) {\n          story.addEvent(event);\n\n          this.monoTap.config.onCancel(event, story, this.monoTap);\n\n          this.removeActiveStory(story);\n        }\n\n        break;\n      }\n    }\n  }\n\n  private addStoryToHistory(story: MonoTapStory): boolean {\n    const { keepHistory } = this.monoTap.config;\n\n    if (\n      keepHistory === true\n      && this.history.indexOf(story) === -1\n    ) {\n      this.history.push(story);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  private addActiveStory(story: MonoTapStory): boolean {\n    if (this.activeStories.indexOf(story) === -1) {\n      this.activeStories.push(story);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  private getStoryFromEvent(event: MonoTapEvent): MonoTapStory | null {\n    const story = this.activeStories.find(story => {\n      return story.identifier === event.identifier\n    });\n\n    if (typeof story !== 'undefined') {\n      return story;\n    }\n\n    return null;\n  }\n\n  private removeActiveStory(story: MonoTapStory): boolean {\n    const index = this.activeStories.indexOf(story);\n\n    if (index !== -1) {\n      this.activeStories.splice(index, 1);\n\n      return true;\n    }\n\n    return false;\n  }\n}\n","import {\n  MONO_TAP_DEFAULT_CONFIG,\n  MonoTapConfig,\n} from './config';\n\nimport {\n  SensorHub,\n} from './sensor-hub';\n\nimport {\n  MonoTapStory,\n} from './mono-tap-story';\n\nexport class MonoTap {\n  public config: MonoTapConfig;\n\n  public isActive: boolean = false;\n\n  public sensorHub: SensorHub;\n\n  constructor(config: Partial<MonoTapConfig>) {\n    this.config = {...MONO_TAP_DEFAULT_CONFIG};\n\n    this.setConfig(config);\n\n    this.sensorHub = new SensorHub(this);\n\n    this.listen();\n  }\n\n  public setConfig(config: Partial<MonoTapConfig>): this {\n    if (typeof config === 'object') {\n      Object.assign(this.config, config);\n    }\n\n    return this;\n  }\n\n  public listen(): this {\n    if (this.isActive === false) {\n      this.sensorHub.attach();\n\n      this.isActive = true;\n    }\n\n    return this;\n  }\n\n  public stop(): this {\n    if (this.isActive === true) {\n      this.sensorHub.detach();\n\n      this.isActive = false;\n    }\n\n    return this;\n  }\n\n  public get previousStory(): MonoTapStory | null {\n    const { previousStory } = this.sensorHub;\n\n    if (typeof previousStory === 'undefined') {\n      return null;\n    }\n\n    return previousStory;\n  }\n\n  public get history(): MonoTapStory[] {\n    return this.sensorHub.history;\n  }\n\n  public clearHistory(): this {\n    this.sensorHub.history = [];\n\n    return this;\n  }\n}\n","import {\n  MonoDrag,\n} from './mono-drag';\n\nimport {\n  MonoDragStory,\n} from './mono-drag-story';\n\nimport {\n  MonoDragEvent,\n} from './mono-drag-event';\n\nexport interface MonoDragConfig {\n  target?: HTMLElement;\n\n  offsetFrom?: HTMLElement;\n\n  keepHistory: boolean;\n\n  keepEventHistory: boolean;\n\n  preventDefault: boolean;\n\n  disableContextMenu: boolean;\n\n  condition: (\n    monoDragEvent: MonoDragEvent,\n    monoDrag: MonoDrag,\n  ) => boolean;\n\n  onEvent: (\n    monoDragEvent: MonoDragEvent,\n    monoDrag: MonoDrag,\n  ) => void;\n\n  onDragStart: (\n    monoDragEvent: MonoDragEvent,\n    monoDragStory: MonoDragStory,\n    monoDrag: MonoDrag,\n  ) => void;\n\n  onDrag: (\n    monoDragEvent: MonoDragEvent,\n    monoDragStory: MonoDragStory,\n    monoDrag: MonoDrag,\n  ) => void;\n\n  onDragStop: (\n    monoDragEvent: MonoDragEvent,\n    monoDragStory: MonoDragStory,\n    monoDrag: MonoDrag,\n  ) => void;\n\n  onDragCancel: (\n    monoDragEvent: MonoDragEvent,\n    monoDragStory: MonoDragStory,\n    monoDrag: MonoDrag,\n  ) => void;\n\n  onDragEnd: (\n    monoDragEvent: MonoDragEvent,\n    monoDragStory: MonoDragStory,\n    monoDrag: MonoDrag,\n  ) => void; \n}\n\nexport const MONO_DRAG_DEFAULT_CONFIG: MonoDragConfig = {\n  target: undefined,\n\n  offsetFrom: undefined,\n\n  keepHistory: false,\n\n  keepEventHistory: false,\n\n  preventDefault: true,\n\n  disableContextMenu: false,\n\n  condition: () => true,\n\n  onEvent: () => {},\n\n  onDragStart: () => {},\n\n  onDrag: () => {},\n\n  onDragStop: () => {},\n\n  onDragCancel: () => {},\n\n  onDragEnd: () => {},\n};\n","import {\n  DOMUtil,\n  Vector2,\n} from '../rocket';\n\nimport {\n  MonoDrag,\n} from './mono-drag';\n\nimport {\n  MonoDragEvent,\n  MonoDragEventIdentifier,\n} from './mono-drag-event';\n\nexport class MonoDragStory {\n  public monoDrag: MonoDrag;\n\n  public identifier: MonoDragEventIdentifier;\n\n  public offset: Vector2;\n\n  public previousPosition: Vector2;\n  public previousVelocity: Vector2;\n\n  public history: MonoDragEvent[];\n\n  public startingEvent: MonoDragEvent;\n  public previousEvent: MonoDragEvent | null = null;\n  public currentEvent: MonoDragEvent | null = null;\n  public finalEvent: MonoDragEvent | null = null;\n\n  public startTime: number;\n  public endTime: number | null = null;\n\n  public maxTranslationDistance: number = 0;\n\n  constructor(monoDrag: MonoDrag, event: MonoDragEvent) {\n    this.monoDrag = monoDrag;\n\n    this.offset = new Vector2();\n\n    this.previousPosition = new Vector2();\n    this.previousVelocity = new Vector2();\n\n    this.history = [];\n\n    this.identifier = event.identifier;\n\n    this.startTime = event.time;\n\n    this.startingEvent = event;\n\n    this.addEvent(event);\n  }\n\n  public get duration(): number | null {\n    if (this.endTime === null) {\n      return null;\n    }\n\n    return this.startTime - this.endTime;\n  }\n\n  public get translationDistance(): number | null {\n    if (this.finalEvent !== null) {\n      return Vector2.getDistanceBetween(this.startingEvent.position, this.finalEvent.position);\n    }\n\n    return null;\n  }\n\n  public addEvent(event: MonoDragEvent) {\n    if (this.identifier !== event.identifier) {\n      return;\n    }\n\n    this.preventDefault(event);\n\n    this.addEventToHistory(event);\n\n    switch (event.type) {\n      case 'start': {\n        this.startingEvent = event;\n        this.currentEvent = event;\n        this.previousEvent = event;\n\n        this.updateOffset(event.position);\n\n        break;\n      }\n\n      case 'drag': {\n        this.updateEventVectors(event);\n\n        this.previousEvent = this.currentEvent;\n        this.currentEvent = event;\n\n        this.updateMaxTranslationDistance(event);\n\n        break;\n      }\n\n      case 'stop': {\n        this.addStopOrCancelEvent(event);\n\n        break;\n      }\n\n      case 'cancel': {\n        this.addStopOrCancelEvent(event);\n\n        break;\n      }\n    }\n  }\n\n  private updateMaxTranslationDistance(event: MonoDragEvent) {\n    const distance = Vector2.getDistanceBetween(this.startingEvent.position, event.position);\n\n    if (distance > this.maxTranslationDistance) {\n      this.maxTranslationDistance = distance;\n    }\n  }\n\n  private addStopOrCancelEvent(event: MonoDragEvent) {\n    this.updateEventVectors(event);\n\n    this.previousEvent = this.currentEvent;\n    this.currentEvent = event;\n    this.finalEvent = event;\n\n    this.endTime = event.time;\n\n    this.updateMaxTranslationDistance(event);\n  }\n\n  private preventDefault(event: MonoDragEvent) {\n    const { preventDefault } = this.monoDrag.config;\n\n    if (preventDefault === true) {\n      event.originalEvent.preventDefault();\n    }\n  }\n\n  private addEventToHistory(event: MonoDragEvent) {\n    const { keepEventHistory } = this.monoDrag.config;\n\n    if (\n      keepEventHistory === true\n      && this.history.indexOf(event) === -1\n    ) {\n      this.history.push(event);\n    }\n  }\n\n  private updateOffset(position: Vector2) {\n    const { target, offsetFrom } = this.monoDrag.config;\n\n    if (DOMUtil.isHTMLElement(target) === true) {\n      let element = target as HTMLElement;\n\n      if (DOMUtil.isHTMLElement(offsetFrom) === true) {\n        element = offsetFrom as HTMLElement;\n      }\n\n      const { left, top } = element.getBoundingClientRect();\n\n      this.offset.equals(\n        position.x - left,\n        position.y - top,\n      );\n    }\n  }\n\n  private updateEventVectors(event: MonoDragEvent) {\n    if (event.type !== 'start') {\n      const velocity = Vector2.subtract(\n        event.position,\n        this.previousPosition,\n      );\n\n      event.velocity.equals(velocity);\n\n      const acceleration = Vector2.subtract(\n        event.velocity,\n        this.previousVelocity,\n      );\n\n      event.acceleration.equals(acceleration);\n    }\n\n    this.previousPosition.equals(event.position);\n    this.previousVelocity.equals(event.velocity);\n  }\n}\n","import {\n  Vector2,\n} from '../rocket';\n\nimport {\n  MonoDrag\n} from './mono-drag';\n\nexport type MonoDragEventIdentifier = 'mouse' | number;\n\nexport type MonoDragEventType = 'start' | 'drag' | 'stop' | 'cancel';\n\nexport class MonoDragEvent {\n  public monoDrag: MonoDrag;\n\n  public type: MonoDragEventType;\n\n  public identifier: MonoDragEventIdentifier;\n  \n  public originalEvent: MouseEvent | TouchEvent;\n\n  public isTouch: boolean = false;\n\n  public touch?: Touch;\n\n  public targetFromEvent: EventTarget | null;\n\n  public target: HTMLElement | null;\n\n  public position: Vector2;\n  public velocity: Vector2;\n  public acceleration: Vector2;\n\n  public time: number;\n\n  constructor(\n    monoDrag: MonoDrag,\n    type: MonoDragEventType,\n    originalEvent: MouseEvent | TouchEvent,\n    isTouch: boolean = false,\n    touch?: Touch,\n  ) {\n    this.time = Date.now();\n\n    this.monoDrag = monoDrag;\n\n    this.type = type;\n\n    this.originalEvent = originalEvent;\n\n    this.isTouch = isTouch;\n\n    let clientX;\n    let clientY;\n\n    if (\n      isTouch === true\n      && typeof touch === 'object'\n      && touch instanceof Touch\n    ) {\n      this.touch = touch;\n\n      this.identifier = this.touch.identifier;\n\n      this.targetFromEvent = this.touch.target;\n\n      clientX = this.touch.clientX;\n      clientY = this.touch.clientY;\n    } else {\n      this.identifier = 'mouse';\n\n      const event = originalEvent as MouseEvent;\n\n      this.targetFromEvent = event.target;\n\n      clientX = event.clientX;\n      clientY = event.clientY;\n    }\n\n    this.target = document.elementFromPoint(clientX, clientY) as HTMLElement | null;\n\n    this.position = new Vector2(clientX, clientY);\n    this.velocity = new Vector2();\n    this.acceleration = new Vector2();\n  }\n}\n\n","import {\n  DOMUtil,\n} from '../../rocket';\n\nimport {\n  MonoDrag,\n} from '../mono-drag';\n\nimport {\n  MonoDragEvent,\n  MonoDragEventType,\n} from '../mono-drag-event';\n\nexport class MouseSensor {\n  private monoDrag: MonoDrag;\n\n  public isListening: boolean = false;\n\n  public mouseButtonIsDown: boolean = false;\n\n  private target: HTMLElement | null = null;\n\n  constructor(monoDrag: MonoDrag) {\n    this.monoDrag = monoDrag;\n  }\n\n  public attach(): boolean {\n    let { target } = this.monoDrag.config;\n\n    if (\n      this.isListening === false\n      && DOMUtil.isHTMLElement(target) === true\n    ) {\n      this.target = target as HTMLElement;\n\n      this.target.addEventListener('mousedown', this.onMouseDown);\n      this.target.addEventListener('contextmenu', this.onContextMenu);\n\n      window.addEventListener('mousemove', this.onMouseMove);\n      window.addEventListener('mouseup', this.onMouseUp);\n\n      // document.documentElement.addEventListener('mouseleave', this.onMouseLeave);\n\n      this.isListening = true;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  public detach(): boolean {\n    if (\n      this.isListening === true\n      && DOMUtil.isHTMLElement(this.target) === true\n    ) {\n      const target = this.target as HTMLElement;\n\n      target.removeEventListener('mousedown', this.onMouseDown);\n      target.removeEventListener('contextmenu', this.onContextMenu);\n\n      window.removeEventListener('mousemove', this.onMouseMove);\n      window.removeEventListener('mouseup', this.onMouseUp);\n\n      // document.documentElement.removeEventListener('mouseleave', this.onMouseLeave);\n\n      this.target = null;\n\n      this.isListening = false;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  private onMouseDown = (event: MouseEvent) => {\n    if (this.mouseButtonIsDown === false) {\n      this.dispatch('start', event);\n\n      this.mouseButtonIsDown = true;\n    }\n  }\n\n  private onMouseMove = (event: MouseEvent) => {\n    if (this.mouseButtonIsDown === true) {\n      this.dispatch('drag', event);\n    }\n  }\n\n  private onMouseUp = (event: MouseEvent) => {\n    if (this.mouseButtonIsDown === true) {\n      this.mouseButtonIsDown = false;\n\n      this.dispatch('stop', event);\n    }\n  }\n\n  private onMouseLeave = (event: MouseEvent) => {\n    if (this.mouseButtonIsDown === true) {\n      this.mouseButtonIsDown = false;\n\n      this.dispatch('cancel', event);\n    }\n  }\n\n  private onContextMenu = (event: MouseEvent) => {\n    const { disableContextMenu } = this.monoDrag.config;\n\n    if (disableContextMenu === true) {\n      event.preventDefault();\n\n      event.stopPropagation();\n    }\n  }\n\n  private dispatch(type: MonoDragEventType, event: MouseEvent) {\n    const monoDragEvent = new MonoDragEvent(this.monoDrag, type, event);\n\n    this.monoDrag.sensorHub.receive(monoDragEvent);\n  }\n}","import {\n  DOMUtil,\n} from '../../rocket';\n\nimport {\n  MonoDrag,\n} from '../mono-drag';\n\nimport {\n  MonoDragEvent,\n  MonoDragEventType,\n} from '../mono-drag-event';\n\nexport class TouchSensor {\n  private monoDrag: MonoDrag;\n\n  public isListening: boolean = false;\n\n  public target: HTMLElement | null = null;\n\n  constructor(monoDrag: MonoDrag) {\n    this.monoDrag = monoDrag;\n  }\n\n  public attach(): boolean {\n    let { target } = this.monoDrag.config;\n\n    if (\n      this.isListening === false\n      && DOMUtil.isHTMLElement(target) === true\n    ) {\n      this.target = target as HTMLElement;\n\n      this.target.addEventListener('touchstart', this.onTouchStart);\n\n      window.addEventListener('touchmove', this.onTouchMove);\n      window.addEventListener('touchend', this.onTouchEnd);\n      window.addEventListener('touchcancel', this.onTouchCancel);\n\n      this.isListening = true;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  public detach(): boolean {\n    if (\n      this.isListening === true\n      && DOMUtil.isHTMLElement(this.target) === true\n    ) {\n      const target = this.target as HTMLElement;\n\n      target.removeEventListener('touchstart', this.onTouchStart);\n\n      window.removeEventListener('touchmove', this.onTouchMove);\n      window.removeEventListener('touchend', this.onTouchEnd);\n      window.removeEventListener('touchcancel', this.onTouchCancel);\n\n      this.target = null;\n\n      this.isListening = false;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  private onTouchStart = (event: TouchEvent) => {\n    this.dispatch('start', event);\n  }\n\n  private onTouchMove = (event: TouchEvent) => {\n    this.dispatch('drag', event);\n  }\n\n  private onTouchEnd = (event: TouchEvent) => {\n    this.dispatch('stop', event);\n  }\n\n  private onTouchCancel = (event: TouchEvent) => {\n    this.dispatch('cancel', event);\n  }\n\n  private dispatch(type: MonoDragEventType, event: TouchEvent) {\n    [...event.changedTouches].forEach(touch => {\n      const monoDragEvent = new MonoDragEvent(this.monoDrag, type, event, true, touch);\n\n      this.monoDrag.sensorHub.receive(monoDragEvent);\n    });\n  }\n}","import {\n  Util,\n} from '../rocket';\n\nimport {\n  MonoDrag,\n} from './mono-drag';\n\nimport {\n  MonoDragStory,\n} from './mono-drag-story';\n\nimport {\n  MonoDragEvent,\n  MonoDragEventIdentifier,\n} from './mono-drag-event';\n\nimport {\n  MouseSensor,\n} from './sensors/mouse-sensor';\n\nimport {\n  TouchSensor,\n} from './sensors/touch-sensor';\n\n// SensorHub manages sensors, drag events, and drag stories.\nexport class SensorHub {\n  public monoDrag: MonoDrag;\n\n  public mouseSensor: MouseSensor;\n  public touchSensor: TouchSensor;\n\n  public isListening: boolean = false;\n\n  public hasOneActiveStory: boolean = false;\n\n  public previousStory: MonoDragStory | null = null;\n\n  public currentStory: MonoDragStory | null = null;\n\n  public activeStory: MonoDragStory | null = null;\n\n  public activeEventIdentifier: MonoDragEventIdentifier | null = null;\n\n  public history: MonoDragStory[];\n\n  constructor(monoDrag: MonoDrag) {\n    this.monoDrag = monoDrag;\n\n    this.mouseSensor = new MouseSensor(this.monoDrag);\n    this.touchSensor = new TouchSensor(this.monoDrag);\n\n    this.history = [];\n  }\n\n  public listen(): this {\n    if (this.isListening === false) {\n\n      const result = Util.truthChain(\n        () => this.mouseSensor.attach(),\n        () => this.touchSensor.attach(),\n      );\n\n      this.isListening = result;\n    }\n\n    return this;\n  }\n\n  public stopListening() {\n    if (this.isListening === true) {\n      const result = Util.truthChain(\n        () => this.mouseSensor.detach(),\n        () => this.touchSensor.detach(),\n      );\n\n      this.isListening = !result;\n    }\n  }\n\n  public receive(event: MonoDragEvent) {\n    const { config } = this.monoDrag;\n\n    config.onEvent(event, this.monoDrag);\n\n    switch (event.type) {\n      case 'start': {\n        if (\n          this.isActive(event) === false\n          && config.condition(event, this.monoDrag) === true\n        ) {\n          const story = new MonoDragStory(this.monoDrag, event);\n\n          this.currentStory = story;\n\n          this.activeStory = story;\n\n          this.activeEventIdentifier = event.identifier;\n          \n          config.onDragStart(event, story, this.monoDrag);\n        }\n\n        break;\n      }\n\n      case 'drag': {\n        if (this.isActive(event) === true) {\n          const story = this.activeStory as MonoDragStory;\n\n          story.addEvent(event);\n\n          config.onDrag(event, story, this.monoDrag);\n        }\n\n        break;\n      }\n\n      case 'stop': {\n        this.handleStopOrCancel(event);\n\n        break;\n      }\n\n      case 'cancel': {\n        this.handleStopOrCancel(event);\n\n        break;\n      }\n    }\n  }\n\n  private handleStopOrCancel(event: MonoDragEvent) {\n    const { config } = this.monoDrag;\n\n    if (this.isActive(event) === true) {\n      const story = this.activeStory as MonoDragStory;\n\n      story.addEvent(event);\n\n      if (event.type === 'stop') {\n        config.onDragStop(event, story, this.monoDrag);\n      } else if (event.type === 'cancel') {\n        config.onDragCancel(event, story, this.monoDrag);\n      }\n\n      this.deactivate(event, story);\n    }\n  }\n\n  private deactivate(event: MonoDragEvent, story: MonoDragStory) {\n    const { config } = this.monoDrag;\n\n    config.onDragEnd(event, story, this.monoDrag);\n\n    this.activeStory = null;\n\n    this.activeEventIdentifier = null;\n\n    this.previousStory = story;\n\n    this.addStoryToHistory(story);\n  }\n\n  private isActive(event: MonoDragEvent): boolean {\n    return (\n      this.activeStory !== null\n      && this.activeEventIdentifier !== null\n      && this.activeEventIdentifier === event.identifier\n    );\n  }\n\n  private addStoryToHistory(story: MonoDragStory) {\n    const { config } = this.monoDrag;\n\n    if (\n      config.keepHistory === true\n      && this.history.indexOf(story) === -1\n    ) {\n      this.history.push(story);\n    }\n  }\n}","import {\n  MONO_DRAG_DEFAULT_CONFIG,\n  MonoDragConfig,\n} from './config';\n\nimport {\n  SensorHub,\n} from './sensor-hub';\n\nimport {\n  MonoDragStory\n} from './mono-drag-story';\n\nexport class MonoDrag {\n  public config: MonoDragConfig;\n\n  public sensorHub: SensorHub;\n\n  constructor(config?: Partial<MonoDragConfig>) {\n    this.config = {...MONO_DRAG_DEFAULT_CONFIG};\n\n    this.setConfig(config);\n\n    this.sensorHub = new SensorHub(this);\n\n    this.sensorHub.listen();\n  }\n\n  public setConfig(config?: Partial<MonoDragConfig>): this {\n    if (typeof config === 'object') {\n      Object.assign(this.config, config);\n    }\n\n    return this;\n  }\n\n  public listen() {\n    this.sensorHub.listen();\n  }\n\n  public stopListening() {\n    this.sensorHub.stopListening();\n  }\n\n  public get history(): MonoDragStory[] {\n    return this.sensorHub.history;\n  }\n\n  public get activeStory(): MonoDragStory | null {\n    return this.sensorHub.activeStory;\n  }\n\n  public get currentStory(): MonoDragStory | null {\n    return this.sensorHub.currentStory;\n  }\n\n  public get previousStory(): MonoDragStory | null {\n    return this.sensorHub.previousStory;\n  }\n}\n","import {\n  PolyDrag,\n} from './poly-drag';\n\nimport {\n  PolyDragStory,\n} from './poly-drag-story';\n\nimport {\n  PolyDragEvent\n} from './poly-drag-event';\n\nexport interface PolyDragConfig {\n  target?: HTMLElement;\n\n  offsetFrom?: HTMLElement;\n\n  preventDefault: boolean;\n\n  disableContextMenu: boolean;\n\n  keepEventHistory: boolean;\n\n  keepStoryHistory: boolean;\n\n  condition: (\n    polyDragEvent: PolyDragEvent,\n    polyDrag: PolyDrag,\n  ) => boolean;\n\n  onEvent: (\n    polyDragEvent: PolyDragEvent,\n    polyDrag: PolyDrag,\n  ) => void;\n\n  onStart: (\n    polyDragEvent: PolyDragEvent,\n    polyDragStory: PolyDragStory,\n    polyDrag: PolyDrag,\n  ) => void;\n\n  onEnd: (\n    polyDragEvent: PolyDragEvent,\n    polyDragStory: PolyDragStory,\n    polyDrag: PolyDrag,\n  ) => void;\n\n  onEachDragStart: (\n    polyDragEvent: PolyDragEvent,\n    polyDragStory: PolyDragStory,\n    polyDrag: PolyDrag,\n  ) => void;\n\n  onEachDrag: (\n    polyDragEvent: PolyDragEvent,\n    polyDragStory: PolyDragStory,\n    polyDrag: PolyDrag,\n  ) => void;\n\n  onEachDragStop: (\n    polyDragEvent: PolyDragEvent,\n    polyDragStory: PolyDragStory,\n    polyDrag: PolyDrag,\n  ) => void;\n\n  onEachDragCancel: (\n    polyDragEvent: PolyDragEvent,\n    polyDragStory: PolyDragStory,\n    polyDrag: PolyDrag,\n  ) => void;\n\n  onEachDragEnd: (\n    polyDragEvent: PolyDragEvent,\n    polyDragStory: PolyDragStory,\n    polyDrag: PolyDrag,\n  ) => void;\n}\n\nexport const POLY_DRAG_DEFAULT_CONFIG: PolyDragConfig = {\n  preventDefault: true,\n\n  disableContextMenu: false,\n\n  keepEventHistory: true,\n\n  keepStoryHistory: true,\n\n  condition: () => true,\n\n  onEvent: () => {},\n\n  onStart: () => {},\n\n  onEnd: () => {},\n\n  onEachDragStart: () => {},\n  onEachDrag: () => {},\n  onEachDragStop: () => {},\n  onEachDragCancel: () => {},\n  onEachDragEnd: () => {},\n}","import {\n  DOMUtil,\n  Vector2,\n} from '../rocket';\n\nimport {\n  PolyDragEvent,\n  PolyDragEventIdentifier,\n} from './poly-drag-event';\n\nimport {\n  PolyDrag,\n} from './poly-drag';\n\nexport class PolyDragStory {\n  public polyDrag: PolyDrag;\n\n  public identifier: PolyDragEventIdentifier;\n\n  public offset: Vector2;\n\n  public previousPosition: Vector2;\n  public previousVelocity: Vector2;\n\n  public startingEvent: PolyDragEvent;\n  public previousEvent: PolyDragEvent | null = null;\n  public currentEvent: PolyDragEvent | null = null;\n  public finalEvent: PolyDragEvent | null = null;\n\n  public history: PolyDragEvent[];\n\n  public startTime: number;\n  public endTime?: number;\n\n  public maxTranslationDistance: number = 0;\n\n  constructor(polyDrag: PolyDrag, event: PolyDragEvent) {\n    this.polyDrag = polyDrag;\n\n    this.history = [];\n\n    this.previousPosition = new Vector2();\n    this.previousVelocity = new Vector2();\n\n    this.offset = new Vector2();\n\n    this.identifier = event.identifier;\n\n    this.startTime = event.time;\n\n    this.startingEvent = event;\n\n    this.addEvent(event);\n  }\n\n  public get translationDistance(): number | null {\n    if (this.finalEvent !== null) {\n      return Vector2.getDistanceBetween(this.startingEvent.position, this.finalEvent.position);\n    }\n\n    return null;\n  }\n\n  public addEvent(event: PolyDragEvent) {\n    if (this.identifier !== event.identifier) {\n      return;\n    }\n\n    this.addEventToHistory(event);\n\n    switch (event.type) {\n      case 'start': {\n        this.startingEvent = event;\n        this.currentEvent = event;\n        this.previousEvent = event;\n\n        this.updateOffset(event.position);\n\n        break;\n      }\n\n      case 'drag': {\n        this.updateEventVectors(event);\n\n        this.previousEvent = this.currentEvent;\n        this.currentEvent = event;\n\n        this.updateMaxTranslationDistance(event);\n\n        break;\n      }\n\n      case 'stop': {\n        this.addStopOrCancelEvent(event);\n\n        break;\n      }\n\n      case 'cancel': {\n        this.addStopOrCancelEvent(event);\n\n        break;\n      }\n    }\n  }\n\n  private addStopOrCancelEvent(event: PolyDragEvent) {\n    this.updateEventVectors(event);\n\n    this.previousEvent = this.currentEvent;\n    this.currentEvent = event;\n    this.finalEvent = event;\n\n    this.updateMaxTranslationDistance(event);\n\n    this.endTime = event.time;\n  }\n\n  private updateMaxTranslationDistance(event: PolyDragEvent) {\n    const distance = Vector2.getDistanceBetween(\n      this.startingEvent.position,\n      event.position,\n    );\n\n    if (distance > this.maxTranslationDistance) {\n      this.maxTranslationDistance = distance;\n    }\n  }\n\n  private addEventToHistory(event: PolyDragEvent): boolean {\n    const { keepEventHistory } = this.polyDrag.config;\n\n    if (\n      keepEventHistory === true\n      && this.history.indexOf(event) === -1\n    ) {\n      this.history.push(event);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  private updateOffset(position: Vector2) {\n    const { target, offsetFrom } = this.polyDrag.config;\n\n    if (DOMUtil.isHTMLElement(target) === true) {\n      let element = target as HTMLElement;\n\n      if (DOMUtil.isHTMLElement(offsetFrom) === true) {\n        element = offsetFrom as HTMLElement;\n      }\n\n      const { left, top } = element.getBoundingClientRect();\n\n      this.offset.equals(\n        position.x - left,\n        position.y - top,\n      );\n    }\n  }\n\n  private updateEventVectors(event: PolyDragEvent) {\n    if (event.type !== 'start') {\n      const velocity = Vector2.subtract(\n        event.position,\n        this.previousPosition,\n      );\n\n      event.velocity.equals(velocity);\n\n      const acceleration = Vector2.subtract(\n        event.velocity,\n        this.previousVelocity,\n      );\n\n      event.acceleration.equals(acceleration);\n    }\n\n    this.previousPosition.equals(event.position);\n    this.previousVelocity.equals(event.velocity);\n  }\n}","import {\n  Vector2,\n} from '../rocket';\n\nimport {\n  PolyDrag,\n} from './poly-drag';\n\nexport type PolyDragEventIdentifier = 'mouse' | number;\n\nexport type PolyDragEventType = 'start' | 'drag' | 'stop' | 'cancel';\n\nexport class PolyDragEvent {\n  public polyDrag: PolyDrag;\n\n  public type: PolyDragEventType;\n\n  public identifier: PolyDragEventIdentifier;\n\n  public originalEvent: MouseEvent | TouchEvent;\n\n  public isTouch: boolean = false;\n\n  public touch?: Touch;\n\n  public targetFromEvent: EventTarget | null;\n\n  public target: HTMLElement | null;\n\n  public position: Vector2;\n  public velocity: Vector2;\n  public acceleration: Vector2;\n\n  public time: number;\n\n  constructor(\n    polyDrag: PolyDrag,\n    type: PolyDragEventType,\n    event: MouseEvent | TouchEvent,\n    isTouch: boolean = false,\n    touch?: Touch,\n  ) {\n    this.time = Date.now();\n\n    this.polyDrag = polyDrag;\n\n    this.type = type;\n\n    this.originalEvent = event;\n\n    this.isTouch = isTouch;\n\n    let clientX;\n    let clientY;\n\n    if (\n      isTouch === true\n      && typeof touch === 'object'\n      && touch instanceof Touch\n    ) {\n      this.touch = touch as Touch;\n\n      this.identifier = this.touch.identifier;\n\n      this.targetFromEvent = this.touch.target;\n\n      clientX = this.touch.clientX;\n      clientY = this.touch.clientY;\n    } else {\n      this.identifier = 'mouse';\n\n      const event = this.originalEvent as MouseEvent;\n\n      this.targetFromEvent = event.target;\n\n      clientX = event.clientX;\n      clientY = event.clientY;\n    }\n\n    this.target = document.elementFromPoint(clientX, clientY) as HTMLElement | null;\n\n    this.position = new Vector2(clientX, clientY);\n    this.velocity = new Vector2();\n    this.acceleration = new Vector2();\n\n    this.preventDefault();    \n  }\n\n  private preventDefault() {\n    const { preventDefault } = this.polyDrag.config;\n\n    if (preventDefault === true) {\n      this.originalEvent.preventDefault();\n    }\n  }\n}\n","import {\n  DOMUtil,\n} from '../../rocket';\n\nimport {\n  PolyDragEvent,\n  PolyDragEventType,\n} from '../poly-drag-event';\n\nimport {\n  PolyDrag,\n} from '../poly-drag';\n\nexport class MouseSensor {\n  public polyDrag: PolyDrag;\n\n  public isListening: boolean = false;\n\n  public mouseButtonIsDown: boolean = false;\n\n  public target: HTMLElement | null = null;\n\n  constructor(polyDrag: PolyDrag) {\n    this.polyDrag = polyDrag;\n  }\n\n  public attach(): boolean {\n    const { target } = this.polyDrag.config;\n\n    if (\n      this.isListening === false\n      && DOMUtil.isHTMLElement(target) === true\n    ) {\n      this.target = target as HTMLElement;\n\n      this.target.addEventListener('mousedown', this.onMouseDown);\n      this.target.addEventListener('contextmenu', this.onContextMenu);\n\n      window.addEventListener('mousemove', this.onMouseMove);\n      window.addEventListener('mouseup', this.onMouseUp);\n\n      // document.documentElement.addEventListener('mouseleave', this.onMouseLeave);\n\n      this.isListening = true;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  public detach(): boolean {\n    if (\n      this.isListening === true\n      && DOMUtil.isHTMLElement(this.target) === true\n    ) {\n      const target = this.target as HTMLElement;\n\n      target.removeEventListener('mousedown', this.onMouseDown);\n      target.removeEventListener('contextmenu', this.onContextMenu);\n\n      window.removeEventListener('mousemove', this.onMouseMove);\n      window.removeEventListener('mouseup', this.onMouseUp);\n\n      // document.documentElement.removeEventListener('mouseleave', this.onMouseLeave);\n\n      this.target = null;\n\n      this.isListening = false;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  private onMouseDown = (event: MouseEvent) => {\n    this.dispatch('start', event);\n\n    this.mouseButtonIsDown = true;\n  }\n\n  private onMouseMove = (event: MouseEvent) => {\n    if (this.mouseButtonIsDown === true) {\n      this.dispatch('drag', event);\n    }\n  }\n\n  private onMouseUp = (event: MouseEvent) => {\n    if (this.mouseButtonIsDown === true) {\n      this.dispatch('stop', event);\n\n      this.mouseButtonIsDown = false;\n    }\n  }\n\n  private onMouseLeave = (event: MouseEvent) => {\n    if (this.mouseButtonIsDown === true) {\n      this.dispatch('cancel', event);\n    }\n  }\n\n  private onContextMenu = (event: MouseEvent) => {\n    const { disableContextMenu } = this.polyDrag.config;\n\n    if (disableContextMenu === true) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  private dispatch(type: PolyDragEventType, event: MouseEvent) {\n    const polyDragEvent = new PolyDragEvent(this.polyDrag, type, event);\n\n    this.polyDrag.sensorHub.receive(polyDragEvent);\n  }\n}","import {\n  DOMUtil,\n} from '../../rocket';\n\nimport {\n  PolyDragEvent,\n  PolyDragEventType,\n} from '../poly-drag-event';\n\nimport {\n  PolyDrag\n} from '../poly-drag';\n\nexport class TouchSensor {\n  public polyDrag: PolyDrag;\n\n  public isListening: boolean = false;\n\n  public target: HTMLElement | null = null;\n\n  constructor(polyDrag: PolyDrag) {\n    this.polyDrag = polyDrag;\n  }\n\n  public attach(): boolean {\n    const { target } = this.polyDrag.config;\n\n    if (\n      this.isListening === false\n      && DOMUtil.isHTMLElement(target) === true\n    ) {\n      this.target = target as HTMLElement;\n\n      this.target.addEventListener('touchstart', this.onTouchStart);\n\n      window.addEventListener('touchmove', this.onTouchMove);\n      window.addEventListener('touchend', this.onTouchEnd);\n      window.addEventListener('touchcancel', this.onTouchCancel);\n\n      this.isListening = true;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  public detach(): boolean {\n    if (\n      this.isListening === true\n      && DOMUtil.isHTMLElement(this.target) === true\n    ) {\n      const target = this.target as HTMLElement;\n\n      target.removeEventListener('touchstart', this.onTouchStart);\n\n      window.removeEventListener('touchmove', this.onTouchMove);\n      window.removeEventListener('touchend', this.onTouchEnd);\n      window.removeEventListener('touchcancel', this.onTouchCancel);\n\n      this.target = null;\n\n      this.isListening = false;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  private onTouchStart = (event: TouchEvent) => {\n    this.dispatch('start', event);\n  }\n\n  private onTouchMove = (event: TouchEvent) => {\n    this.dispatch('drag', event);\n  }\n\n  private onTouchEnd = (event: TouchEvent) => {\n    this.dispatch('stop', event);\n  }\n\n  private onTouchCancel = (event: TouchEvent) => {\n    this.dispatch('cancel', event);\n  }\n\n  private dispatch(type: PolyDragEventType, event: TouchEvent) {\n    [...event.changedTouches].forEach(touch => {\n      const polyDragEvent = new PolyDragEvent(this.polyDrag, type, event, true, touch);\n\n      this.polyDrag.sensorHub.receive(polyDragEvent);\n    });\n  }\n}","import {\n  Util,\n} from '../rocket';\n\nimport {\n  PolyDrag\n} from './poly-drag';\n\nimport {\n  PolyDragStory,\n} from './poly-drag-story';\n\nimport {\n  PolyDragEvent,\n  PolyDragEventIdentifier,\n} from './poly-drag-event';\n\nimport {\n  MouseSensor,\n} from './sensors/mouse-sensor';\n\nimport {\n  TouchSensor,\n} from './sensors/touch-sensor';\n\nexport class SensorHub {\n  public polyDrag: PolyDrag;\n\n  public mouseSensor: MouseSensor;\n  public touchSensor: TouchSensor;\n\n  public isListening: boolean = false;\n\n  public activeStories: PolyDragStory[];\n\n  public activeIdentifiers: PolyDragEventIdentifier[];\n\n  public history: PolyDragStory[];\n\n  constructor(polyDrag: PolyDrag) {\n    this.polyDrag = polyDrag;\n\n    this.mouseSensor = new MouseSensor(this.polyDrag);\n    this.touchSensor = new TouchSensor(this.polyDrag);\n\n    this.activeStories = [];\n\n    this.activeIdentifiers = [];\n\n    this.history = [];\n  }\n\n  public listen() {\n    if (this.isListening === false) {\n      const result = Util.truthChain(\n        () => this.mouseSensor.attach(),\n        () => this.touchSensor.attach(),\n      );\n\n      this.isListening = result;\n    }\n  }\n\n  public stopListening() {\n    if (this.isListening === true) {\n      const result = Util.truthChain(\n        () => this.mouseSensor.detach(),\n        () => this.touchSensor.detach(),\n      );\n\n      this.isListening = !result;\n    }\n  }\n\n  public receive(event: PolyDragEvent) {\n    const { config } = this.polyDrag;\n\n    config.onEvent(event, this.polyDrag);\n\n    switch (event.type) {\n      case 'start': {\n        if (\n          this.eventIsActive(event) === false\n          && config.condition(event, this.polyDrag) === true\n        ) {\n          const story = new PolyDragStory(this.polyDrag, event);\n\n          if (this.activeStories.length === 0) {\n            this.addActiveStoryAndIdentifier(story);\n\n            config.onStart(event, story, this.polyDrag);\n          } else {\n            this.addActiveStoryAndIdentifier(story);\n          }\n\n          config.onEachDragStart(event, story, this.polyDrag);\n        }\n\n        break;\n      }\n\n      case 'drag': {\n        if (this.eventIsActive(event) === true) {\n          const story = this.getActiveStory(event);\n\n          if (story !== null) {\n            story.addEvent(event);\n\n            config.onEachDrag(event, story, this.polyDrag);\n          }\n        }\n\n        break;\n      }\n\n      case 'stop': {\n        this.handleStopOrCancelEvent(event);\n\n        break;\n      }\n\n      case 'cancel': {\n        this.handleStopOrCancelEvent(event);\n\n        break;\n      }\n    }\n  }\n\n  private handleStopOrCancelEvent(event: PolyDragEvent) {\n    const { config } = this.polyDrag;\n\n    if (this.eventIsActive(event) === true) {\n      const story = this.getActiveStory(event);\n\n      if (story !== null) {\n        story.addEvent(event);\n\n        if (event.type === 'stop') {\n          config.onEachDragStop(event, story, this.polyDrag);\n        } else if (event.type === 'cancel') {\n          config.onEachDragCancel(event, story, this.polyDrag);\n        }\n\n        config.onEachDragEnd(event, story, this.polyDrag);\n\n        this.deactivate(event, story);\n      }\n    }\n  }\n\n  private deactivate(event: PolyDragEvent, story: PolyDragStory) {\n    const { config } = this.polyDrag;\n\n    this.addStoryToHistory(story);\n\n    this.removeActiveStoryAndIdentifier(story);\n\n    if (this.activeStories.length === 0) {\n      config.onEnd(event, story, this.polyDrag);      \n    }\n  }\n\n  private eventIsActive(event: PolyDragEvent): boolean {\n    if (typeof event.identifier !== 'undefined') {\n      return (this.activeIdentifiers.indexOf(event.identifier) !== -1);\n    }\n\n    return false;\n  }\n\n  private addActiveStoryAndIdentifier(story: PolyDragStory): boolean {\n    if (\n      this.activeStories.indexOf(story) === -1\n      && this.activeIdentifiers.indexOf(story.identifier) === -1\n    ) {\n      this.activeStories.push(story);\n      this.activeIdentifiers.push(story.identifier);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  private getActiveStory(event: PolyDragEvent): PolyDragStory | null {\n    const story = this.activeStories.find(story => story.identifier === event.identifier);\n\n    if (typeof story !== 'undefined') {\n      return story;\n    }\n\n    return null;\n  }\n\n  private removeActiveStoryAndIdentifier(story: PolyDragStory) {\n    const storyIndex = this.activeStories.indexOf(story);\n    const identifierIndex = this.activeIdentifiers.indexOf(story.identifier);\n\n    if (\n      storyIndex !== -1\n      && identifierIndex !== -1\n    ) {\n      this.activeStories.splice(storyIndex, 1);\n      this.activeIdentifiers.splice(identifierIndex, 1);\n    }\n  }\n\n  private addStoryToHistory(story: PolyDragStory): boolean {\n    const { keepStoryHistory } = this.polyDrag.config;\n\n    if (\n      keepStoryHistory === true\n      && this.activeStories.indexOf(story) === -1\n    ) {\n      this.history.push(story);\n\n      return true;\n    }\n\n    return false;\n  }\n}","import {\n  POLY_DRAG_DEFAULT_CONFIG,\n  PolyDragConfig,\n} from './config';\n\nimport {\n  PolyDragStory,\n} from './poly-drag-story';\n\nimport {\n  SensorHub,\n} from './sensor-hub';\n\nexport class PolyDrag {\n  public config: PolyDragConfig;\n\n  public sensorHub: SensorHub;\n\n  constructor(config: Partial<PolyDragConfig>) {\n    this.config = {...POLY_DRAG_DEFAULT_CONFIG};\n\n    this.setConfig(config);\n\n    this.sensorHub = new SensorHub(this);\n\n    this.sensorHub.listen();\n  }\n\n  public setConfig(config: Partial<PolyDragConfig>): this {\n    if (typeof config === 'object') {\n      Object.assign(this.config, config);\n    }\n\n    return this;\n  }\n\n  public get activeStories(): PolyDragStory[] {\n    return this.sensorHub.activeStories;\n  }\n\n  public get history(): PolyDragStory[] {\n    return this.sensorHub.history;\n  }\n\n  public clearHistory(): this {\n    this.sensorHub.history = [];\n\n    return this;\n  }\n\n  public attach() {\n    this.sensorHub.listen();\n  }\n\n  public detach() {\n    this.sensorHub.stopListening();\n  }\n}","import {\n  PointerMove,\n} from './pointer-move';\n\nimport {\n  MoveEvent,\n} from './move-event';\n\nexport interface PointerMoveConfig {\n  target?: HTMLElement | Window;\n\n  preventDefault: boolean;\n\n  debounceDelayInSeconds: number;\n\n  onEvent: (mouseEvent: MouseEvent, pointerMove: PointerMove) => void;\n\n  onEnter: (moveEvent: MoveEvent, pointerMove: PointerMove) => void;\n  onLeave: (moveEvent: MoveEvent, pointerMove: PointerMove) => void;\n\n  onMoveStart: (moveEvent: MoveEvent, pointerMove: PointerMove) => void;\n  onMove: (moveEvent: MoveEvent, pointerMove: PointerMove) => void;\n  onMoveEnd: (moveEvent: MoveEvent, pointerMove: PointerMove) => void;\n\n  onMoveInside: (moveEvent: MoveEvent, pointerMove: PointerMove) => void;\n}\n\nexport const POINTER_MOVE_DEFAULT_CONFIG: PointerMoveConfig = {\n  target: window,\n\n  preventDefault: true,\n\n  debounceDelayInSeconds: 0.2,\n\n  onEvent: () => {},\n\n  onEnter: () => {},\n  onLeave: () => {},\n\n  onMoveStart: () => {},\n  onMove: () => {},\n  onMoveEnd: () => {},\n\n  onMoveInside: () => {},\n};\n","import {\n  DOMUtil,\n  Util,\n  Vector2,\n  Viewport,\n} from '../rocket';\n\nimport {\n  POINTER_MOVE_DEFAULT_CONFIG,\n  PointerMoveConfig,\n} from './config';\n\nimport {\n  MoveEvent,\n  MoveEventType,\n} from './move-event';\n\nexport class PointerMove {\n  public config: PointerMoveConfig;\n\n  public isInside: boolean = false;\n  public isMoving: boolean = false;\n\n  private debounceMouseMove?: Function;\n\n  private position: Vector2;\n  private velocity: Vector2;\n  private acceleration: Vector2;\n\n  private previousPosition: Vector2;\n  private previousVelocity: Vector2;\n\n  public previousStartEvent?: MoveEvent;\n  public previousMoveEvent?: MoveEvent;\n  public previousEvent?: MoveEvent;\n\n  constructor(config?: Partial<PointerMoveConfig>) {\n    this.config = {...POINTER_MOVE_DEFAULT_CONFIG};\n\n    this.setConfig(config);\n\n    this.position = new Vector2();\n    this.velocity = new Vector2();\n    this.acceleration = new Vector2();\n\n    this.previousPosition = new Vector2();\n    this.previousVelocity = new Vector2();\n\n    this.listen();\n  }\n\n  public setConfig(config?: Partial<PointerMoveConfig>): this {\n    if (typeof config === 'object') {\n      Object.assign(this.config, config);\n    }\n\n    return this;\n  }\n\n  private createMoveEvent(\n    type: MoveEventType,\n    event: MouseEvent,\n  ): MoveEvent {\n    this.updateVectors(event);\n\n    return {\n      event,\n      type,\n      time: Date.now(),\n      position: Vector2.clone(this.position),\n      velocity: Vector2.clone(this.velocity),\n      acceleration: Vector2.clone(this.acceleration),\n    };\n  }\n\n  private updateVectors(event: MouseEvent) {\n    this.position = this.getPositionVectorFromEvent(event);\n\n    this.velocity = Vector2.subtract(this.position, this.previousPosition);\n    this.acceleration = Vector2.subtract(this.velocity, this.previousVelocity);\n\n    this.previousPosition.equals(this.position);\n    this.previousVelocity.equals(this.velocity);\n  }\n\n  private getPositionVectorFromEvent(event: MouseEvent): Vector2 {\n    const { clientX, clientY } = event;\n\n    return new Vector2(clientX, clientY);\n  }\n\n  private eventHandlerMouseEnter = (event: MouseEvent) => {\n    const pointerEvent = this.createMoveEvent('enter', event);\n\n    this.previousEvent = pointerEvent;\n\n    this.isInside = true;\n\n    this.config.onEvent(event, this);\n    this.config.onEnter(pointerEvent, this);\n  };\n\n  private eventHandlerMouseMove = (event: MouseEvent) => {\n    const pointerEvent = this.createMoveEvent('move', event);\n\n    this.previousMoveEvent = pointerEvent;\n    this.previousEvent = pointerEvent;\n\n    this.isInside = this.checkIfPointerIsInside(event);\n\n    this.config.onEvent(event, this);\n\n    if (this.isMoving === false) {\n      this.isMoving = true;\n\n      this.previousStartEvent = pointerEvent;\n      \n      this.config.onMoveStart(pointerEvent, this);\n    }\n\n    this.config.onMove(pointerEvent, this);\n  };\n\n  private eventHandlerMouseLeave = (event: MouseEvent) => {\n    const pointerEvent = this.createMoveEvent('leave', event);\n    \n    this.previousEvent = pointerEvent;\n\n    this.isInside = false;\n\n    this.config.onEvent(event, this);\n    this.config.onLeave(pointerEvent, this);\n  };\n\n  private eventHandlerMouseMoveEnd = () => {\n    if (this.isMoving === true) {\n      this.isMoving = false;\n\n      this.config.onMoveEnd(this.previousMoveEvent as MoveEvent, this);\n    }\n  };\n\n  private checkIfPointerIsInside(event: MouseEvent) {\n    let { target } = this.config;\n\n    if (target === window) {\n      if (\n        event.clientX >= 0\n        && event.clientX <= Viewport.width\n        && event.clientY >= 0\n        && event.clientY <= Viewport.height\n      ) {\n        return true;\n      }\n    } else if (DOMUtil.isHTMLElement(target) === true) {\n      target = target as HTMLElement;\n\n      const { top, bottom, left, right } = target.getBoundingClientRect();\n\n      if (\n        event.clientY >= top\n        && event.clientY <= bottom\n        && event.clientX >= left\n        && event.clientX <= right\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public listen() {\n    let { target, debounceDelayInSeconds } = this.config;\n\n    if (target === window || DOMUtil.isHTMLElement(target) === true) {\n      window.addEventListener('mousemove', this.eventHandlerMouseMove as EventListener);\n\n      this.debounceMouseMove = Util.debounce(this.eventHandlerMouseMoveEnd, debounceDelayInSeconds);\n      window.addEventListener('mousemove', this.debounceMouseMove as EventListener);\n\n      target = target as HTMLElement;\n\n      target.addEventListener('mouseenter', this.eventHandlerMouseEnter as EventListener);\n      target.addEventListener('mouseleave', this.eventHandlerMouseLeave as EventListener);\n    }\n  }\n\n  public stopListen() {\n    let { target } = this.config;\n\n    if (target === window || DOMUtil.isHTMLElement(target) === true)  {\n      window.removeEventListener('mousemove', this.eventHandlerMouseMove as EventListener);\n      window.removeEventListener('mousemove', this.debounceMouseMove as EventListener);\n\n      target = target as HTMLElement;\n\n      target.removeEventListener('mouseenter', this.eventHandlerMouseEnter as EventListener);\n      target.removeEventListener('mouseleave', this.eventHandlerMouseLeave as EventListener);\n    }\n  }\n}\n","import {\n  TextAutoScaler,\n} from './text-auto-scaler';\n\nexport interface TextAutoScalerConfig {\n  element?: HTMLElement,\n\n  validFontSizes?: number[];\n\n  fontSizeRange?: [number, number];\n  fontSizeIncrement?: number;\n\n  setFontSize: (\n    element: HTMLElement,\n    fontSize: number,\n    textAutoScaler: TextAutoScaler,\n  ) => void;\n}\n\nexport const TEXT_AUTO_SCALER_DEFAULT_CONFIG: TextAutoScalerConfig = {\n  fontSizeIncrement: 1,\n\n  setFontSize: (element, fontSize) => {\n    element.style.fontSize = `${fontSize}px`\n  },\n};","import {\n  DOMBoxModel,\n  DOMText,\n  DOMUtil,\n  RangeArray,\n} from '../rocket';\n\nimport {\n  TEXT_AUTO_SCALER_DEFAULT_CONFIG,\n  TextAutoScalerConfig,\n} from './config';\n\nexport class TextAutoScaler {\n  public config: TextAutoScalerConfig;\n\n  public originalWidth: number = 0;\n\n  constructor(config: Partial<TextAutoScalerConfig>) {\n    this.config = {...TEXT_AUTO_SCALER_DEFAULT_CONFIG};\n\n    this.setConfig(config);\n  }\n\n  public setConfig(config: Partial<TextAutoScalerConfig>) {\n    if (typeof config === 'object') {\n      Object.assign(this.config, config);\n    }\n  }\n\n  public configRangeIsValid(): boolean {\n    const { element, fontSizeRange, fontSizeIncrement } = this.config;\n\n    return (\n      DOMUtil.isHTMLElement(element) === true\n\n      && typeof fontSizeRange === 'object'\n      && Array.isArray(fontSizeRange) === true\n\n      && fontSizeRange.length === 2\n      && fontSizeRange[0] < fontSizeRange[1]\n\n      && typeof fontSizeIncrement === 'number'\n      && fontSizeIncrement > 0\n    );\n  }\n\n  public configSetIsvalid(): boolean {\n    const { validFontSizes } = this.config;\n\n    return (\n      typeof validFontSizes === 'object'\n      && Array.isArray(validFontSizes) === true\n      && validFontSizes.length > 0\n    );\n  }\n\n  public getTextBoxWidth(): number {\n    let { element } = this.config;\n\n    if (DOMUtil.isHTMLElement(element) === true) {\n      const targetElement = element as HTMLElement;\n\n      return DOMBoxModel.getContentWidth(targetElement);\n    } else {\n      return 0;\n    }\n  }\n\n  public getModelWidth(text: string, fontSize: number): number {\n    let { element } = this.config;\n\n    const targetElement = element as HTMLElement;\n\n    return DOMText.getTextBoxWidthFromElement(\n      targetElement,\n      text.trim(),\n      null,\n      {\n        fontSize: `${fontSize}px`,\n      },\n    );\n  }\n\n  public scaleText(): number | false {\n    let { validFontSizes } = this.config;\n    \n    if (validFontSizes) {\n      return this.scaleTextFromValidFontSizes();\n    }\n\n    return this.scaleTextFromFontSizeRange();\n  }\n\n  public scaleTextFromValidFontSizes(): number | false {\n    let { element, validFontSizes } = this.config;\n\n    if (this.configSetIsvalid() === true) {\n      const targetElement = element as HTMLElement;\n\n      validFontSizes = validFontSizes as number[];\n\n      validFontSizes.sort((a, b) => a - b);\n\n      const text = DOMText.getTextFromElement(targetElement).trim();\n      \n      const originalWidth = this.getTextBoxWidth();\n\n      let modelWidth = 0;\n\n      let finalFontSize = validFontSizes[validFontSizes.length - 1];\n\n      for (let i = 0; i < validFontSizes.length; i++) {\n        modelWidth = this.getModelWidth(text, validFontSizes[i]);\n\n        if (modelWidth >= originalWidth) {\n          if (i === 0) {\n            finalFontSize = validFontSizes[0];\n\n            break;\n          }\n\n          finalFontSize = validFontSizes[i - 1];\n\n          break;\n        }\n      }\n\n      this.config.setFontSize(targetElement, finalFontSize, this);\n\n      return finalFontSize;\n    }\n\n    return false;\n  }\n\n  public scaleTextFromFontSizeRange(): number | false {\n    let { element, fontSizeRange, fontSizeIncrement } = this.config;\n\n    if (this.configRangeIsValid() === true) {\n      element = element as HTMLElement;\n      fontSizeRange = fontSizeRange as RangeArray;\n      fontSizeIncrement = fontSizeIncrement as number;\n\n      const [minFontSize, maxFontSize] = fontSizeRange;\n\n      const text = DOMText.getTextFromElement(element).trim();\n\n      const originalWidth = this.getTextBoxWidth();\n\n      let modelWidth = 0;\n\n      let finalFontSize = minFontSize;\n\n      while (true) {\n        modelWidth = this.getModelWidth(text, finalFontSize);\n\n        if (modelWidth >= originalWidth) {\n          while (true) {\n            finalFontSize -= fontSizeIncrement;\n\n            if (finalFontSize <= minFontSize) {\n              finalFontSize = minFontSize;\n\n              break;\n            }\n\n            modelWidth = this.getModelWidth(text, finalFontSize);\n\n            if (modelWidth <= originalWidth) {\n              break;\n            }\n          }\n\n          break;\n        }\n\n        finalFontSize += fontSizeIncrement;\n\n        if (finalFontSize >= maxFontSize) {\n          finalFontSize = maxFontSize;\n\n          break;\n        }\n      }\n\n      this.config.setFontSize(element, finalFontSize, this);\n\n      return finalFontSize;\n    }\n\n    return false;\n  }\n}\n","import {\n  Repeater,\n} from './repeater';\n\nexport interface RepeaterConfig {\n  enableTimeout: boolean;\n\n  timeoutDelayInSeconds: number;\n\n  numberOfRepeatsPerSecond: number;\n\n  condition: (context: Repeater) => boolean;\n\n  onStart: (context: Repeater) => void;\n\n  onRepeat: (context: Repeater) => void;\n\n  onEnd: (context: Repeater) => void;\n}\n\nexport const REPEATER_DEFAULT_CONFIG: RepeaterConfig = {\n  enableTimeout: true,\n\n  timeoutDelayInSeconds: 10,\n\n  numberOfRepeatsPerSecond: 24,\n\n  condition: () => true,\n\n  onStart: () => {},\n\n  onRepeat: () => {},\n\n  onEnd: () => {},\n};","import {\n  REPEATER_DEFAULT_CONFIG,\n  RepeaterConfig,\n} from './config';\n\nexport class Repeater {\n  public config: RepeaterConfig;\n\n  public isActive: boolean = false;\n\n  public duration?: number;\n\n  public startTime?: number;\n  public endTime?: number;\n\n  public intervalId: number = 0;\n  public timeoutId: number = 0;\n\n  public count: number = 0;\n\n  constructor(config?: Partial<RepeaterConfig>) {\n    this.config = {...REPEATER_DEFAULT_CONFIG};\n\n    this.setConfig(config);\n  }\n\n  public setConfig(config?: Partial<RepeaterConfig>): this {\n    if (typeof config === 'object') {\n      Object.assign(this.config, config);\n    }\n\n    return this;\n  }\n\n  public forceStart(): this {\n    if (this.isActive === true) {\n      this.stop();\n    }\n\n    this.start();\n\n    return this;\n  }\n\n  public start(): this {\n    if (\n      this.isActive === false\n      && this.config.condition(this) === true\n    ) {\n      this.isActive = true;\n\n      this.count = 0;\n\n      this.startTime = Date.now();\n\n      this.config.onStart(this);\n\n      const {\n        enableTimeout,\n        timeoutDelayInSeconds,\n        numberOfRepeatsPerSecond,\n      } = this.config;\n\n      this.intervalId = setInterval(\n        () => this.onRepeat(),\n        1000 / numberOfRepeatsPerSecond\n      );\n\n      if (\n        enableTimeout === true\n        && typeof timeoutDelayInSeconds === 'number'\n        && timeoutDelayInSeconds > 0\n      ) {\n        this.startTimeout();\n      }\n    }\n\n    return this;\n  }\n\n  public stop(): this {\n    if (this.isActive === true) {\n      clearTimeout(this.timeoutId);\n\n      clearInterval(this.intervalId);\n\n      this.endTime = Date.now();\n\n      if (typeof this.startTime === 'number') {\n        this.duration = this.endTime - this.startTime;\n      }\n\n      this.isActive = false;\n\n      this.config.onEnd(this);\n    }\n\n    return this;\n  }\n\n  private startTimeout(): this {\n    const { timeoutDelayInSeconds } = this.config;\n\n    this.timeoutId = setTimeout(\n      () => this.stop(),\n      timeoutDelayInSeconds * 1000\n    );\n\n    return this;\n  }\n\n  private resetTimeout(): this {\n    clearTimeout(this.timeoutId);\n\n    this.startTimeout();\n\n    return this;\n  }\n\n  private onRepeat(): this {\n    this.count++;\n\n    this.config.onRepeat(this);\n\n    return this;\n  }\n}\n","import {\n  Ticker,\n} from './ticker';\n\nexport interface TickerConfig {\n  loopForever: boolean;\n\n  durationInSeconds: number;\n\n  timingFunction: (t: number) => number;\n\n  onTick: (n: number, c: number, ticker: Ticker) => void;\n\n  onStart: (ticker: Ticker) => void;\n  onComplete: (ticker: Ticker) => void;\n}\n\nexport const TICKER_DEFAULT_CONFIG: TickerConfig = {\n  loopForever: false,\n\n  durationInSeconds: 1,\n\n  timingFunction: t => t,\n\n  onTick: () => {},\n\n  onStart: () => {},\n  onComplete: () => {},\n}","import {\n  TICKER_DEFAULT_CONFIG,\n  TickerConfig,\n} from './config';\n\nexport class Ticker {\n  public config: TickerConfig;\n\n  public isActive: boolean = false;\n\n  public timeStart: number = 0;\n\n  public timeEnd: number = 0;\n\n  public progress: number = 0;\n\n  public tickCount: number = 0;\n\n  private requestAnimationFrameId?: number;\n\n  public callback?: Function;\n\n  constructor(config: Partial<TickerConfig>) {\n    this.config = {...TICKER_DEFAULT_CONFIG};\n\n    this.setConfig(config);\n  }\n\n  public setConfig(config: Partial<TickerConfig>): this {\n    if (typeof config === 'object') {\n      Object.assign(this.config, config);\n    }\n\n    return this;\n  }\n\n  public start() {\n    if (this.isActive === false) {\n      this.isActive = true;\n\n      this.timeStart = Date.now();\n\n      this.config.onStart(this);\n\n      this.continueLoop();\n    }\n  }\n\n  public stop() {\n    if (this.isActive === true) {\n      if (typeof this.requestAnimationFrameId === 'number') {\n        window.cancelAnimationFrame(this.requestAnimationFrameId);\n\n        this.requestAnimationFrameId = undefined;\n      }\n\n      this.timeEnd = Date.now();\n\n      this.progress = 0;\n\n      this.tickCount = 0;\n\n      this.isActive = false;\n\n      this.config.onComplete(this);\n    }\n  }\n\n  private loop = () => {\n    if (this.isActive === true) {\n      this.updateProgress();\n\n      const n = this.config.timingFunction(this.progress);\n\n      this.config.onTick(n, this.tickCount, this);\n\n      this.tickCount++;\n\n      if (this.progress <= 1) {\n        this.continueLoop();\n      } else {\n        if (this.config.loopForever === true) {\n          this.progress = 0;\n\n          this.continueLoop();\n        } else {\n          this.stop();\n        }\n      }\n    }\n  }\n\n  private continueLoop() {\n    if (this.isActive === true) {\n      if (typeof this.requestAnimationFrameId === 'number') {\n        window.cancelAnimationFrame(this.requestAnimationFrameId);\n      }\n\n      this.requestAnimationFrameId = window.requestAnimationFrame(this.loop);\n    }\n  }\n\n  private updateProgress() {\n    const { durationInSeconds } = this.config;\n\n    const now = Date.now();\n\n    const durationInMilliseconds = durationInSeconds * 1000;\n\n    this.progress = (now - this.timeStart) / durationInMilliseconds;\n\n    if (this.progress > 1) {\n      this.progress = 1;\n    }\n  }\n}\n","import {\n  DOMScroll,\n  Util,\n  Viewport,\n} from '../rocket';\n\n// TODO: Add a way to remove event listeners once completed.\n\nexport interface ScrollLocation {\n  left: number;\n  right: number;\n  top: number;\n  bottom: number;\n}\n\nexport interface ScrollTrigger {\n  condition: (\n    scrollLocation: ScrollLocation,\n    trigger: ScrollTrigger,\n    manager: ScrollTriggerManager,\n  ) => boolean;\n\n  action: (\n    scrollLocation: ScrollLocation,\n    trigger: ScrollTrigger,\n    manager: ScrollTriggerManager,\n  ) => Promise<void>;\n\n  prepare: (\n    scrollLocation: ScrollLocation,\n    trigger: ScrollTrigger,\n    manager: ScrollTriggerManager,\n  ) => void;\n\n  enabled: boolean;\n\n  removeOnceTriggered: boolean;\n\n  previousTriggeredTime?: number;\n\n  isActive: boolean;\n\n  isTriggered: boolean;\n\n  export?: any;\n}\n\nexport const DEFAULT_SCROLL_TRIGGER: ScrollTrigger = {\n  condition: () => true,\n\n  action: () => Promise.resolve(),\n\n  prepare: () => {},\n\n  enabled: true,\n\n  removeOnceTriggered: false,\n\n  previousTriggeredTime: undefined,\n\n  isActive: false,\n\n  isTriggered: false,\n\n  export: {},\n};\n\nexport class ScrollTriggerManager {\n  public triggerOnlyOnResizeEnd: boolean = false;\n\n  public resizeDebounceDelayInSeconds: number = 0.5;\n\n  private resizeDebounce?: Function;\n\n  public previousScrollLocation?: ScrollLocation;\n\n  public currentScrollLocation?: ScrollLocation;\n\n  public triggers: ScrollTrigger[];\n\n  public isScrolling: boolean = false;\n\n  public isResizing: boolean = false;\n\n  public isDisabled: boolean = false;\n\n  public isReady: boolean = false;\n\n  constructor() {\n    this.triggers = [];\n  }\n\n  public initialize(): this {\n    this.previousScrollLocation = this.scrollLocation;\n\n    this.currentScrollLocation = this.scrollLocation;\n\n    this.prepare();\n\n    this.listen();\n\n    return this;\n  }\n\n  public prepare(): this {\n    this.updateScrollLocation();\n   \n    if (this.isReady === false) {\n      this.triggers.forEach(trigger => {\n        if (\n          trigger.enabled === true\n          && typeof this.currentScrollLocation !== 'undefined'\n        ) {\n          trigger.prepare(this.currentScrollLocation, trigger, this);\n        }\n      });\n\n      this.isReady = true;\n    }\n\n    return this;\n  }\n\n  public set disable(disable: boolean) {\n    this.isDisabled = disable;\n  }\n\n  public get scrollLocation(): ScrollLocation {\n    return (this.currentScrollLocation = {\n      left: DOMScroll.scrollLeft,\n      top: DOMScroll.scrollTop,\n      right: DOMScroll.scrollLeft + Viewport.width,\n      bottom: DOMScroll.scrollTop + Viewport.height,\n    });\n  }\n\n  public addTrigger(trigger: Partial<ScrollTrigger>): this {\n    const newTrigger = {...DEFAULT_SCROLL_TRIGGER};\n\n    this.triggers.push(Object.assign(newTrigger, trigger));\n\n    return this;\n  }\n\n  public removeTrigger(trigger: ScrollTrigger): this {\n    const index = this.triggers.indexOf(trigger);\n\n    if (index !== -1) {\n      this.triggers.splice(index, 1);\n    }\n\n    return this;\n  }\n\n  public update(): this {\n    this.updateScrollLocation();\n\n    if (\n      this.isDisabled === false\n      && this.triggers.length > 0\n    ) {\n      this.triggers.forEach(trigger => {\n        if (\n          trigger.enabled === true\n          && trigger.isActive === false\n          && typeof this.currentScrollLocation !== 'undefined'\n          && trigger.condition(this.currentScrollLocation, trigger, this) === true\n        ) {\n          trigger\n            .action(this.currentScrollLocation, trigger, this)\n            .then(() => {\n              if (trigger.removeOnceTriggered === true) {\n                this.removeTrigger(trigger);\n              }\n\n              trigger.isTriggered = true;\n\n              trigger.previousTriggeredTime = Date.now();\n\n              trigger.isActive = false;\n            })\n            .catch(() => {\n              trigger.isActive = false\n            });\n        }\n      });\n    }\n\n    return this;\n  }\n\n  public updateScrollLocation(): this {\n    Object.assign(this.previousScrollLocation, this.currentScrollLocation);\n\n    this.currentScrollLocation = this.scrollLocation;\n\n    return this;\n  }\n\n  private eventHandlerScroll = event => {\n    this.update();\n  };\n\n  private eventHandlerResize = event => {\n    this.isResizing = true;\n\n    this.updateScrollLocation();\n\n    if (this.triggerOnlyOnResizeEnd === false) {\n      this.update();\n    }\n  };\n\n  private eventHandlerResizeEnd = event => {\n    this.isResizing = false;\n\n    if (this.triggerOnlyOnResizeEnd === true) {\n      this.update();\n    }\n  };\n\n  public listen() {\n    window.addEventListener('resize', this.resizeDebounce as EventListener);\n\n    this.resizeDebounce = Util.debounce(this.eventHandlerResizeEnd, this.resizeDebounceDelayInSeconds);\n    window.addEventListener('resize', this.eventHandlerResize as EventListener);\n\n    window.addEventListener('scroll', this.eventHandlerScroll as EventListener);\n  }\n\n  public stop() {\n    window.removeEventListener('resize', this.resizeDebounce as EventListener);\n    window.removeEventListener('resize', this.eventHandlerResize as EventListener);\n\n    window.removeEventListener('scroll', this.eventHandlerScroll as EventListener);\n  }\n}\n","// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n\n// export interface EventListenObject {\n//   target: HTMLElement | Window;\n//   event: string;\n//   handler: EventListener;\n//   useCapture: boolean;\n// }\n\n// const activeEvents: EventListenObject[] = [];\n\nexport class Listen {\n  // private stringToEvents(eventsString: string): string[] {\n  //   const events = eventsString.split(',').map(event => event.trim());\n\n  //   return events.filter(event => {\n  //     const matches = event.match(/^[a-z]+$/g);\n\n  //     return matches !== null;\n  //   });\n  // }\n\n  // private createEventListenObject(events: string[]): string[] {\n  //   const acceptedEvents: string[] = [];\n\n  //   events.forEach(event => {\n  //     if (this.events.indexOf(event) === -1) {\n  //       acceptedEvents.push(event);\n  //       this.events.push(event);\n  //     }\n  //   });\n\n  //   return acceptedEvents;\n  // }\n\n  // public static on(\n  //   target: HTMLElement | Window,\n  //   eventsString: string | string[],\n  //   handler: EventListener,\n  //   useCapture: boolean = false,\n  // ) {\n  //   if (\n  //     Array.isArray(eventsString) === true\n  //     && (eventsString as string[]).every(string => typeof string === 'string')\n  //   ) {\n      \n  //   }\n  //   const events = this.stringToEvents(eventsString);\n  //   const acceptedEvents = this.appendEvents(events);\n\n  //   if (acceptedEvents.length > 0) {\n  //     acceptedEvents.forEach(event => {\n  //       this.target.addEventListener(event );\n  //     });\n  //  }\n  // }\n\n  // public static off() {\n    \n  // }\n\n  public static delegate() {\n    \n  }\n\n  public static once(\n    target: EventTarget,\n    eventName: string,\n    handler: EventListener,\n    capture: boolean = false,\n  ) {\n    const listener = event => {\n      handler(event);\n\n      target.removeEventListener(eventName, listener, capture);\n    }\n\n    target.addEventListener(eventName, listener, capture);\n  }\n}\n","/*\n * A fast javascript implementation of simplex noise by Jonas Wagner\n\nBased on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\nWhich is based on example code by Stefan Gustavson (stegu@itn.liu.se).\nWith Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\nBetter rank ordering method by Stefan Gustavson in 2012.\n\n\n Copyright (c) 2018 Jonas Wagner\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n */\n(function() {\n  'use strict';\n\n  var F2 = 0.5 * (Math.sqrt(3.0) - 1.0);\n  var G2 = (3.0 - Math.sqrt(3.0)) / 6.0;\n  var F3 = 1.0 / 3.0;\n  var G3 = 1.0 / 6.0;\n  var F4 = (Math.sqrt(5.0) - 1.0) / 4.0;\n  var G4 = (5.0 - Math.sqrt(5.0)) / 20.0;\n\n  function SimplexNoise(randomOrSeed) {\n    var random;\n    if (typeof randomOrSeed == 'function') {\n      random = randomOrSeed;\n    }\n    else if (randomOrSeed) {\n      random = alea(randomOrSeed);\n    } else {\n      random = Math.random;\n    }\n    this.p = buildPermutationTable(random);\n    this.perm = new Uint8Array(512);\n    this.permMod12 = new Uint8Array(512);\n    for (var i = 0; i < 512; i++) {\n      this.perm[i] = this.p[i & 255];\n      this.permMod12[i] = this.perm[i] % 12;\n    }\n\n  }\n  SimplexNoise.prototype = {\n    grad3: new Float32Array([1, 1, 0,\n      -1, 1, 0,\n      1, -1, 0,\n\n      -1, -1, 0,\n      1, 0, 1,\n      -1, 0, 1,\n\n      1, 0, -1,\n      -1, 0, -1,\n      0, 1, 1,\n\n      0, -1, 1,\n      0, 1, -1,\n      0, -1, -1]),\n    grad4: new Float32Array([0, 1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1,\n      0, -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1,\n      1, 0, 1, 1, 1, 0, 1, -1, 1, 0, -1, 1, 1, 0, -1, -1,\n      -1, 0, 1, 1, -1, 0, 1, -1, -1, 0, -1, 1, -1, 0, -1, -1,\n      1, 1, 0, 1, 1, 1, 0, -1, 1, -1, 0, 1, 1, -1, 0, -1,\n      -1, 1, 0, 1, -1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, -1,\n      1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1, 0,\n      -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1, 0]),\n    noise2D: function(xin, yin) {\n      var permMod12 = this.permMod12;\n      var perm = this.perm;\n      var grad3 = this.grad3;\n      var n0 = 0; // Noise contributions from the three corners\n      var n1 = 0;\n      var n2 = 0;\n      // Skew the input space to determine which simplex cell we're in\n      var s = (xin + yin) * F2; // Hairy factor for 2D\n      var i = Math.floor(xin + s);\n      var j = Math.floor(yin + s);\n      var t = (i + j) * G2;\n      var X0 = i - t; // Unskew the cell origin back to (x,y) space\n      var Y0 = j - t;\n      var x0 = xin - X0; // The x,y distances from the cell origin\n      var y0 = yin - Y0;\n      // For the 2D case, the simplex shape is an equilateral triangle.\n      // Determine which simplex we are in.\n      var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n      if (x0 > y0) {\n        i1 = 1;\n        j1 = 0;\n      } // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n      else {\n        i1 = 0;\n        j1 = 1;\n      } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n      // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n      // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n      // c = (3-sqrt(3))/6\n      var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n      var y1 = y0 - j1 + G2;\n      var x2 = x0 - 1.0 + 2.0 * G2; // Offsets for last corner in (x,y) unskewed coords\n      var y2 = y0 - 1.0 + 2.0 * G2;\n      // Work out the hashed gradient indices of the three simplex corners\n      var ii = i & 255;\n      var jj = j & 255;\n      // Calculate the contribution from the three corners\n      var t0 = 0.5 - x0 * x0 - y0 * y0;\n      if (t0 >= 0) {\n        var gi0 = permMod12[ii + perm[jj]] * 3;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0); // (x,y) of grad3 used for 2D gradient\n      }\n      var t1 = 0.5 - x1 * x1 - y1 * y1;\n      if (t1 >= 0) {\n        var gi1 = permMod12[ii + i1 + perm[jj + j1]] * 3;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1);\n      }\n      var t2 = 0.5 - x2 * x2 - y2 * y2;\n      if (t2 >= 0) {\n        var gi2 = permMod12[ii + 1 + perm[jj + 1]] * 3;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2);\n      }\n      // Add contributions from each corner to get the final noise value.\n      // The result is scaled to return values in the interval [-1,1].\n      return 70.0 * (n0 + n1 + n2);\n    },\n    // 3D simplex noise\n    noise3D: function(xin, yin, zin) {\n      var permMod12 = this.permMod12;\n      var perm = this.perm;\n      var grad3 = this.grad3;\n      var n0, n1, n2, n3; // Noise contributions from the four corners\n      // Skew the input space to determine which simplex cell we're in\n      var s = (xin + yin + zin) * F3; // Very nice and simple skew factor for 3D\n      var i = Math.floor(xin + s);\n      var j = Math.floor(yin + s);\n      var k = Math.floor(zin + s);\n      var t = (i + j + k) * G3;\n      var X0 = i - t; // Unskew the cell origin back to (x,y,z) space\n      var Y0 = j - t;\n      var Z0 = k - t;\n      var x0 = xin - X0; // The x,y,z distances from the cell origin\n      var y0 = yin - Y0;\n      var z0 = zin - Z0;\n      // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n      // Determine which simplex we are in.\n      var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n      var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n      if (x0 >= y0) {\n        if (y0 >= z0) {\n          i1 = 1;\n          j1 = 0;\n          k1 = 0;\n          i2 = 1;\n          j2 = 1;\n          k2 = 0;\n        } // X Y Z order\n        else if (x0 >= z0) {\n          i1 = 1;\n          j1 = 0;\n          k1 = 0;\n          i2 = 1;\n          j2 = 0;\n          k2 = 1;\n        } // X Z Y order\n        else {\n          i1 = 0;\n          j1 = 0;\n          k1 = 1;\n          i2 = 1;\n          j2 = 0;\n          k2 = 1;\n        } // Z X Y order\n      }\n      else { // x0<y0\n        if (y0 < z0) {\n          i1 = 0;\n          j1 = 0;\n          k1 = 1;\n          i2 = 0;\n          j2 = 1;\n          k2 = 1;\n        } // Z Y X order\n        else if (x0 < z0) {\n          i1 = 0;\n          j1 = 1;\n          k1 = 0;\n          i2 = 0;\n          j2 = 1;\n          k2 = 1;\n        } // Y Z X order\n        else {\n          i1 = 0;\n          j1 = 1;\n          k1 = 0;\n          i2 = 1;\n          j2 = 1;\n          k2 = 0;\n        } // Y X Z order\n      }\n      // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n      // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n      // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n      // c = 1/6.\n      var x1 = x0 - i1 + G3; // Offsets for second corner in (x,y,z) coords\n      var y1 = y0 - j1 + G3;\n      var z1 = z0 - k1 + G3;\n      var x2 = x0 - i2 + 2.0 * G3; // Offsets for third corner in (x,y,z) coords\n      var y2 = y0 - j2 + 2.0 * G3;\n      var z2 = z0 - k2 + 2.0 * G3;\n      var x3 = x0 - 1.0 + 3.0 * G3; // Offsets for last corner in (x,y,z) coords\n      var y3 = y0 - 1.0 + 3.0 * G3;\n      var z3 = z0 - 1.0 + 3.0 * G3;\n      // Work out the hashed gradient indices of the four simplex corners\n      var ii = i & 255;\n      var jj = j & 255;\n      var kk = k & 255;\n      // Calculate the contribution from the four corners\n      var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n      if (t0 < 0) n0 = 0.0;\n      else {\n        var gi0 = permMod12[ii + perm[jj + perm[kk]]] * 3;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0 + grad3[gi0 + 2] * z0);\n      }\n      var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n      if (t1 < 0) n1 = 0.0;\n      else {\n        var gi1 = permMod12[ii + i1 + perm[jj + j1 + perm[kk + k1]]] * 3;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1 + grad3[gi1 + 2] * z1);\n      }\n      var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n      if (t2 < 0) n2 = 0.0;\n      else {\n        var gi2 = permMod12[ii + i2 + perm[jj + j2 + perm[kk + k2]]] * 3;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2 + grad3[gi2 + 2] * z2);\n      }\n      var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n      if (t3 < 0) n3 = 0.0;\n      else {\n        var gi3 = permMod12[ii + 1 + perm[jj + 1 + perm[kk + 1]]] * 3;\n        t3 *= t3;\n        n3 = t3 * t3 * (grad3[gi3] * x3 + grad3[gi3 + 1] * y3 + grad3[gi3 + 2] * z3);\n      }\n      // Add contributions from each corner to get the final noise value.\n      // The result is scaled to stay just inside [-1,1]\n      return 32.0 * (n0 + n1 + n2 + n3);\n    },\n    // 4D simplex noise, better simplex rank ordering method 2012-03-09\n    noise4D: function(x, y, z, w) {\n      var perm = this.perm;\n      var grad4 = this.grad4;\n\n      var n0, n1, n2, n3, n4; // Noise contributions from the five corners\n      // Skew the (x,y,z,w) space to determine which cell of 24 simplices we're in\n      var s = (x + y + z + w) * F4; // Factor for 4D skewing\n      var i = Math.floor(x + s);\n      var j = Math.floor(y + s);\n      var k = Math.floor(z + s);\n      var l = Math.floor(w + s);\n      var t = (i + j + k + l) * G4; // Factor for 4D unskewing\n      var X0 = i - t; // Unskew the cell origin back to (x,y,z,w) space\n      var Y0 = j - t;\n      var Z0 = k - t;\n      var W0 = l - t;\n      var x0 = x - X0; // The x,y,z,w distances from the cell origin\n      var y0 = y - Y0;\n      var z0 = z - Z0;\n      var w0 = w - W0;\n      // For the 4D case, the simplex is a 4D shape I won't even try to describe.\n      // To find out which of the 24 possible simplices we're in, we need to\n      // determine the magnitude ordering of x0, y0, z0 and w0.\n      // Six pair-wise comparisons are performed between each possible pair\n      // of the four coordinates, and the results are used to rank the numbers.\n      var rankx = 0;\n      var ranky = 0;\n      var rankz = 0;\n      var rankw = 0;\n      if (x0 > y0) rankx++;\n      else ranky++;\n      if (x0 > z0) rankx++;\n      else rankz++;\n      if (x0 > w0) rankx++;\n      else rankw++;\n      if (y0 > z0) ranky++;\n      else rankz++;\n      if (y0 > w0) ranky++;\n      else rankw++;\n      if (z0 > w0) rankz++;\n      else rankw++;\n      var i1, j1, k1, l1; // The integer offsets for the second simplex corner\n      var i2, j2, k2, l2; // The integer offsets for the third simplex corner\n      var i3, j3, k3, l3; // The integer offsets for the fourth simplex corner\n      // simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some order.\n      // Many values of c will never occur, since e.g. x>y>z>w makes x<z, y<w and x<w\n      // impossible. Only the 24 indices which have non-zero entries make any sense.\n      // We use a thresholding to set the coordinates in turn from the largest magnitude.\n      // Rank 3 denotes the largest coordinate.\n      i1 = rankx >= 3 ? 1 : 0;\n      j1 = ranky >= 3 ? 1 : 0;\n      k1 = rankz >= 3 ? 1 : 0;\n      l1 = rankw >= 3 ? 1 : 0;\n      // Rank 2 denotes the second largest coordinate.\n      i2 = rankx >= 2 ? 1 : 0;\n      j2 = ranky >= 2 ? 1 : 0;\n      k2 = rankz >= 2 ? 1 : 0;\n      l2 = rankw >= 2 ? 1 : 0;\n      // Rank 1 denotes the second smallest coordinate.\n      i3 = rankx >= 1 ? 1 : 0;\n      j3 = ranky >= 1 ? 1 : 0;\n      k3 = rankz >= 1 ? 1 : 0;\n      l3 = rankw >= 1 ? 1 : 0;\n      // The fifth corner has all coordinate offsets = 1, so no need to compute that.\n      var x1 = x0 - i1 + G4; // Offsets for second corner in (x,y,z,w) coords\n      var y1 = y0 - j1 + G4;\n      var z1 = z0 - k1 + G4;\n      var w1 = w0 - l1 + G4;\n      var x2 = x0 - i2 + 2.0 * G4; // Offsets for third corner in (x,y,z,w) coords\n      var y2 = y0 - j2 + 2.0 * G4;\n      var z2 = z0 - k2 + 2.0 * G4;\n      var w2 = w0 - l2 + 2.0 * G4;\n      var x3 = x0 - i3 + 3.0 * G4; // Offsets for fourth corner in (x,y,z,w) coords\n      var y3 = y0 - j3 + 3.0 * G4;\n      var z3 = z0 - k3 + 3.0 * G4;\n      var w3 = w0 - l3 + 3.0 * G4;\n      var x4 = x0 - 1.0 + 4.0 * G4; // Offsets for last corner in (x,y,z,w) coords\n      var y4 = y0 - 1.0 + 4.0 * G4;\n      var z4 = z0 - 1.0 + 4.0 * G4;\n      var w4 = w0 - 1.0 + 4.0 * G4;\n      // Work out the hashed gradient indices of the five simplex corners\n      var ii = i & 255;\n      var jj = j & 255;\n      var kk = k & 255;\n      var ll = l & 255;\n      // Calculate the contribution from the five corners\n      var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;\n      if (t0 < 0) n0 = 0.0;\n      else {\n        var gi0 = (perm[ii + perm[jj + perm[kk + perm[ll]]]] % 32) * 4;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad4[gi0] * x0 + grad4[gi0 + 1] * y0 + grad4[gi0 + 2] * z0 + grad4[gi0 + 3] * w0);\n      }\n      var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;\n      if (t1 < 0) n1 = 0.0;\n      else {\n        var gi1 = (perm[ii + i1 + perm[jj + j1 + perm[kk + k1 + perm[ll + l1]]]] % 32) * 4;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad4[gi1] * x1 + grad4[gi1 + 1] * y1 + grad4[gi1 + 2] * z1 + grad4[gi1 + 3] * w1);\n      }\n      var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2;\n      if (t2 < 0) n2 = 0.0;\n      else {\n        var gi2 = (perm[ii + i2 + perm[jj + j2 + perm[kk + k2 + perm[ll + l2]]]] % 32) * 4;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad4[gi2] * x2 + grad4[gi2 + 1] * y2 + grad4[gi2 + 2] * z2 + grad4[gi2 + 3] * w2);\n      }\n      var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;\n      if (t3 < 0) n3 = 0.0;\n      else {\n        var gi3 = (perm[ii + i3 + perm[jj + j3 + perm[kk + k3 + perm[ll + l3]]]] % 32) * 4;\n        t3 *= t3;\n        n3 = t3 * t3 * (grad4[gi3] * x3 + grad4[gi3 + 1] * y3 + grad4[gi3 + 2] * z3 + grad4[gi3 + 3] * w3);\n      }\n      var t4 = 0.6 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;\n      if (t4 < 0) n4 = 0.0;\n      else {\n        var gi4 = (perm[ii + 1 + perm[jj + 1 + perm[kk + 1 + perm[ll + 1]]]] % 32) * 4;\n        t4 *= t4;\n        n4 = t4 * t4 * (grad4[gi4] * x4 + grad4[gi4 + 1] * y4 + grad4[gi4 + 2] * z4 + grad4[gi4 + 3] * w4);\n      }\n      // Sum up and scale the result to cover the range [-1,1]\n      return 27.0 * (n0 + n1 + n2 + n3 + n4);\n    }\n  };\n\n  function buildPermutationTable(random) {\n    var i;\n    var p = new Uint8Array(256);\n    for (i = 0; i < 256; i++) {\n      p[i] = i;\n    }\n    for (i = 0; i < 255; i++) {\n      var r = i + ~~(random() * (256 - i));\n      var aux = p[i];\n      p[i] = p[r];\n      p[r] = aux;\n    }\n    return p;\n  }\n  SimplexNoise._buildPermutationTable = buildPermutationTable;\n\n  function alea() {\n    // Johannes Baagøe <baagoe@baagoe.com>, 2010\n    var s0 = 0;\n    var s1 = 0;\n    var s2 = 0;\n    var c = 1;\n\n    var mash = masher();\n    s0 = mash(' ');\n    s1 = mash(' ');\n    s2 = mash(' ');\n\n    for (var i = 0; i < arguments.length; i++) {\n      s0 -= mash(arguments[i]);\n      if (s0 < 0) {\n        s0 += 1;\n      }\n      s1 -= mash(arguments[i]);\n      if (s1 < 0) {\n        s1 += 1;\n      }\n      s2 -= mash(arguments[i]);\n      if (s2 < 0) {\n        s2 += 1;\n      }\n    }\n    mash = null;\n    return function() {\n      var t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\n      s0 = s1;\n      s1 = s2;\n      return s2 = t - (c = t | 0);\n    };\n  }\n  function masher() {\n    var n = 0xefc8249d;\n    return function(data) {\n      data = data.toString();\n      for (var i = 0; i < data.length; i++) {\n        n += data.charCodeAt(i);\n        var h = 0.02519603282416938 * n;\n        n = h >>> 0;\n        h -= n;\n        h *= n;\n        n = h >>> 0;\n        h -= n;\n        n += h * 0x100000000; // 2^32\n      }\n      return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n    };\n  }\n\n  // amd\n  if (typeof define !== 'undefined' && define.amd) define(function() {return SimplexNoise;});\n  // common js\n  if (typeof exports !== 'undefined') exports.SimplexNoise = SimplexNoise;\n  // browser\n  else if (typeof window !== 'undefined') window.SimplexNoise = SimplexNoise;\n  // nodejs\n  if (typeof module !== 'undefined') {\n    module.exports = SimplexNoise;\n  }\n\n})();\n","import {\n  Num,\n  Vector2,\n} from '@nekobird/rocket';\nimport SimplexNoise from 'simplex-noise';\n\nexport const SNOW_DEFAULT_CONFIG = {\n  initialAngle: 0.1,\n  initialAngleVelocity: 0.05,\n  initialVelocityX: 0,\n  initialVelocityY: 0,\n  mass: 1,\n  maximumSpeed: 100,\n  radius: 10,\n  seedX: 0,\n  seedY: 0,\n  startingX: 0,\n  startingY: 0,\n  imageType: 0,\n  opacity: 1,\n};\n\nexport default class Snow {\n  constructor(config, snowfall) {\n    this.config = {...SNOW_DEFAULT_CONFIG};\n\n    this.setConfig(config);\n\n    this.position = new Vector2(\n      this.config.startingX,\n      this.config.startingY,\n    );\n    this.velocity = new Vector2(\n      this.config.initialVelocityX,\n      this.config.initialVelocityY,\n    );\n    this.acceleration = new Vector2();\n\n    this.angleAcceleration = 0;\n    this.angleVelocity = this.config.initialAngleVelocity;\n    this.angle = this.config.initialAngle;\n\n    this.simplex = new SimplexNoise();\n\n    this.snowfall = snowfall;\n  }\n\n  setConfig(config) {\n    if (typeof config === 'object') {\n      Object.assign(this.config, config);\n    }\n  }\n\n  applyForce(force) {\n    force.divide(this.config.mass);\n    this.acceleration.add(force);\n  }\n\n  applyFriction(frictionCoefficient) {\n    const friction = this.config.frictionCoefficient || frictionCoefficient;\n\n    if (friction !== 0) {\n      const force = this.velocity\n        .clone()\n        .normalize()\n        .multiply(-friction)\n        .multiply(this.config.mass);\n\n      this.applyForce(force);\n    }\n  }\n\n  applyGravity(gravity) {\n    this.applyForce(gravity.multiply(this.config.mass));\n  }\n\n  applyLateralEntropy(t) {\n    const { seedX, seedY } = this.config;\n    const x = this.simplex.noise2D(seedX + t, seedY)\n    const y = this.simplex.noise2D(seedX, seedY + t)\n    // const force = new Vector2(x * 0.5, y * 0.01);\n    const force = new Vector2(x * 0.2 + 0.2, y * 0.01);\n    this.applyForce(force);\n  }\n\n  attract(position) {\n    const directionForce = Vector2.subtract(\n      this.position,\n      position\n    );\n    const distance = directionForce.magnitude;\n\n    if (distance < 10000) {\n      const G = 2;\n      const mass = 1000;\n      const strength = (G * mass * this.config.mass) / (distance * distance);\n      // const strength = 1;\n      directionForce.normalize();\n      directionForce.multiply(-strength);\n      directionForce.multiply(3);\n      this.applyForce(new Vector2(Math.cos(distance), Math.sin(distance)));\n    }\n  }\n\n  repulse(position) {\n    const directionForce = Vector2.subtract(this.position, position);\n    const distance = directionForce.magnitude;\n\n    directionForce.normalize();\n    directionForce.multiply(10000);\n\n    this.applyForce(directionForce);\n  }\n\n  update() {\n    this.life--;\n\n    if (this.life <= 0) {\n      this.die();\n    }\n\n    this.velocity.add(this.acceleration).limit(10);\n    this.position.add(this.velocity);\n    this.acceleration.multiply(0);\n\n    this.angleVelocity += this.angleAcceleration;\n    this.angleVelocity = Num.clamp(this.angleVelocity, -0.1, 0.1);\n    this.angle += this.angleVelocity;\n\n    if (this.position.y > this.snowfall.canvasElement.height) {\n      this.position.x = Math.random() * this.snowfall.canvasElement.width;\n      this.position.y = -10;\n      this.velocity.multiply(0);\n    }\n  }\n}","import {\n  DOMUtil,\n  DOMTraverse,\n  Viewport,\n  Ticker,\n  Vector2,\n  DOMImage,\n  Num,\n} from '@nekobird/rocket';\nimport Snow from './snow';\n\nexport const SNOWFALL_DEFAULT_CONFIG = {\n  targetElement: null,\n  resolutionMultiplier: 2,\n  maximumNumberOfSnowParticles: 1000,\n  snowParticleImages: [],\n  prepareCanvasElement: function(canvasElement) {\n    canvasElement.style.width = '100vw';\n    canvasElement.style.height = '100vh';\n    canvasElement.style.maxWidth = '100%';\n    canvasElement.style.maxHeight = '100%';\n    canvasElement.style.margin = '0';\n  },\n};\n\nexport default class Snowfall {\n  constructor(config) {\n    this.config = {...SNOWFALL_DEFAULT_CONFIG};\n\n    this.setConfig(config);\n\n    this.ticker = new Ticker({\n      loopForever: true,\n      onTick: (...args) => this.tick.apply(this, args)\n    });\n\n    this.snows = [];\n    this.pointerPosition = new Vector2();\n    this.mouseIsDown = false;\n    this.images = [];\n\n    this.orientationVector = new Vector2(0, 1);\n  }\n\n  setConfig(config) {\n    if (typeof config === 'object') {\n      Object.assign(this.config, config);\n    }\n  }\n\n  initialize() {\n    this.createCanvasElement();\n    this.insertCanvasElement();\n\n    if (this.config.snowParticleImages.length > 0) {\n      Promise.all(\n        this.config.snowParticleImages.map(image => {\n          return DOMImage.loadImageFromSource(image).then(data => {\n            this.images.push(data.image);\n            return Promise.resolve();\n          });\n        })\n      ).then(() => this.ticker.start());\n      \n      this.listen();\n    }\n  }\n\n  createCanvasElement() {\n    this.canvasElement = document.createElement('canvas');\n    this.context = this.canvasElement.getContext('2d');\n  }\n\n  insertCanvasElement() {\n    if (\n      this.config.targetElement\n      && this.canvasElement\n      && !DOMTraverse.hasDescendant(\n        this.config.targetElement,\n        this.canvasElement\n      )\n    ) {\n      DOMUtil.prependChild(\n        this.config.targetElement,\n        this.canvasElement,\n      );\n\n      this.config.prepareCanvasElement(this.canvasElement);\n      this.resizeCanvas();\n    }\n  }\n\n  resizeCanvas() {\n    const { resolutionMultiplier } = this.config;\n    this.canvasElement.width = Viewport.width * resolutionMultiplier;\n    this.canvasElement.height = Viewport.height * resolutionMultiplier;\n  }\n\n  spawn() {\n    if (this.snows.length < this.config.maximumNumberOfSnowParticles) {\n      const mass = 0.5 + Math.random();\n      const snow = new Snow(\n        {\n          startingX: Math.random() * this.canvasElement.width,\n          startingY: -10,\n          initialVelocityX: (Math.random() - 0.5) * 4,\n          initialVelocityY: 0,\n          initialAngleVelocity: (Math.random() - 0.5) * 0.2,\n          initialAngle: Math.random() + 0.1,\n          radius: mass * 5 + 2,\n          mass,\n          seedX: Math.random() * 1000,\n          seedY: Math.random() * 1000,\n          imageType: Num.random(this.images.length - 1),\n          opacity: Math.random(),\n        },\n        this,\n      );\n\n      this.snows.push(snow);\n    }\n  }\n\n  tick(n, c) {\n    this.spawn();\n\n    for (let i=0; i < this.snows.length; i++) {\n\n      this.snows[i].applyGravity(this.orientationVector);\n\n      this.snows[i].applyLateralEntropy(c * 0.01) \n      this.snows[i].applyFriction(1);\n\n      this.snows[i].update();\n    }\n\n    this.draw(c);\n  }\n\n  draw() {\n    if (this.context) {\n      const m = this.config.resolutionMultiplier;\n\n      this.context.clearRect(\n        0, 0,\n        this.canvasElement.width, this.canvasElement.height,\n      );\n\n      for (let i = 0; i < this.snows.length; i++) {\n        const snow = this.snows[i];\n        \n        const radius = snow.config.radius * m;\n\n        const { x, y } = snow.position;\n\n        this.context.save();\n\n        this.context.translate(x * m, y * m);\n        this.context.rotate(snow.angle);\n        this.context.transform(1, 0, 0, 1, 0, 0);\n        this.context.translate(-x * m, -y * m);\n\n        this.context.beginPath();\n        const size = radius * m;\n        this.context.globalAlpha = snow.config.opacity;\n        // this.context.globalAlpha = 1;\n        this.context.drawImage(\n          this.images[snow.config.imageType],\n          x * m - (size / 2),\n          y * m - (size / 2),\n          size,\n          size,\n        );\n        \n        // this.context.arc(x, y, radius, 0, Math.PI * 2);\n        // this.context.fillStyle = 'white';\n        this.context.fill();\n\n        this.context.restore();\n      }\n    }\n  }\n\n  resizeHandler() {\n    const m = this.config.resolutionMultiplier;\n    this.canvasElement.width = Viewport.width * m;\n    this.canvasElement.height = Viewport.height * m;\n  }\n\n  listen() {\n    window.addEventListener('resize', this.resizeHandler.bind(this));\n  }\n}\n\nwindow.Snowfall = Snowfall;"]}